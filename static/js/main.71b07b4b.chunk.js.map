{"version":3,"sources":["Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.module.css","Util/diff-dates-in-minutes/index.js","Components/PaperEdits/PaperEdit/ProgramScript/ExportWaveForm sync /^/.//.*/.gif$","Components/PaperEdits/PaperEdit/ProgramScript/ExportWaveForm/cline.gif","Components/PaperEdits/PaperEdit/ProgramScript/ExportWaveForm/line.gif","Components/PaperEdits/PaperEdit/ProgramScript/ExportWaveForm/p2p.gif","Components/PaperEdits/PaperEdit/ProgramScript/ExportWaveForm/point.gif","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ListPage/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/CustomBreadcrumb/index.js","Components/lib/CustomFooter/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","Util/which-js-env/index.js","ApiWrapper/index.js","Components/Projects/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/CustomAlert/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/BatchTranscriptForm.js","Components/Transcripts/NewBatchTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","Components/Transcripts/TranscriptCorrect.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/select-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Word.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/css-color-names.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/ColorOptionsFormGroup.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelForm.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelModal.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEdits/PaperEdit/Transcripts/get-user-selection.js","Components/PaperEdits/PaperEdit/Transcripts/makeListOfUniqueSpeakers.js","Components/PaperEdits/PaperEdit/Transcripts/Transcript.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBarTranscripts/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBarTranscripts/index.js","Components/PaperEdits/PaperEdit/Transcripts/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/Filler.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/ProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/VideoContextPreview/VideoContextProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/Controls.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/VideoContextPreview/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/index.js","Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js","Components/PaperEdits/PaperEdit/ProgramScript/ExportMenuItem/index.js","Components/PaperEdits/PaperEdit/ProgramScript/get-data-from-user-selection.js","Components/PaperEdits/PaperEdit/ProgramScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEdits/PaperEdit/ProgramScript/programme-script-json-to-docx/index.js","Components/PaperEdits/PaperEdit/ProgramScript/ExportWaveForm/index.js","Components/PaperEdits/PaperEdit/ProgramScript/index.js","Components/PaperEdits/PaperEdit/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dt2","dt1","diff","getTime","Math","abs","round","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","SimpleCard","handleDelete","confirm","props","alert","handleEdit","showLinkPath","ListGroup","Item","Row","to","this","style","cursor","Col","xs","sm","md","ld","xl","Card","Title","icon","href","title","Link","Button","onClick","variant","size","faPen","faTrash","Subtitle","className","description","Component","List","listItems","items","item","display","key","filter","height","overflow","React","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","handleSearch","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","InputGroup","Prepend","Text","faSearch","FormControl","onChange","placeholder","aria-label","aria-describedby","Page","results","project","handleUpdateList","searchEl","length","handleShowCreateNewItemForm","block","model","ItemForm","handleTitleChange","event","handleDescriptionChange","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal","Footer","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","modalTitle","Body","CustomBreadcrumb","breadcrumbs","index","link","Breadcrumb","name","active","scoped","backgroundColor","CustomFooter","METHODS","validateRESTMethod","method","getCorsConfig","corsConfig","data","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","a","async","fetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","window","env","API_URL","res","json","projects","getProject","resProject","projectTitle","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","fileName","reject","input","output","ffmpegPath","waveForm","waveFormMode","waveFormColor","DemoApiWrapper","response","_id","status","ok","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","whichJsEnv","undefined","process","versions","electron","console","debug","cep","error","jsENV","log","demoApiWrapper","freeze","apiWrapper","electronWrapper","ElectronWrapper","adobeCEPWrapper","AdobeCEPWrapper","Projects","handleSaveItem","updateProject","then","findItemById","findIndex","element","isNewItemModalShow","itemId","createProject","push","list","p","handleEditItem","showLinkPathToItem","handleDeleteItem","bind","getAllProjects","result","tmpList","deleteProject","newItemsList","Container","marginBottom","marginTop","ListPage","faFolder","color","deleteItem","createNew","editItem","CustomTranscriptCard","errorMessageAlert","Badge","showLink","Alert","faExclamationTriangle","errorMessage","disabled","Spinner","as","animation","role","aria-hidden","faCheck","subtitle","sttEngine","clipName","Accordion","Toggle","eventKey","Collapse","ListPageTranscript","itemsCards","content","lg","handleShowCreateNewBatchForm","CustomAlert","handleDismiss","onClose","dismissible","heading","Heading","message","TranscriptForm","handleAdobeCepSetFilePath","__adobe_cep__","evalScript","path","basename","adobeCepFilePath","handleFileUpload","file","Array","from","files","FormData","append","mediaFileSelected","sendRequest","uploading","get","createTranscript","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","dismissable","accept","NewTranscriptFormModal","BatchTranscriptForm","listOfFilesPath","getAll","filePath","listOfFiles","listOfFileTypes","individualFile","individualFileFormData","multiple","NewBatchTranscriptFormModal","Transcripts","componentWillUnmount","interval","clearInterval","areThereTranscriptsInProgress","newItem","newitems","handleSaveBatch","itemsProps","isNewBatchModalShow","newItems","itemsList","handleSaveEditedItem","newEditedItem","itemIdex","updateTranscript","isEditItemModalShow","handleCloseBatchModal","handleCloseModalEdit","isServerError","setInterval","deleteTranscript","findId","tmpNewList","faFileAlt","PaperEdits","updatePaperEdit","createPaperEdit","getAllPaperEdits","deletePaperEdit","faColumns","Project","context","match","params","projectName","Tabs","activeKey","onSelect","Tab","TranscriptCorrect","componentDidMount","transcriptJson","handleSave","autoSaveData","Date","toLocaleString","redirectToAnnotatePage","renderRedirect","transcriptEditorRef","createRef","mediaType","extname","fluid","transcriptData","mediaUrl","isEditable","autoSaveContentType","handleSaveEditor","colourStyles","control","styles","option","isDisabled","tmpColor","isFocused","isSelected","borderLeft","borderColor","multiValue","border","multiValueLabel","multiValueRemove","speakersColorStyles","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleFilterResults","isShowingFilterOptions","showTextSearchPreferences","showSpeakersSearchPreferences","showLabelsSearchPreferences","Append","faFilter","faTag","isMulti","isSearchable","options","labelsOptions","faUser","speakersOptions","Check","checked","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","text","speaker","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","addWordsToSpeakersParagraphs","findAnnotationInParagraph","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","data-paragraph-text","paragraphTextWithoutPunctuation","width","speakerName","toUpperCase","shortTimecode","unselectable","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","i","dec","floor","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","wordEl","note","csscolors","colorNamesList","splice","cssColorsList","counter","numberOfColor","randomColor","ColorOptionsFormGroup","useState","setColor","handleSetColor","handleColorSelectChange","faSyncAlt","colorValue","chroma","valid","triangle","onChangeComplete","hex","colors","LabelForm","onLabelSaved","defaultValue","onInput","rows","LabelModal","handleShow","openBtn","LabelsList","removeLabel","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","faTimes","labelsList","overflowY","overflowX","isLabelsListOpen","faTags","faCog","onlyCallOnce","cb","duration","timer","args","arguments","clearTimeout","setTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","has","set","Transcript","handleLoadTranscription","componentMounted","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","current","currentTime","play","isShowParagraphsMatchingSearch","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","parse","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","getCurrentWordTime","currentWordTime","time","highlights","src","ref","onTimeUpdate","boxShadow","controls","paddingBottom","paddingTop","ButtonGroup","Dropdown","data-label-id","faHighlighter","flip","data-lable-id","Menu","DropdownButton","drop","margin","onDoubleClick","SearchBarTranscripts","handleTranscriptSearchChange","selectedOptionTranscriptSearch","handleShowAdvancedSearchViewSearchingAcrossTranscripts","faAngleLeft","searchValue","transcriptOptions","selectedOptionTranscriptsSearch","prevState","showAdvancedSearchViewSearchingAcrossTranscripts","transcriptsElNav","Nav","faClock","transcriptsOptions","transcriptsUniqueListOfSpeakers","reduce","prev","curr","concat","transcriptsUniqueListOfSpeakersNoDuplicates","Set","searchBarTranscriptsElement","transcriptsElTab","Pane","searchedParagraphsAcrossTranscripts","t","defaultActiveKey","Content","Filler","percentage","background","borderRadius","ProgressBar","position","opacity","getPercentage","VideoContextProgressBar","useRef","setPercentage","videoContext","setVideoContext","setWidth","useLayoutEffect","offsetWidth","useEffect","fillerAnimation","percent","requestAnimationFrame","offsetX","nativeEvent","playIcon","faPlay","pauseIcon","faPause","stopIcon","faStop","Controls","isPlaying","setIsPlaying","handlePause","handlePlay","handleStop","VideoContextPreview","canvasRef","VideoContext","playlist","sourceStart","node","startAt","stopAt","connect","destination","seconds","pause","vc","toISOString","substr","defaultProps","PreviewCanvas","VoiceOver","faMicrophoneAlt","PaperCut","w","userSelect","TitleHeading","Note","InsertPoint","faArrowAltCircleRight","DragHandle","sortableHandle","faGripLines","sharedStyle","SortableItem","sortableElement","indexNumber","handleAddTranscriptElementToProgrammeScript","handleAddTranscriptSelectionToProgrammeScriptTmpSave","handleChangeInsertPointPosition","isContextMenuVisible","setContextMenuVisibility","customStyle","setStyle","handleContextMenu","faArrowAltCircleLeft","handleAddTranscriptSelectionToProgrammeScript","faPaste","faHeading","onMouseOver","onMouseLeave","SortableContainer","sortableContainer","children","listStyle","ProgrammeScript","onSortEnd","oldIndex","newIndex","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement","ExportMenuItem","tootlipDelay","delay","Tooltip","parseWordElDataset","innerText","getDataFromUserWordsSelection","isOneParagraph","firstword","divideWordsSelectionsIntoParagraphs","previousWordSpeaker","currentParagraph","paragraphsResult","programmeScriptJsonToDocx","edlJson","isWithClipReference","doc","Document","creator","sections","events","HeadingLevel","HEADING_1","spacing","after","TextRun","italics","bold","allCaps","addSection","properties","TITLE","alignment","AlignmentType","CENTER","Packer","toBlob","blob","Example","setShow","setWaveFormMode","setWaveFormColor","Image","require","alt","handleExportAudioPreviewWithVideoWaveform","INSERT_POINT_ELEMENT","ProgramScript","mouseUpListener","document","tmpSelection","isAdvancedSelect","elements","addEventListener","removeEventListener","handleSaveProgrammeScript","handleUpdatePreview","currentElement","newText","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","cuid","insertPointElement","reverse","collapse","getSequenceJsonEDL","edlSq","programmeScriptPaperCutsWithId","currentTranscript","mediaFps","metadata","fps","startTime","endTime","reelName","offset","timecode","sampleRate","getSequenceJsonForFfmpegRemix","source","handleExportEDL","edl","EDL","downloadjs","compose","handleExportADL","firstElement","generateADL","projectOriginator","edits","frameRate","handleExportFCPX","jsonToFCPX","handleExportXML","jsonToAudition","getProgrammeScriptJson","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","programmeScriptJsonToTextPaperCutsOnly","handleExportJson","programmeScriptJson","programmeScriptText","handleCepExportSequence","tmpEdl","premiereCommandString","info","handleExportTxt","handleExportTxtOnyPaperCuts","handleExportDocx","programmeScriptDocx","handleExportDocxWithClipReference","timelineStartTime","resetPreview","handleDoubleClickOnProgrammeScript","latestProgrammeScript","lastSaved","newInsertPoint","handleAdvancedSelectCheckbox","handleDeleteProgrammeScriptContent","handleExportVideoPreview","sequence","programmeScriptTitle","timeNow","exportVideo","handleExportAudioPreview","exportAudio","matchMedia","matches","noGutters","vertical","faPlus","faListUl","faSync","faShare","faInfoCircle","faVideo","Divider","faHeadphones","faFileWord","faFileVideo","faFlask","faFileAudio","ExportWaveForm","TOOLTIP_DEPLAY_IN_MILLISECONDS","faFileCode","toLocaleTimeString","PaperEdit","getProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","faEye","faEyeSlash","span","demoWarningMessage","rel","NoMatch","App","envWarning","offlineWarning","navigator","onLine","exact","component","Boolean","location","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71b07b4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__1kdz6\",\"unselectable\":\"Paragraphs_unselectable__3k2Ob\",\"highlightedWord\":\"Paragraphs_highlightedWord__3mJtY\"};","// https://www.w3resource.com/javascript-exercises/javascript-date-exercise-44.php\nfunction diffDateInMinutes(dt2, dt1) {\n  var diff =(dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= 60;\n  return Math.abs(Math.round(diff));\n }\n\n module.exports = diffDateInMinutes;","var map = {\n\t\"./cline.gif\": 486,\n\t\"./line.gif\": 487,\n\t\"./p2p.gif\": 488,\n\t\"./point.gif\": 489\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 485;","module.exports = __webpack_public_path__ + \"static/media/cline.c9d93ffa.gif\";","module.exports = __webpack_public_path__ + \"static/media/line.8ed85f9f.gif\";","module.exports = __webpack_public_path__ + \"static/media/p2p.8b6575a3.gif\";","module.exports = __webpack_public_path__ + \"static/media/point.08c277d3.gif\";","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <ListGroup.Item>\n        {/* <Card.Body> */}\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                {this.props.icon} <a href={ `#${ this.showLinkPath() }` } >\n                  {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        {/* </Card.Body> */}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          icon={ this.props.icon }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <ListGroup \n      style={ { height: '75vh', overflow: 'scroll' } } \n      // variant=\"flush\"\n      >\n        {listItems}\n      </ListGroup>\n    </>\n    );\n  }\n}\n\nexport default List;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          icon={this.props.icon}\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <>\n      <style scoped>\n        {`\n        .breadcrumb{ \n          background-color: ${this.props.backgroundColor};\n          ${this.props.backgroundColor? ' margin: 0px':''} \n          }\n        `}\n      </style>\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n\n  async exportVideo(data, fileName){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n\n  async exportAudio(data, fileName,waveForm, waveFormMode, waveFormColor){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n        console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n        console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      // try {\n      //   // commenting out because of error \"chdir: Error: process.chdir is not supported\"\n      //   // process.chdir(__dirname);\n      //   // process.chdir('..');\n      //   // console.log('New directory: ' + process.cwd());\n      // }\n      // catch (err) {\n      //   console.log('chdir: ' + err);\n      // }\n      return 'cep';\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default ( () => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n  if (jsENV === 'cep') {\n    const AdobeCEPWrapper = window.AdobeCEPWrapper;\n    const adobeCEPWrapper = new AdobeCEPWrapper();\n    Object.freeze(adobeCEPWrapper);\n\n    return adobeCEPWrapper;\n  }\n})();\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport {HashRouter} from 'react-router-dom';\nimport { faFolder } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n  async componentDidMount () {\n    try {\n    // TODO: do we need to add user id in request?\n      const result = await ApiWrapper.getAllProjects();\n\n      if (result) {\n      // add a display property for component cards search\n        const tmpList = result.map(project => {\n          project.display = true;\n\n          return project;\n        });\n        this.setState({ items: tmpList });\n      }\n    } catch (e) {\n      console.log('Error with ApiWrapper.getAllProjects', e);\n    }\n    // TODO: some error handling\n  };\n\n  // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createProject(item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const projects = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newProject = response.project;\n          newProject.display = true;\n          projects.push(response.project);\n          this.setState({\n            isNewItemModalShow: false,\n            items: projects,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updateProject(item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const project = response.project;\n          // need to add display true attribute for search to the new project\n          project.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          this.findItemById(items, item);\n          const projectIndex = this.state.items.findIndex(element => element.id === project.id);\n          items[projectIndex] = project;\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n    console.log('edit item', item);\n  }\n\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deleteProject(itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (<>\n    <HashRouter>\n      <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb items={ [\n              {\n                name: 'Projects'\n              }\n            ] } />\n          </Col>\n        </Row>\n        <ListPage\n          model={ 'Project' }\n          items={ this.state.items }\n          icon={ <FontAwesomeIcon icon={ faFolder } color=\"#007bff\"/> }\n          handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n          deleteItem={ this.createNew }\n          editItem={ this.createNew }\n          handleEdit={ this.handleEditItem }\n          handleDelete={ this.handleDeleteItem }\n          showLinkPath={ this.showLinkPathToItem }\n          handleUpdateList={ this.handleUpdateList }\n        />\n        <ItemFormModal\n          title={ this.state.title }\n          description={ this.state.description }\n          id={ this.state.itemId }\n          modalTitle={ this.state.itemId ? 'Edit Project' : 'New Project' }\n          show={ this.state.isNewItemModalShow }\n          handleCloseModal={ this.handleCloseModal }\n          handleSaveForm={ this.handleSaveItem }\n        />\n      </Container>\n      {/* <CustomFooter/> */}\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faCheck,\n  faExclamationTriangle,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let errorMessageAlert;\n    let statusBadge;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      statusBadge = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      statusBadge = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={ `#${ this.props.showLink() }` }> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      errorMessageAlert = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={ faExclamationTriangle } />{' '}\n            {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <ListGroup.Item>\n          <Row>\n            <Col xs={ 12 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n              <Card.Title>\n                {this.props.icon ? this.props.icon : ''} {title}\n              </Card.Title>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              {status && status === 'info' ? (\n                <Button variant=\"info\" size=\"sm\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'danger' ? (\n                <Button variant=\"danger\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faExclamationTriangle } />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'success' ? (\n                <Button variant=\"success\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faCheck } />\n                </Button>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {this.props.subtitle}\n              </Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 } >\n          {this.props.sttEngine && this.props.clipName &&  <Accordion>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                <Badge variant=\"light\">Info</Badge>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <>\n                  {this.props.sttEngine?<>STT Engine: <Badge variant=\"light\">{this.props.sttEngine}</Badge></>:null}<br/>\n                  {this.props.clipName? <>File Name: <Badge variant=\"light\">{this.props.clipName}</Badge></>:null}\n                  </>\n                </Accordion.Collapse>\n            </Accordion>}\n            </Col>\n          </Row>\n\n          {errorMessageAlert? <>\n            <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              {errorMessageAlert}\n            </Col>\n          </Row>\n          </>:null}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\nimport whichJsEnv from '../../../Util/which-js-env';\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(transcript => {\n      console.log('transcript', transcript)\n      if (\n        includesText(transcript.title, searchText) ||\n        includesText(transcript.description, searchText) ||\n        includesText(transcript.clipName, searchText) || \n        includesText(transcript.sttEngine, searchText) \n      ) {\n        transcript.display = true;\n\n        return transcript;\n      } else {\n        transcript.display = false;\n\n        return transcript;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                sttEngine={item.sttEngine}\n                clipName={item.clipName}\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <ListGroup \n          style={ { height: '75vh', overflow: 'scroll' } }\n          //  variant=\"flush\"\n           >\n            {itemsCards}\n          </ListGroup>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col xs={ 12 } sm={ 6 } md={ 7 } lg={ 7 } xl={ 7 }>\n            {searchEl}\n          </Col>\n          { (whichJsEnv() !== 'cep')?(\n            <>\n            <Col xs={ 12 } sm={ 3 } md={ 2 } lg={ 2 } xl={ 2 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n            <Col xs={ 12 } sm={ 3 } md={ 3 } lg={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewBatchForm } variant=\"secondary\" size=\"sm\" block>\n                New Batch {this.props.model}s\n            </Button>\n            </Col>\n            </>\n          ): (\n            <Col xs={ 12 } sm={ 6 } md={ 5 } lg={ 5 } xl={ 5 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n          )}\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/#dismissing\nclass CustomAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleDismiss = () => this.setState({ show: false });\n\n  render() {\n    if (this.state.show) {\n      return (\n        <Alert\n          variant={ this.props.variant }\n          onClose={ this.handleDismiss }\n          dismissible\n        >\n          {this.props.heading ? (\n            <Alert.Heading>{this.props.heading}</Alert.Heading>\n          ) : (\n            ''\n          )}\n          {this.props.message}\n        </Alert>\n      );\n    } else {\n      return (\n        <>\n          <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default CustomAlert;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path'; \n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only \n  handleAdobeCepSetFilePath = ()=>{\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`,  (response)=>{\n      console.log('handleAdobeCepSetFilePath');\n      if(response !== \"\"){\n        console.log('handleAdobeCepSetFilePath', response);\n      //  const newFilePath = response;\n      //  fileName = path.basename(newFilePath);\n      // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n       this.setState({\n         title: path.basename(response),\n         adobeCepFilePath: response\n       })\n     }\n     else{\n       // TODO: review logic for edge case\n       alert('select a clip')\n     }\n   })\n  }\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n    if(whichJsEnv() !== 'cep'){\n      formData.append('title', this.state.title);\n      formData.append('description', this.state.description);\n      console.log(\"formData.get('path')\", formData.get('path'));\n    }\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n\n    if (whichJsEnv() === 'cep') {\n  \n      data = {\n        title: this.state.title,\n        description: this.state.description,\n        path: this.state.adobeCepFilePath\n      };\n    \n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n           { (whichJsEnv() === 'cep')?(\n              <>\n              <Button  variant=\"light\" onClick={this.handleAdobeCepSetFilePath} block>Pick a file</Button>\n              <Form.Text className=\"text-muted\">\n                Select an audio or video file to transcribe. Click on a file in the Adobe Premiere project browser window, and the click <code>pick a file</code> to select a file to transcribe. Then \n                click <code>save</code> when you are ready to start the transcriptiion.\n              </Form.Text>\n            </>\n          ):(\n            <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*,.mxf\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n            Select an audio or video file to transcribe\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n              Please chose a audio or video file to transcribe\n            </Form.Control.Feedback>\n          </Form.Group>\n          )}\n          \n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n         \n          \n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      \n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path'; \n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass BatchTranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only \n  handleAdobeCepSetFilePath = ()=>{\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`,  (response)=>{\n      console.log('handleAdobeCepSetFilePath');\n      if(response !== \"\"){\n        console.log('handleAdobeCepSetFilePath', response);\n      //  const newFilePath = response;\n      //  fileName = path.basename(newFilePath);\n      // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n       this.setState({\n         title: path.basename(response),\n         adobeCepFilePath: response\n       })\n     }\n     else{\n       // TODO: review logic for edge case\n       alert('select a clip')\n     }\n   })\n  }\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    console.log('files',files)\n    const formData = new FormData();\n    files.forEach((file,index)=>{\n      formData.append(`file`, file);\n      formData.append(`type`, file.type);\n      if (file.path) {\n        formData.append(`path`, file.path);\n      }\n    })\n    // const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n   \n    // formData.append('file', file);\n    // formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    // if (file.path) {\n    //   formData.append('path', file.path);\n    // }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    // if (this.state.title === '') {\n    //   this.setState({ title: file.name });\n    // }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n    const formData = this.state.formData;\n    const listOfFilesPath = formData.getAll('path');\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      listOfFilesPath.forEach((filePath)=>{\n        data = {\n          title: path.basename(filePath),\n          description: `${path.basename(filePath)}`,\n          path: filePath\n        };\n\n        // if client run inside of electron\n        // is easier to pass another object with title, description\n        // as well as the additional path to the file\n        // rather then parsing a formData object in node etc..\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n\n            }).catch((e) => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: <CustomAlert\n                  dismissable={ true }\n                  variant={ 'danger' }\n                  heading={ 'Error could not contact the server' }\n                  message={ <p>There was an error trying to create this transcript on the server</p> }\n                />\n              });\n            });\n\n          } catch (e) {\n            console.error('error submitting:::', e);\n          }\n\n      })\n      \n    }\n    if(whichJsEnv() === 'browser'){\n      const formData = this.state.formData;\n      const listOfFiles = formData.getAll('file');\n      const listOfFileTypes = formData.getAll('type');\n      listOfFiles.forEach((individualFile,index)=>{\n        const individualFileFormData = new FormData();\n        individualFileFormData.append('file', individualFile);\n        individualFileFormData.append('type',  listOfFileTypes[index]);\n        individualFileFormData.append('title', individualFile.name);\n        individualFileFormData.append('description', '');\n        // individualFileFormData.append('type', file.type);\n        const  data = {\n          title: individualFile.name,\n          description: '',\n          // path: \n        };\n\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, individualFileFormData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n    \n            }).catch((e) => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: <CustomAlert\n                  dismissable={ true }\n                  variant={ 'danger' }\n                  heading={ 'Error could not contact the server' }\n                  message={ <p>There was an error trying to create this transcript on the server</p> }\n                />\n              });\n            });\n    \n        } catch (e) {\n          console.error('error submitting:::', e);\n        }\n      \n      })\n    }\n    if (whichJsEnv() === 'cep') {\n      alert('not implemented in adobe CEP')\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n          <Form.Label>Select Files </Form.Label>\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*,.mxf\"\n              multiple=\"multiple\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n            Select multiple audio or video file to transcribe.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            This allows you to batch transcribe multiple files, the transcript name will default to the clip name.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            You can change the default transcript name after you've clicked save.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            Use command <code>⌘</code> + click or  shift <code>⇧</code> + click to select multiple files.\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n              Please chose a audio or video file to transcribe\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      \n      </>\n    );\n  }\n}\n\nexport default BatchTranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport BatchTranscriptForm from './BatchTranscriptForm';\n\nclass NewBatchTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <BatchTranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewBatchTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport NewBatchTranscriptFormModal from './NewBatchTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      isNewBatchModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n      this.getTranscripts();\n      // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly, \n      // and only if there are items in progress in the list, it checks the backed for updates\n      this.interval = setInterval(() => {\n        console.log('Running interval to check for transcripts');\n        if(this.areThereTranscriptsInProgress(this.state.items)){\n            console.log('interval: checking transcirpt update');\n            this.getTranscripts();\n        }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount =() => {\n    if (this.interval) {\n       clearInterval(this.interval);\n    }\n  }\n\n  getTranscripts = async () =>{\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n      // TODO: add error handling\n      if (result) {\n        const tmpList = result.transcripts.map((item) => {\n          item.display = true;\n\n          return item;\n        });\n        this.setState({\n          projectTitle: result.projectTitle,\n          items: tmpList\n        });\n      }\n  }\n\n  areThereTranscriptsInProgress = (items) => {\n    if (items.length !== 0) {\n      const result = items.find((transcript) => {\n\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  }\n\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState');\n    });\n  }\n\n  // TODO: adjust for multiuple\n  handleSaveBatch = (itemsProps) => {\n    console.log('handleSaveBatch', itemsProps);\n\n    this.setState({\n      isNewBatchModalShow: false\n    })\n\n    if(itemsProps.length){\n      const newItems = itemsProps.map((item)=>{\n        item.display = true;\n        return item;\n      })\n      const { items } = this.state;\n      const itemsList = [ ...items ];\n      const newItemsList = [...itemsList, ...newItems]\n      this.setState({\n        items: newItemsList,\n        title:'',\n        itemId: null,\n        description: '',\n        isNewBatchModalShow: false\n      }, () => {\n        console.log('setState - itemsProps.length', this.state.isNewBatchModalShow);\n      });\n    }else{\n    const newItem = itemsProps;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState - single',  this.state.isNewBatchModalShow);\n    });\n    }\n   \n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      }, () => {\n        console.log('deleted')\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleShowCreateNewBatchForm = ()=>{\n    console.log('handleShowCreateNewBatchForm')\n    this.setState({ isNewBatchModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseBatchModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewBatchModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleShowCreateNewBatchForm={ this.handleShowCreateNewBatchForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            handleCloseBatchModal={ this.handleCloseBatchModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } color=\"#007bff\" /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n\n        <NewBatchTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Batch Transcripts' }\n            show={ this.state.isNewBatchModalShow }\n            handleCloseModal={ this.handleCloseBatchModal }\n            handleSaveForm={ this.handleSaveBatch }\n          />\n          \n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faColumns } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            icon={ <FontAwesomeIcon icon={ faColumns } color=\"#007bff\"/> }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name'\n    };\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  };\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <CustomBreadcrumb items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: this.state.projectName\n                }\n              ] } />\n            </Col>\n          </Row>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={ this.state.key }\n            onSelect={ key => this.setState({ key }) }\n          >\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={ this.state.projectId }/>\n            </Tab>\n            <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n              <PaperEdits projectId={ this.state.projectId } />\n            </Tab>\n          </Tabs>\n        </Container>\n        {/* <CustomFooter/> */}\n      </>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport path from 'path';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport  TranscriptEditor  from 'slate-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\n// import CustomFooter from '../lib/CustomFooter/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomFooter from '../lib/CustomFooter/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        console.log('json',json)\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url,\n          clipName: json.clipName\n        });\n      });\n  }\n\n  handleSave = (autoSaveData) =>{\n    console.log('handleSave', autoSaveData)\n    const data = autoSaveData;\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('ApiWrapper.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // More discrete auto save notification \n        this.setState({\n        savedNotification:  <small className={'text-success'}>Transcript: <b>{this.state.transcriptTitle}</b> has been saved at <b>{(new Date()).toLocaleString()}</b></small>\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    // Workaround to change layout of TranscriptEditor for audio files. \n    // For now only handling limited numnber of file extension that have more of a certainty of being audio\n    // as opposed to more ambiguos extensions such as ogg or mp4 that could be either video or audio\n    // there might be better ways to determine if a clip is audio or video, especially node/\"server side\" but\n    // might also be more of a setup eg using ffprobe etc..\n    let mediaType = 'video';\n    if(path.extname(this.state.clipName) ==='.wav' \n      || path.extname(this.state.clipName) ==='.mp3' \n      || path.extname(this.state.clipName) ==='.m4a' \n      || path.extname(this.state.clipName) ==='.flac' \n      || path.extname(this.state.clipName) ==='.aiff'){\n      mediaType = 'audio'\n    }\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { \n          backgroundColor: '#eee' \n        } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 } style={{marginBottom: '0'}}>\n              <CustomBreadcrumb\n              backgroundColor={ 'transparent'}\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                }\n                ] }\n              />\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson !== null &&\n          <TranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            // showTitle={true}\n            isEditable={ true }// se to true if you want to be able to edit the text\n            title={ this.state.transcriptTitle }\n            mediaType={ mediaType }\n            autoSaveContentType={'digitalpaperedit'}\n            handleSaveEditor={ this.handleSave }\n            // handleAutoSaveChanges={ this.handleSave }\n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowingFilterOptions: false,\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n      this.props.handleShowParagraphsMatchingSearch( !state.showParagraphsMatchingSearch);\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n      \n     });\n   }\n\n   handleFilterResults = ()=>{\n    this.setState((state) => {\n      if(!state.isShowingFilterOptions){\n        this.props.handleShowParagraphsMatchingSearch( true );\n        return {\n          isShowingFilterOptions: true,\n          showTextSearchPreferences: true,\n          showSpeakersSearchPreferences: true,\n          showLabelsSearchPreferences: true,\n          // defaults to show only matching paragraph to be checked\n          showParagraphsMatchingSearch: true\n        };\n      }else{\n        this.props.handleShowParagraphsMatchingSearch( false );\n        return {\n          isShowingFilterOptions: false,\n          showTextSearchPreferences: false,\n          showSpeakersSearchPreferences: false,\n          showLabelsSearchPreferences: false,\n          // remove preferences for showing matching paragraphjs when removing filters\n          showParagraphsMatchingSearch: false\n        };\n      }\n    \n    });\n   }\n\n\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n              <InputGroup.Append>\n                  <InputGroup.Text\n                  style={{cursor: 'pointer'}}\n                    onClick={this.handleFilterResults}\n                    >\n                  <FontAwesomeIcon \n                      icon={ faFilter }\n                      title=\"Filter results\" \n                      />\n                  </InputGroup.Text>\n                   \n                {/* </Button> */}\n              </InputGroup.Append>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by labels...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speakers...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from 'slate-transcript-editor';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) } | Click on a speaker to jump to the corresponding time in the media.` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\nimport { shortTimecode } from 'slate-transcript-editor';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        style={{cursor: 'pointer'}}\n        title={ `start:${ shortTimecode(word.start) } - end:${ shortTimecode(word.end) } | Double click on a word to jump to the corresponding time in the media.` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\" style={{padding: '1em'}}>\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { useState } from 'react';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nfunction ColorOptionsFormGroup(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [color, setColor] = useState(props.color);\n\n  const handleSetColor = (color)=>{\n      console.log('handleSetColor', color);\n      setColor(color);\n      props.handleColorSelectChange(color);\n  }\n\n  const handleRandomiseColor =() => {\n    // this.setState({ color: randomColor() });\n    const tmpColor = randomColor();\n    handleSetColor(tmpColor)\n  }\n\n  const  handleColorPickerChangeComplete = (color) => {\n    // this.setState({ color: chroma(color.hex ).name() });\n    const tmpColor = chroma(color.hex).name();\n    handleSetColor(tmpColor)\n  }\n\n  const handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      // this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n\n      const tmpColor = chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue ;\n      handleSetColor(tmpColor)\n    }\n    else if (e && e.target && e.target.value === '') {\n      // this.setState({ color: '' });\n      handleSetColor('')\n    }\n  }\n\n  // const handleSave = () => {\n  //   // checks color in color picker input is valid - can be color name in letters or hex\n  //   if (chroma.valid(this.state.color)) {\n  //     // checks label name is not empty\n  //     if ( this.state.label !== '') {\n  //       this.props.onLabelSaved({\n  //         value: this.state.color,\n  //         label: this.state.label,\n  //         color: this.state.color,\n  //         description: this.state.description,\n  //         id: this.state.labelId\n  //       });\n\n  //       this.props.handleClose();\n  //     }\n  //     else {\n  //       alert('add a name to the label to be able to save');\n  //     }\n  //   }\n  //   else {\n  //     alert('choose a valid color');\n  //   }\n  // }\n\n\n\n  return (\n    \n <Form.Group controlId=\"formGroupPassword\">\n <Form.Label>Color</Form.Label>\n <Row>\n   <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n     <Button onClick={ handleRandomiseColor } variant=\"light\" size=\"sm\">\n       <FontAwesomeIcon icon={ faSyncAlt } />\n     </Button>\n   </Col>\n   <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n     <Form.Control\n       value={ color }\n       type=\"text\"\n       placeholder=\"#\"\n       onChange={ handleManualColorChange }\n     />\n   </Col>\n   <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n     style={ {\n       backgroundColor: color,\n       border: 'solid',\n       borderWidth:'0.01em',\n       borderColor: 'grey',\n       padding: '1em'\n     } }>\n   </Col>\n </Row>\n <Row>\n   <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n     <Form.Text className=\"text-muted\">\n        To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n     </Form.Text>\n     <GithubPicker\n       width={ '100%' }\n       color={ color }\n       triangle={ 'hide' }\n       onChangeComplete={ handleColorPickerChangeComplete }\n       //   https://casesandberg.github.io/react-color/\n       colors={ colorNamesList }\n     />\n   </Col>\n </Row>\n</Form.Group>\n  );\n}\n\n\n\n\n\n\n\n\nexport default ColorOptionsFormGroup;","import React, { Component } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import {\n//   faSyncAlt\n// } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import { GithubPicker } from 'react-color';\n// import { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\nimport ColorOptionsFormGroup from './ColorOptionsFormGroup.js'\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  // handleRandomiseColor =() => {\n  //   this.setState({ color: randomColor() });\n  // }\n\n  // handleColorPickerChangeComplete = (color) => {\n  //   this.setState({ color: chroma(color.hex ).name() });\n  // }\n\n  // handleManualColorChange = (e) => {\n  //   if (e && e.target && e.target.value) {\n  //     const colorValue = e.target.value;\n  //     this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n  //   }\n  //   else if (e && e.target && e.target.value === '') {\n  //     this.setState({ color: '' });\n  //   }\n  // }\n\n  // TODO: not used?\n  // handleColorSelectChange = color => {\n  //   this.setState({ color: color.color });\n  // };\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n\n          <ColorOptionsFormGroup\n          color={this.props.color}\n          handleColorSelectChange={this.handleColorSelectChange}\n          />\n          {/* <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '1em'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group> */}\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n      \n        <Button variant=\"link\" onClick={ this.handleShow } block>{this.props.openBtn}</Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={2 } md={2 } lg={2 } xl={2 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span><FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /></Button> }\n            </Col>\n            <Col xs={ 1 } sm={2 } md={ 2 } lg={ 2 } xl={ 2 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <div>\n          <Card.Body>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Body>\n          { labelsList }\n          <Card.Body className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <><FontAwesomeIcon icon={ faTag } /> Create New Label</> }\n            />\n          </Card.Body>\n        </div>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n    const result = [];\n    const map = new Map();\n    for (const item of array) {\n      if (!map.has(item.speaker)) {\n        map.set(item.speaker, true); // set any value to Map\n        result.push({\n          value: item.speaker,\n          label: item.speaker\n        });\n      }\n    }\n  \n    return result;\n  }\n\n  export default makeListOfUniqueSpeakers;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\nimport makeListOfUniqueSpeakers from './makeListOfUniqueSpeakers.js';\n// import Paragraph from './Paragraph.js';\n\n\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0,\n      componentMounted: false\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' ApiWrapper.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations,\n          // componentMounted: true\n        });\n      });\n  }\n\n  handleLoadTranscription = () =>{\n    this.setState({\n      componentMounted: true\n    });\n  }\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    ApiWrapper.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = (isShowParagraphsMatchingSearch) => {\n    this.setState({ showParagraphsMatchingSearch: isShowParagraphsMatchingSearch });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      ApiWrapper.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    ApiWrapper.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n    return (\n      <>\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n        <Card style={{\n          // backgroundColor: '#eee', \n            // boxShadow: '0 0 10px #ccc'\n            }}>\n          <Card.Body style={{backgroundColor:'black', padding: '0px'}}>\n          {this.state.componentMounted &&   <video\n              src={ this.props.url }\n              ref={ this.videoRef }\n              onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n              style={ {\n                width: '100%',\n                height:'10em',\n                marginTop: '0em',\n                backgroundColor: 'black',\n                boxShadow: 'none'\n              } }\n            controls/> }\n          </Card.Body>\n          {/* <Card.Body> */}\n          <Card.Body style={{ paddingBottom: '0.5em', paddingTop: '0.5em'}}> \n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown \n                  as={ ButtonGroup } \n                  style={ { width: '100%' } } >\n                    <Button \n                    variant=\"light\"\n                     data-label-id={ 'default' } \n                      onClick={ this.handleCreateAnnotation } \n                    >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split \n                    variant=\"light\" \n                    data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='light'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Body>\n          <Card.Body style={{ paddingBottom: '0px', paddingTop: '0px'}}> \n            <SearchBar\n              labelsOptions={ this.state.labelsOptions }\n              speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n              handleSearch={ this.handleSearch }\n              handleLabelsSearchChange={ this.handleLabelsSearchChange }\n              handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n              handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n            />\n          </Card.Body>\n          <hr style={{ margin: '0px'}}/>\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={{ \n              height: '62.5vh', \n              overflow: 'scroll', \n            // backgroundColor: '#f9f9f9'\n          } }\n          >\n            {highlights}\n\n            {this.props.transcript && !this.state.componentMounted && <Button size=\"lg\" variant=\"light\" onClick={ this.handleLoadTranscription }block>Load transcription</Button>}\n\n            {this.props.transcript && this.state.componentMounted &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleLeft,\n  faTag,\n  faUser,\n  faSearch,\n  faFileAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBarTranscripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowingFilterOptions: false,\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false,\n      selectedOptionTranscriptSearch: false\n    };\n  }\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n      this.props.handleShowParagraphsMatchingSearch( !state.showParagraphsMatchingSearch);\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n      \n     });\n   }\n\n   handleTranscriptSearchChange = selectedOptionTranscriptSearch => {\n    this.props.handleTranscriptSearchChange(selectedOptionTranscriptSearch);\n    this.setState({ selectedOptionTranscriptSearch });\n  };\n\n   /* TODO: move SearchBarTranscripts to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n              <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                 <Button \n                  // block\n                  variant=\"light\"\n                  onClick={this.props.handleShowAdvancedSearchViewSearchingAcrossTranscripts}\n                  title={\"close search across transcript in a project\"}\n                >\n                  <FontAwesomeIcon \n                   icon={ faAngleLeft }\n                  />\n                </Button>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                 <InputGroup >\n                    {/* Search */}\n                    <FormControl\n                      //  TODO: pass labels, speakers, and paragraph pref\n                      onChange={ (e) => { this.props.handleSearch(e, {\n                        showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                        showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                        showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences,\n                        selectedOptionTranscriptSearch: this.state.selectedOptionTranscriptSearch\n                      });} }\n                      value={ this.props.searchValue }\n                      placeholder=\"Search text...\"\n                      aria-label=\"search\"\n                      aria-describedby=\"search\"\n                    />\n                    <InputGroup.Append>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={ faSearch } />\n                      </InputGroup.Text>\n                    </InputGroup.Append>\n                </InputGroup>\n                {/* <Form.Text className=\"text-muted\">\n                Search Text within a transcript \n              </Form.Text> */}\n                </Col>\n               </Row>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faFileAlt } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionTranscriptSearch }\n                     onChange={ this.handleTranscriptSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.transcriptOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by transcripts...' }\n                   />\n                {/* <Form.Text className=\"text-muted\">\n                Filter by transcripts in the current project\n                </Form.Text> */}\n                 </Col>\n               </Row>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speakers...' }\n                   />\n                {/* <Form.Text className=\"text-muted\">\n                  Filter by speaker in the current project\n                </Form.Text> */}\n                 </Col>\n               </Row>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by labels...' }\n                   />\n                {/* <Form.Text className=\"text-muted\">\n                  Filter by labels in the current project\n                </Form.Text> */}\n                 </Col>\n               </Row>\n       </>\n     );\n   }\n}\n\nexport default SearchBarTranscripts;","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle,\n  faSearch\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\nimport SearchBarTranscripts from './SearchBarTranscripts/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport makeListOfUniqueSpeakers from './makeListOfUniqueSpeakers.js';\nimport Paragraphs from './Paragraphs/index.js';\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: '',\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      selectedOptionLabelSearch: [],\n      selectedOptionSpeakerSearch: [],\n      selectedOptionTranscriptsSearch: [],\n      showParagraphsMatchingSearch: false,\n      showAdvancedSearchViewSearchingAcrossTranscripts: false\n    }\n  }\n\n  // New \n  handleSearch = (e, searchPreferences) => {\n    console.log('Transcripts:: SEARCH:::',e.target.value, searchPreferences)\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      // TODO: re introduce this \n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  // To search across all transcripts \n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n  // To search across all transcripts \n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n  // To search across all transcripts \n  handleTranscriptSearchChange = (selectedOptionTranscriptsSearch) => {\n    this.setState({\n      selectedOptionTranscriptsSearch\n    });\n  }\n  // To search across all transcripts \n  handleShowParagraphsMatchingSearch = (isShowParagraphsMatchingSearch) => {\n    this.setState({ showParagraphsMatchingSearch: isShowParagraphsMatchingSearch });\n  }\n\n  // TODO: Not yet implemented - low priority\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      console.log('wordEl',wordEl)\n      // this.videoRef.current.currentTime = wordEl.dataset.start;\n      // this.videoRef.current.play();\n    }\n  };\n\n  handleFilterResults = ()=>{\n    console.log('handleFilterResults')\n    this.setState({\n      searchString: '',\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      selectedOptionLabelSearch: [],\n      selectedOptionSpeakerSearch: [],\n      selectedOptionTranscriptsSearch: []\n    })\n  }\n\n  handleShowAdvancedSearchViewSearchingAcrossTranscripts = ()=>{\n    this.setState((prevState) => {\n      if(!prevState.showAdvancedSearchViewSearchingAcrossTranscripts){\n        return  {\n          showAdvancedSearchViewSearchingAcrossTranscripts: true,\n          // in this advanced search view - when searchign across paragraphs always show paragraphs matching searches\n          // which means segmenting transcript to show only paragraphs that metch serching criteria \n          showParagraphsMatchingSearch: true \n        };\n      }else{\n        return {\n          showAdvancedSearchViewSearchingAcrossTranscripts: false,\n          // in this advanced search view - when searchign across paragraphs always show paragraphs matching searches\n          // which means segmenting transcript to show only paragraphs that metch serching criteria \n          showParagraphsMatchingSearch: false,\n          // reset search if closing view  \n          selectedOptionLabelSearch: [],\n          selectedOptionSpeakerSearch: [],\n          selectedOptionTranscriptsSearch: []\n        };\n      }\n    })\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      // Note: that if there are transcripts in progress, current setup\n      // won't show when they are done in this view\n      // only in project's view list of transcript you get a UI update when they are done \n      return (\n        <Nav.Item key={ transcript.id  }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            eventKey={ transcript.id }\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { (transcript.status !=='done' && transcript.status !== 'in-progress' )|| transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    // id - value - label - color - description \n    // const transcriptOptions = [{value: 'test', label: 'test'}];\n    const transcriptsOptions = this.props.transcripts.map((transcript)=>{\n      if(transcript.id && transcript.transcriptTitle ){\n        return {\n         id: transcript.id,\n         value: transcript.id,\n         label: transcript.transcriptTitle,\n         description: transcript.description,\n         status: transcript.status \n        }\n      }else{\n        return {\n         status: transcript.status \n        }\n      }\n    }) // Filter to show only transcripts that are done. excluding in progress and errored \n    .filter((transcript)=>{\n     return transcript.status ==='done'\n    })\n    \n    const transcriptsUniqueListOfSpeakers2D = this.props.transcripts.map((transcript)=>{\n      if(transcript.transcript &&transcript.transcript.paragraphs){\n        return makeListOfUniqueSpeakers(transcript.transcript.paragraphs)\n      }\n      else{\n        return {value: 'test', label: 'test'}\n      }\n      \n    })\n    const transcriptsUniqueListOfSpeakers = transcriptsUniqueListOfSpeakers2D.reduce(function(prev, curr) {\n      return prev.concat(curr);\n    });\n    // remove duplicates \n    function removeDuplicates(array) {\n      //  https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n      return Array.from(new Set(array.map(JSON.stringify))).map(JSON.parse);\n    };\n    const transcriptsUniqueListOfSpeakersNoDuplicates = removeDuplicates(transcriptsUniqueListOfSpeakers)\n   \n    /* TODO: Will this work? */\n    const searchBarTranscriptsElement = <SearchBarTranscripts\n      labelsOptions={  this.props.labelsOptions }\n      speakersOptions={ transcriptsUniqueListOfSpeakersNoDuplicates }\n      handleSearch={ this.handleSearch }\n      searchValue={this.state.searchString}\n      handleLabelsSearchChange={ this.handleLabelsSearchChange }\n      handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n      handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n      transcriptOptions={ transcriptsOptions}\n      handleTranscriptSearchChange={this.handleTranscriptSearchChange}\n      handleFilterResults={this.handleFilterResults}\n      handleShowAdvancedSearchViewSearchingAcrossTranscripts={this.handleShowAdvancedSearchViewSearchingAcrossTranscripts}\n    />\n\n    const transcriptsElTab = this.props.transcripts.map((transcript,) => {\n      return (\n        <Tab.Pane key={ transcript.id } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n   const  searchedParagraphsAcrossTranscripts = this.props.transcripts.map((transcript, index)=>{\n     if(transcript.transcript && this.state.selectedOptionTranscriptsSearch.find((t)=> {return transcript.id === t.id})){\n      return <Paragraphs\n        labelsOptions={ this.props.labelsOptions }\n        annotations={transcript.annotations? transcript.annotations : []}\n        transcriptJson={ transcript.transcript }\n        searchString={ this.state.searchString ? this.state.searchString : '' }\n        showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n        selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n        selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n        transcriptId={ transcript.id }\n        handleTimecodeClick={ this.handleTimecodeClick }\n        // TODO: these attributes below have not been implemented - low priority \n        // handleWordClick={ ()=>{alert('not implemented in this view, switch to individual transcript')}}\n        handleWordClick={ this.handleWordClick }\n        // handleDeleteAnnotation={ this.handleDeleteAnnotation }\n        handleDeleteAnnotation={ ()=>{ alert('not implemented in this view, switch to individual transcript') } }\n        // handleEditAnnotation={ this.handleEditAnnotation }\n        handleEditAnnotation={ ()=>{ alert('not implemented in this view, switch to individual transcript') } }\n      />\n     } else {\n       return null;\n     }\n    })\n\n    return (\n      <>\n       <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n         >\n          <Row>\n        \n          <Col sm={  !this.state.showAdvancedSearchViewSearchingAcrossTranscripts? 3 : 0 }>\n          { !this.state.showAdvancedSearchViewSearchingAcrossTranscripts?  <>\n                <Button  \n              onClick={this.handleShowAdvancedSearchViewSearchingAcrossTranscripts}\n              variant={\"light\"} \n              block\n              title={'Search across transcripts in this project'}\n              size={'sm'}\n             ><FontAwesomeIcon icon={faSearch}/> Project's Transcripts\n           </Button>\n              <hr/>\n             \n              <Nav variant=\"pills\" className=\"flex-column\">\n                <div style={{height: '97vh', overflow: 'scroll'}}>\n                { transcriptsElNav }\n                </div>\n              </Nav> \n                    </>   : null }\n            </Col>\n   \n            <Col sm={ !this.state.showAdvancedSearchViewSearchingAcrossTranscripts ? 9 : 12 }>\n              <Tab.Content>\n                { this.state.showAdvancedSearchViewSearchingAcrossTranscripts ? <> {searchBarTranscriptsElement}\n                \n                <section style={{ \n                  height: '80vh', \n                  overflow: 'auto',\n                  border: 'solid',\n                  borderWidth: '0.01em',\n                  borderColor: 'lightgrey'\n                  }}>\n                {searchedParagraphsAcrossTranscripts}\n                </section>\n                \n                </>:<> \n                {transcriptsElTab} \n                </> } \n             \n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React from 'react';\n\nconst Filler = (props) => {\n  return <div style={ {\n    width: `${ props.percentage }%`,\n    background: 'red',\n    height: '100%',\n    borderRadius: 'inherit'\n  } } />;\n};\n\nexport default Filler;\n","import React from 'react';\nimport Filler from './Filler';\n\nconst ProgressBar = (props) => {\n\n  return (\n    <div onClick={ props.onClick }\n      style={ {\n        position: 'relative',\n        height: '12px',\n        width: '100%',\n        opacity: '1'\n      } } >\n      <Filler percentage={ props.percentage }></Filler>\n    </div>\n\n  );\n};\nexport default ProgressBar;\n","import React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport ProgressBar from '../ProgressBar';\nimport PropTypes from 'prop-types';\n\nconst getPercentage = (currentTime, duration) => currentTime / duration * 100;\n\nconst VideoContextProgressBar = (props) => {\n  const ref = useRef();\n\n  const [ percentage, setPercentage ] = useState(0);\n  const [ videoContext, setVideoContext ] = useState();\n  const [ width, setWidth ] = useState(0);\n\n  const handleClick = ({ nativeEvent: { offsetX } }) => {\n    videoContext.currentTime = (offsetX / width) * videoContext.duration;\n    const percent = getPercentage(videoContext.currentTime, videoContext.duration);\n    setPercentage(percent);\n  };\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      setWidth(ref.current.offsetWidth);\n    }\n  }, [ ref ]);\n\n  useEffect(() => {\n    const fillerAnimation = () => {\n      const percent = getPercentage(videoContext.currentTime, videoContext.duration);\n      setPercentage(percent);\n      requestAnimationFrame(fillerAnimation);\n    };\n\n    setVideoContext(props.videoContext);\n\n    if (videoContext) {\n      fillerAnimation();\n    }\n  }, [ props.videoContext, videoContext ]);\n\n  return (\n    <div ref={ ref } style={ { width:'100%' } }>\n      <ProgressBar onClick={ handleClick } percentage={ percentage } />\n    </div>\n  );\n};\n\nVideoContextProgressBar.propTypes = {\n  videoContext: PropTypes.any\n};\n\nexport default VideoContextProgressBar;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nconst playIcon = <FontAwesomeIcon icon={ faPlay } />;\nconst pauseIcon = <FontAwesomeIcon icon={ faPause } />;\nconst stopIcon = <FontAwesomeIcon icon={ faStop } />;\n\nconst Controls = (props) => {\n\n  const [ isPlaying, setIsPlaying ] = useState(false);\n\n  const handlePlay = () => {\n    props.handlePlay();\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    props.handlePause();\n    setIsPlaying(false);\n  };\n\n  const handleStop = () => {\n    props.handleStop();\n    setIsPlaying(false);\n  };\n\n  return (\n    <>\n      <Col sm={ 6 }>\n        <Button\n          size=\"sm\"\n          block\n          variant=\"light\"\n          onClick={ isPlaying ? handlePause : handlePlay }\n        >\n          { isPlaying ? pauseIcon : playIcon }\n        </Button>\n      </Col>\n      <Col\n        sm={ 6 }\n      >\n        <Button\n          size=\"sm\"\n          block\n          variant=\"light\"\n          onClick={ handleStop }\n        >\n          { stopIcon }\n        </Button>\n      </Col>\n    </>\n  );\n};\n\nexport default Controls;\n\nControls.propTypes = {\n  handleStop: PropTypes.any,\n  handlePlay: PropTypes.any,\n  handlePause: PropTypes.any\n};\n","import React, { useState, useEffect } from 'react';\nimport VideoContextProgressBar from './VideoContextProgressBar';\nimport Controls from '../Controls';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport VideoContext from 'videocontext';\n\nconst VideoContextPreview = (props) => {\n  const [ videoContext, setVideoContext ] = useState();\n\n  const updateVideoContext = (media) => {\n    media.forEach(({ type, sourceStart, start, duration, src }) => {\n      const node = videoContext[type](src, sourceStart);\n      node.startAt(start);\n      node.stopAt(start + duration);\n      node.connect(videoContext.destination);\n    });\n  };\n\n  const handleStop = () => {\n    videoContext.pause();\n    setVideoContext(vc => {\n      vc.currentTime = 0;\n\n      return vc;\n    });\n  };\n\n  useEffect(() => {\n    if (props.canvasRef && props.canvasRef.current) {\n      setVideoContext(new VideoContext(props.canvasRef.current));\n    }\n\n  }, [ props.canvasRef ]);\n\n  if (videoContext) {\n    updateVideoContext(props.playlist);\n  }\n\n  const secondsToHHMMSSFormat = (seconds) => {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  };\n\n  return (\n    <>\n      <Row\n        className={ 'justify-content-center' }\n        style={ { backgroundColor: 'black' } }\n      >\n        <canvas\n          ref={ props.canvasRef }\n          width={ props.width }\n          height={ props.width * 0.5625 }\n        />\n      </Row>\n      <Row\n        className={ 'justify-content-center' }\n        style={ { backgroundColor: 'lightgrey' } }\n      >\n        <VideoContextProgressBar videoContext={ videoContext }/>\n      </Row>\n      <Row style={ { marginTop: '0.4em' } }>\n        <Controls\n          handlePlay={ videoContext ? () => videoContext.play() : () => console.log('handlePlay') }\n          handlePause={ videoContext ? () => videoContext.pause() : () => console.log('handlePause') }\n          handleStop={ videoContext ? () => handleStop() : () => console.log('handleStop') }\n        />\n      </Row>\n      <Row className={ 'justify-content-center' }>\n        Total duration: {videoContext ? secondsToHHMMSSFormat(videoContext.duration) : '00:00:00'}\n      </Row>\n    </>\n  );\n};\n\nVideoContextPreview.propTypes = {\n  canvasRef: PropTypes.any,\n  playlist: PropTypes.array,\n  videoContext: PropTypes.any,\n  width: PropTypes.any\n};\n\nVideoContextPreview.defaultProps = {\n  playlist: []\n};\n\nexport default VideoContextPreview;\n","/* eslint-disable react/prop-types */\nimport React, { useRef } from 'react';\nimport VideoContextPreview from './VideoContextPreview';\nimport PropTypes from 'prop-types';\n\nconst PreviewCanvas = props => {\n  const canvasRef = useRef();\n\n  return (\n    <VideoContextPreview\n      width={ props.width }\n      canvasRef={ canvasRef }\n      playlist={ props.playlist }\n    />\n  );\n};\n\nPreviewCanvas.propTypes = {\n  playlist: PropTypes.array,\n  width: PropTypes.number\n};\n\nPreviewCanvas.defaultProps = {\n  playlist: []\n};\n\nexport default PreviewCanvas;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w, index) => {return (\n        // eslint-disable-next-line react/jsx-key\n        <span\n          // TODO: add w.id to words to us as index?\n          key={ w.start + index }\n          className=\"words\"\n          title={ `stat: ${ w.start }- end: ${ w.end }` }\n          data-start={ w.start }\n          data-end={ w.end }\n        >{w.text} </span>);});\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component,useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight,\n  faTimes,\n  faHeading,\n  faMicrophoneAlt,\n  faStickyNote,\n  faPaste\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: '#f9f9f9' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span style={{ cursor: 'move'}}> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\nconst sharedStyle = {\n  border:'none',\n  width: '100%',\n  marginTop: '0.75em',\n  height: '0.1em',\n  backgroundColor: 'lightgrey',\n}\n\nconst SortableItem = sortableElement(({ \n  indexNumber, \n  value, \n  type, \n  handleDelete, \n  handleEdit, \n  handleAddTranscriptElementToProgrammeScript,\n  handleAddTranscriptSelectionToProgrammeScriptTmpSave,\n  handleChangeInsertPointPosition \n} ) => {\n\n  const [isContextMenuVisible, setContextMenuVisibility] = useState(false);\n\n  const [customStyle, setStyle] = useState({ \n      ...sharedStyle,\n      // backgroundColor: '#f9f9f9',\n      backgroundColor: 'transparent'\n    });\n\n  const handleContextMenu = (event) =>{\n    event.preventDefault();\n    setContextMenuVisibility(true)\n  }\n\n  const handleAddTranscriptSelectionToProgrammeScript =(indexNumber)=>{\n    handleAddTranscriptSelectionToProgrammeScriptTmpSave(indexNumber);\n  }\n\n  return (<li style={{\n    //  borderStyle: 'dashed',\n    // borderWidth: '0.01em',\n    // borderColor: 'lightgray',\n    // padding: '1.5em'\n  }\n    }>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } style={{ cursor: 'pointer'}} icon={ faPen } onClick={ () => { handleEdit(indexNumber); } } /> : null}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n        {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' }   style={{ cursor: 'pointer'}} icon={ faTrash } onClick={ () => {handleDelete(indexNumber);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n      <Row>\n    {isContextMenuVisible? \n      <ButtonGroup size=\"sm\" block style={{ cursor: 'pointer', width:'100%', \n      // border:'solid 0.06em lightgrey', \n      // paddingBottom: '0.01em'\n      }}>\n        <Button variant=\"light\" \n          onClick={()=>{setContextMenuVisibility(false);}} \n        ><FontAwesomeIcon icon={faTimes}/></Button>\n         <Button variant=\"light\" \n          onClick={()=>{handleAddTranscriptSelectionToProgrammeScript(indexNumber); setContextMenuVisibility(false)}}\n        ><FontAwesomeIcon icon={ faPaste } /> Paste Selection</Button>\n        <Button variant=\"light\" \n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('title',indexNumber); setContextMenuVisibility(false)}}\n        ><FontAwesomeIcon icon={ faHeading } /> Heading</Button>\n        <Button variant=\"light\"\n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('voice-over',indexNumber); setContextMenuVisibility(false)}} \n        ><FontAwesomeIcon icon={ faMicrophoneAlt } />  Voice over</Button>\n        <Button variant=\"light\"\n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('note',indexNumber);  setContextMenuVisibility(false)}}  \n        ><FontAwesomeIcon icon={ faStickyNote } /> Note</Button>\n           <Button variant=\"light\"\n          onClick={()=>{handleChangeInsertPointPosition(indexNumber);  setContextMenuVisibility(false)}}  \n          title={'move insert point'}\n        >Move insert Point<FontAwesomeIcon icon={ faArrowAltCircleRight } /><FontAwesomeIcon icon={ faArrowAltCircleLeft } /></Button>\n      </ButtonGroup> \n    : null }\n    </Row>\n      </Col>\n    </Row>\n    <Row>\n   \n    <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } \n        style={{ cursor: 'context-menu'}}\n        onMouseOver={()=>{\n          setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'lightgrey'\n        });\n      }}\n        onMouseLeave={()=>{\n          setStyle({ \n          ...sharedStyle,\n           backgroundColor: 'transparent',\n            // backgroundColor: '#f9f9f9'\n        });\n      }}\n        onClick={handleContextMenu}\n        >\n         {customStyle.backgroundColor === 'lightgrey'? <span style={{color:'grey'}}>{'+'}</span>:null}\n    </Col>\n    <Col xs={ 11 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 } \n          style={{ cursor: 'context-menu'}}\n          onMouseOver={()=>{\n          setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'lightgrey'\n        })}}\n      onMouseLeave={()=>{\n        setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'transparent'\n          //  backgroundColor: '#f9f9f9'\n        });\n        // setContextMenuVisibility(false);\n      }}\n        onClick={handleContextMenu}\n        >\n      <div  className={'insertDiv'} style={customStyle} \n      ></div>\n    </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el,index) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => {\n          return <SortableItem\n            key={ `item-${ index }` }\n            index={index}\n            indexNumber={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n            handleAddTranscriptElementToProgrammeScript={this.props.handleAddTranscriptElementToProgrammeScript}\n            handleAddTranscriptSelectionToProgrammeScriptTmpSave={this.props.handleAddTranscriptSelectionToProgrammeScriptTmpSave}\n            handleChangeInsertPointPosition={this.props.handleChangeInsertPointPosition}\n          />\n        })}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n","import React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nfunction ExportMenuItem({onClick, title, text, tootlipDelay}) {\n \n  return (\n    <OverlayTrigger\n        placement={'left'}  \n        delay={tootlipDelay}\n         overlay={\n        <Tooltip >\n            {title}\n        </Tooltip>\n            }>\n    <Dropdown.Item \n        variant=\"light\" \n        eventKey=\"1\"\n        onClick={onClick}\n        // title={title}\n        >\n        {text}\n    </Dropdown.Item>\n  </OverlayTrigger>\n  );\n}\n\nexport default ExportMenuItem;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: parseFloat(wordEl.dataset.start),\n    end: parseFloat(wordEl.dataset.end),\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import {\n    Document,\n    HeadingLevel,\n    AlignmentType,\n    Paragraph,\n    TextRun,\n    Packer\n} from 'docx';\nimport {secondsToTimecode, timecodeToSeconds, shortTimecode} from \"slate-transcript-editor\";\n\nconst programmeScriptJsonToDocx = (edlJson,isWithClipReference) => {\n    console.log('edlJson', edlJson.title)\n    const transcriptTitle = edlJson.title;\n\n    const doc = new Document({creator: 'Test', description: 'Test Description', title: transcriptTitle});\n\n    // add body\n    const sections = []\n    edlJson.events.forEach((event) => {\n        if (event.type === 'title') { \n            sections.push(new Paragraph({\n                text: event.text,\n                heading: HeadingLevel.HEADING_1,\n                spacing: {\n                    after: 200\n                }\n            }))\n        } else if (event.type === 'voice-over') {\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({ \n                        text: `Voice Over:\\t`, \n                        italics: false, \n                        bold: true\n                    }),\n                    new TextRun({\n                        text: `${ event.text}`\n                    }),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n        } else if (event.type === 'note') { \n            sections.push(new Paragraph({\n                children: [\n                    new TextRun(\n                        {text: `Notes:\\t`, italics: true, bold: true}\n                    ),\n                    new TextRun(\n                        {text: `${\n                                event.text\n                            }`, italics: true}\n                    ),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n\n        } else if (event.type === 'paper-cut') {\n            const text = event.words.map((word) => {\n                return word.text;\n            }).join(' ');\n\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({\n                        text: `${event.speaker}\\t`, \n                        bold: true,\n                        allCaps: true\n                    }),\n                    new TextRun({\n                        text: `${text}`\n                    })\n                ],\n                spacing: {\n                    after: 100\n                }\n            }))\n\n            if(isWithClipReference){\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({\n                        text: `${event.clipName}\\t [${shortTimecode(event.start)} - ${shortTimecode(event.end)}]`,\n                        size: 18\n                    }),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n            }\n        }\n\n        return null;\n    });\n\n    // Add transcription title\n    doc.addSection({\n        properties: {},\n        children: [\n            new Paragraph(\n                { text: transcriptTitle, heading: HeadingLevel.TITLE, alignment: AlignmentType.CENTER}\n            ),\n            ... sections\n        ]\n    });\n\n    return new Promise((resolve, reject) => {\n        return Packer.toBlob(doc).then(blob => {\n            console.log(blob);\n            resolve(blob)\n            console.log(\"Document created successfully\");\n        }).catch((error) => {\n            reject(error)\n        })\n    })\n}\n\nexport default programmeScriptJsonToDocx\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Image from 'react-bootstrap/Image';\nimport ColorOptionsFormGroup from '../../Transcripts/LabelsList/ColorOptionsFormGroup.js'\n\n\nfunction Example(props) {\n    const [show, setShow] = useState(false);\n    const [waveFormMode, setWaveFormMode] = useState('cline');\n    const [waveFormColor, setWaveFormColor] = useState('blue');\n\n    const handleClose = () => setShow(false);\n    const  handleSubmit = () =>{\n        props.handleExportAudioPreviewWithVideoWaveform({waveFormMode, waveFormColor});\n        setShow(false)\n    };\n    const handleShow = () => setShow(true);\n\n\n   const handleColorSelectChange = color => {\n        // this.setState({ color: color });\n        console.log('handleColorSelectChange', color)\n        setWaveFormColor(color)\n  };\n\n \n  const handleSetWaveFormMode = (e)=>{\n    const mode = e.target.value;\n      console.log('handleSetWaveFormMode', mode)\n\n    setWaveFormMode(mode);\n  }\n  \n    return (\n      <>\n        <Dropdown.Item \n            variant=\"light\" \n            eventKey=\"1\"\n            onClick={handleShow}\n            // title={title}\n            >\n            {props.text}\n        </Dropdown.Item>\n\n        {/* <ExportMenuItem\n            tootlipDelay={props.TOOLTIP_DEPLAY_IN_MILLISECONDS}\n            onClick={ ()=>{props.handleExportAudioPreviewWithVideoWaveform({waveFormMode:'cline'}) }}\n            title={props.title}\n            text={props.text}\n        />\n   */}\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Export audio as video waveform</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Select waveform style</Form.Label>\n            <Form.Control as=\"select\" onChange={handleSetWaveFormMode}>\n                <option value=\"cline\">cline</option>\n                <option value=\"point\">point</option>\n                <option value=\"p2p\">p2p</option>\n                <option value=\"line\">line</option>\n            </Form.Control>\n         </Form.Group>\n         <Image src={require(`./${waveFormMode}.gif`)} alt=\"loading...\" fluid/>\n          <ColorOptionsFormGroup\n          color={waveFormColor}\n          handleColorSelectChange={handleColorSelectChange}\n          />\n\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\nexport default Example;","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport cuid from 'cuid';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\nimport PreviewCanvas from './PreviewCanvas2/index.js';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Overlay from 'react-bootstrap/Overlay';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport EDL from '@pietrop/edl-composer';\nimport generateADL from '@pietrop/aes31-adl-composer';\nimport jsonToFCPX from '@pietrop/fcpx-xml-composer';\nimport jsonToAudition from 'audition-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faTrash,\n  faListUl,\n  faJsSquare,\n  faFileCode,\n  faFilm,\n  faFileVideo,\n  faStream,\n  faFileAudio,\n  faHeadphones,\n  faVideo,\n  faFileWord,\n  faFileAlt,\n  faFlask\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScript from './ProgrammeScript.js';\nimport ExportMenuItem from './ExportMenuItem';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs/index.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\nimport whichJsEnv from '../../../../Util/which-js-env';\nimport programmeScriptJsonToDocx from './programme-script-json-to-docx/index.js';\nimport diffDateInMinutes from '../../../../Util/diff-dates-in-minutes';\nimport ExportWaveForm from './ExportWaveForm';\n\nconst TOOLTIP_DEPLAY_IN_MILLISECONDS = 3000;\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\nconst INSERT_POINT_ELEMENT = { type: 'insert-point', text: 'Insert Point to add selection' }\n\nclass ProgramScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastSaved: new Date(),\n      programmeScript: null,\n      resetPreview: false,\n      isAdvancedSelect: false,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ]\n    };\n  }\n\n   mouseUpListener = ()=>{\n    // makign sure mouse up event is also associated with a selection \n    if (window.getSelection|| document.selection) {\n      const result = getDataFromUserWordsSelection();\n      if (result) {\n        this.setState({tmpSelection: result})\n        // if advanced select is on, copy over to programme scfript\n        if(this.state.isAdvancedSelect){\n          this.handleAddTranscriptSelectionToProgrammeScript()\n        }\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push(INSERT_POINT_ELEMENT);\n        this.setState({\n          programmeScript: programmeScript\n        });\n      });\n      // listening for word selections in transcripts\n      // to save those tmp selection to enable to \n      // use contextual menu in programme script to \n      // paste those selections in the programme script\n      document.addEventListener('mouseup',this.mouseUpListener)\n  }\n  componentWillUnmount = ()=>{\n    // removing selection listener\n    try {\n      document.removeEventListener('mouseup',this.mouseUpListener);\n    } catch (error) {\n     console.error('error removing listener mouseup', error)\n    }\n  }\n\n  // TODO: save to server\n  handleProgrammeScriptOrderChange = (list) => {\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    },()=>{\n      this.handleSaveProgrammeScript()\n      this.handleUpdatePreview();\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDeleteProgrammeScriptElement = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    },()=>{\n      this.handleSaveProgrammeScript();\n      this.handleUpdatePreview();\n    }\n    );\n  }\n\n  handleEditProgrammeScriptElement = (i) => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      },()=>{\n          this.handleSaveProgrammeScript();\n          // For now programme script elements other\n          // than paper cuts don't show in preview canvas\n          // so commenting this out for now\n          // this.handleUpdatePreview();\n      });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType, indexNumber) => {\n    console.log('handleAddTranscriptElementToProgrammeScript', elementType, indexNumber)\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      if(text){\n        let indexOfInsertPoint = 0;\n        if(indexNumber || indexNumber ===0 ){\n          indexOfInsertPoint = indexNumber+1;\n        }else{\n          indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n        }\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: elementType,\n          text: text\n        };\n\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n        // TODO: save to server\n        this.setState({\n          programmeScript: programmeScript\n        },()=>{\n          this.handleSaveProgrammeScript()\n        });\n      }\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert-point';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  handleAddTranscriptSelectionToProgrammeScriptTmpSave =(indexNumber)=>{\n    // getting results of word selection from tmpSelection in state\n    // tmpSelection in populated via the on mouse app selection listener\n    // initialised in componentDidMount\n    const result = this.state.tmpSelection;\n    // extra validation to make sure it doesn't accidentally try to paste paper-cuts\n    // if the user selects those words \n    if (result && result.transcriptId && result.speaker) {\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n      let indexOfInsertPoint = 0;\n        if(indexNumber || indexNumber ===0 ){\n          indexOfInsertPoint = indexNumber+1;\n        }else{\n          indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n        }\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      }, ()=>{\n        this.handleSaveProgrammeScript();\n        this.handleUpdatePreview();\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n    }\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = (e, indexNumber) => {\n    const result = getDataFromUserWordsSelection();\n    if (result) {\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // insert at insert point\n      let indexOfInsertPoint = 0;\n      if(indexNumber || indexNumber === 0 ){\n          indexOfInsertPoint = indexNumber+1;\n        }else{\n          indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n        }\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      }, ()=>{\n        this.handleSaveProgrammeScript();\n        this.handleUpdatePreview();\n        // clearing the selection to avoid bugs\n        window.getSelection().collapse(document,0);\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        let mediaFps = defaultFps;\n        if(currentTranscript.metadata && currentTranscript.metadata.fps && (currentTranscript.metadata.fps!== 'NA')){\n          mediaFps = currentTranscript.metadata.fps\n        }\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: mediaFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  getSequenceJsonForFfmpegRemix = () => {\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log(element)\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n         // TODO: add a check that exports only if urls all contain mp4s, if not cannot send to ffmpeg-remix(?)\n        const result = {\n          start: parseFloat(element.start),\n          end: parseFloat(element.end),\n          // duration: element.end-element.start,\n          source: `${ currentTranscript.url }`,\n        };\n        return result;\n      }\n      return null;\n    }).filter((el) => {return el !== null;});\n\n    return programmeScriptPaperCuts;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/@pietrop/edl-composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    let mediaFps = defaultFps;\n    if(firstElement.fps && (firstElement.fps!== 'NA')){\n      mediaFps = firstElement.fps\n    }\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: mediaFps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  handleExportXML = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const result = jsonToAudition(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.xml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        let mediaFps = defaultFps;\n        if(currentTranscript.metadata && currentTranscript.metadata.fps && (currentTranscript.metadata.fps!== 'NA')){\n          mediaFps = currentTranscript.metadata.fps\n        }\n        // TODO: need to find a way to escape text containing ' in word text attribute \n        // const words = element.words.map((word) => {\n        //   word.text = word.text.replace(/'/g,\"\\'\"); \n        //   return word;\n        // })\n\n        const result = {\n          ...element,\n          // words,\n          // TODO: this is point to the proxy preview locally on the user's computer \n          src: currentTranscript.url,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: mediaFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        // need to escape ' otherwise Premiere.jsx chockes \n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text.replace(/'/,'\\'');}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  programmeScriptJsonToTextPaperCutsOnly = (edlsqJson) => {\n    const body = edlsqJson.events.map((event) => {\n       if (event.type === 'paper-cut') {\n        // need to escape ' otherwise Premiere.jsx chockes \n        return `${ event.words.map((word) => {return word.text.replace(/'/,'\\'');}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ body.filter((e)=>e!==null).join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleCepExportSequence = () =>{\n    const programmeScriptJson = this.getProgrammeScriptJson();\n\n    const paperCuts = programmeScriptJson.events.filter((el)=>{\n      return el.type ==='paper-cut'\n    })\n    // not quier sure how to escapte  ' in word text attribute, so since it's not needed for premiere export, removing the words\n    const paperCutsWithoutWords = paperCuts.map((el)=>{\n      delete el.words;\n      return el;\n    })\n    // TODO: need to remove \n    const tmpEdl = {\n      edlJson: {\n        events: paperCutsWithoutWords,\n        title: this.state.programmeScript.title\n      } \n    }\n    const premiereCommandString = \"$._PPP.create_sequence_from_paper_edit('\" + JSON.stringify(tmpEdl) + \"')\";\n    window.__adobe_cep__.evalScript(premiereCommandString, function (response){\n      // done \n      console.info('done exporting sequence')\n    })\n  }\n\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleExportTxtOnyPaperCuts = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToTextPaperCutsOnly(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleExportDocx = async () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const isWithClipReference = false;\n    const programmeScriptDocx = await programmeScriptJsonToDocx(programmeScriptJson, isWithClipReference);\n    downloadjs(programmeScriptDocx, `${ this.state.programmeScript.title }.docx`, 'text/docx');\n  }\n\n  handleExportDocxWithClipReference = async () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const isWithClipReference = true;\n    const programmeScriptDocx = await programmeScriptJsonToDocx(programmeScriptJson, isWithClipReference);\n    downloadjs(programmeScriptDocx, `${ this.state.programmeScript.title }.docx`, 'text/docx');\n  }\n\n  handleUpdatePreview = () => {\n    let timelineStartTime = 0;\n    // playlist elements for  previe canvas\n    // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n    const playlist = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n        const duration = element.end - element.start;\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const result = {\n          type:'video',\n          start: timelineStartTime,\n          sourceStart: element.start,\n          duration: duration,\n          src: currentTranscript.url\n        };\n\n        timelineStartTime += duration;\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // Workaround to mound and unmoun the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const { programmeScript } = this.state;\n    // cloning programmeScript to avoid overriding original\n    const latestProgrammeScript = {...programmeScript}\n    if (latestProgrammeScript) {\n      const elements = [...latestProgrammeScript.elements];\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      latestProgrammeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, latestProgrammeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            this.setState({lastSaved: new Date()})\n          }\n        });\n    }\n  }\n\n  // TODO:\n  handleChangeInsertPointPosition = (indexNumber)=>{\n    const { programmeScript } = this.state;\n    const latestProgrammeScript = {...programmeScript}\n    // insert new programme script\n    // remove insert point from old programme script (eg index different from new one)\n    // save programme script\n    if (latestProgrammeScript) {\n      const elements = [...latestProgrammeScript.elements];\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      // add new insert point\n      const newInsertPoint = {...INSERT_POINT_ELEMENT}\n      elements.splice( indexNumber+1, 0, newInsertPoint);\n      // remove previous  insert point \n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      latestProgrammeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, latestProgrammeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            this.setState({\n              // playlist: playlist,\n              lastSaved: new Date(),\n              programmeScript: latestProgrammeScript\n            }, () =>{\n              // this.handleUpdatePreview()\n            })\n          }\n        });\n    }\n  }\n\n  handleAdvancedSelectCheckbox = (event) => {\n    const target = event.target;\n    this.setState({\n      isAdvancedSelect:  target.checked\n    });\n  }\n\n  handleDeleteProgrammeScriptContent = ()=>{\n   // eslint-disable-next-line no-restricted-globals\n    const confirmation = confirm('Are you usure you want to delete the content of your programme script?');\n    if(confirmation){\n      const { programmeScript } = this.state;\n      const latestProgrammeScript = {...programmeScript}\n      // latestProgrammeScript.elements = [];\n      latestProgrammeScript.elements = [{...INSERT_POINT_ELEMENT}]\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, latestProgrammeScript)\n      .then((json) => {\n        if (json.status === 'ok') {\n          this.setState({\n            // playlist: playlist,\n            lastSaved: new Date(),\n            programmeScript: latestProgrammeScript\n          }, () =>{\n            this.handleUpdatePreview()\n          })\n        }\n      });\n    }else{\n      alert('ok no worries, nothing changed')\n    }\n  }\n\n  handleExportVideoPreview= ()=>{\n    const sequence = this.getSequenceJsonForFfmpegRemix();\n    const programmeScriptTitle = this.state.programmeScript.title;\n    // timeNow -  eg \"3-6-2020_5.41.35PM\"\n    const timeNow = new Date().toLocaleString().replace(/\\//g,'-').replace(/,\\ /g,'_').replace(/:/g,'.').replace(/\\ /g,'');\n    const fileName = `${programmeScriptTitle}_${timeNow}.mp4`;\n    ApiWrapper.exportVideo(sequence, fileName).then((res)=>{\n      console.log('exported', res)\n    })\n  }\n\n  handleExportAudioPreview= ()=>{\n    const sequence = this.getSequenceJsonForFfmpegRemix();\n    const programmeScriptTitle = this.state.programmeScript.title;\n    // timeNow -  eg \"3-6-2020_5.41.35PM\"\n    const timeNow = new Date().toLocaleString().replace(/\\//g,'-').replace(/,\\ /g,'_').replace(/:/g,'.').replace(/\\ /g,'');\n    const fileName = `${programmeScriptTitle}_${timeNow}.wav`;\n    const waveForm = false;\n    ApiWrapper.exportAudio(sequence, fileName, false).then((res)=>{\n      console.log('exported', res)\n    })\n  }\n\n  handleExportAudioPreviewWithVideoWaveform = ({waveFormMode, waveFormColor})=>{\n    const sequence = this.getSequenceJsonForFfmpegRemix();\n    const programmeScriptTitle = this.state.programmeScript.title;\n    // timeNow -  eg \"3-6-2020_5.41.35PM\"\n    const timeNow = new Date().toLocaleString().replace(/\\//g,'-').replace(/,\\ /g,'_').replace(/:/g,'.').replace(/\\ /g,'');\n    const fileName = `${programmeScriptTitle}_${timeNow}.mp4`;\n    const waveForm = true;\n    // const waveFormMode = 'cline';\n    ApiWrapper.exportAudio(sequence, fileName, waveForm, waveFormMode, waveFormColor).then((res)=>{\n      console.log('exported', res)\n    })\n  }\n\n\n  render() {\n    const position = window.matchMedia('(max-width: 767px)').matches? true:false;\n    return (\n      <>\n        <Card style={{ \n          // backgroundColor:'#eee',\n          // boxShadow: '0 0 10px #ccc'\n          }}>\n          <Card.Body style={{ padding: '1em',paddingTop: '0em',paddingBottom: '0.6em'}}>\n            { !this.state.resetPreview ?\n              <PreviewCanvas playlist={ this.state.playlist }\n               width={ 300 }\n               />\n              : null }\n          </Card.Body>\n          <Card.Body style={{paddingTop: '0px', paddingBottom: '0.6em'}}>\n            <Row noGutters>\n              <ButtonGroup style={{ width: '100%'}} vertical={position} block>\n              <OverlayTrigger\n                placement={'top'}\n                delay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                overlay={\n                  <Tooltip >\n                  To add a text selection, select text in the transcript, then click this button to add it to the programme script, at the orange insert point/\n                  </Tooltip>\n                    }>\n                  <Button\n                  variant=\"light\"\n                  size=\"sm\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button>\n                </OverlayTrigger>\n                <OverlayTrigger\n                placement={'top'}\n                delay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                overlay={\n                  <Tooltip >\n                  Advanced selection - check this box to auto copy across transcript selections to insert point in programme script\n                  </Tooltip>\n                    }>\n                <Button  \n                variant=\"light\" \n                style={{cursor: 'default'}}>\n                <input\n                style={{cursor: 'pointer'}}\n                  name=\"advancedSelect\"\n                  type=\"checkbox\"\n                  checked={this.state.isAdvancedSelect}\n                  onChange={this.handleAdvancedSelectCheckbox} \n                /> <small \n                    className={'text-secondary'} \n                    style={{marginBottom: '0em'}}\n                    >{'Auto copy selections'}</small>\n                    </Button>\n                </OverlayTrigger>\n                <DropdownButton as={ButtonGroup} variant=\"light\" title={  <FontAwesomeIcon icon={ faListUl } />}>\n                  <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                      text={<> <FontAwesomeIcon icon={ faHeading } /> Heading</>}\n                   /> \n                  <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                      text={<> <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over</>}\n                   /> \n                  <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                      text={<><FontAwesomeIcon icon={ faStickyNote } /> Note</>}\n                   /> \n                </DropdownButton>\n                \n                <OverlayTrigger\n                placement={'top'}\n                delay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                overlay={\n                  <Tooltip >\n              update programme script audio/video preview\n                  </Tooltip>\n                    }>\n                   <Button variant=\"light\"\n                  onClick={ this.handleUpdatePreview }\n                >\n                  <FontAwesomeIcon icon={ faSync } />\n                </Button>\n                </OverlayTrigger>\n\n                <DropdownButton as={ButtonGroup} variant=\"light\" title={<FontAwesomeIcon icon={ faShare } /> }>\n                {(whichJsEnv() === 'cep')? (<>\n                    <ExportMenuItem \n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleCepExportSequence }\n                      title=\"export the programme script as a sequence in Adobe Premiere\"\n                      text={<>Premiere - Sequence <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                    />\n                    </>): (<>\n                    <ExportMenuItem \n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportEDL}\n                      title={\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"}\n                      text={<> <FontAwesomeIcon icon={ faVideo } /> EDL - Video <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                    />\n                   <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                      onClick={ this.handleExportFCPX }\n                      text={<> <FontAwesomeIcon icon={ faVideo } /> FCPX <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n                    <Dropdown.Divider />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                      text={<> <FontAwesomeIcon icon={ faHeadphones } /> ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportXML }\n                      title=\"export XML, audio decision list, to import the programme script as a sequence in audio editing software such as Audition\"\n                      text={<>   <FontAwesomeIcon icon={ faHeadphones } /> XML - Audition <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n                    <Dropdown.Divider />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                      text={<> <FontAwesomeIcon icon={ faFileAlt } /> Text File <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportTxtOnyPaperCuts }\n                      title=\"export Text, export only the text selection in the programme script as a text version\"\n                      text={<> <FontAwesomeIcon icon={ faFileAlt } /> Text File (only text selection) <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportDocx }\n                      title=\"export docx, export the programme script as a word document\"\n                      text={<><FontAwesomeIcon icon={ faFileWord } /> Word Document <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportDocxWithClipReference }\n                      title=\"export docx, export the programme script as a word document, with clip name and timecode references, for text selections\"\n                      text={<><FontAwesomeIcon icon={ faFileWord } /> Word Doc (with ref) <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n\n                    {whichJsEnv()==='electron'?  <>\n                    <Dropdown.Divider />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportVideoPreview }\n                      title=\"Export mp4 video preview - Experimental feature, at the moment you cannot combine audio and video in the same export.\"\n                      text={<><FontAwesomeIcon icon={ faFileVideo } /> Video (mp4) <FontAwesomeIcon icon={ faFlask } /> <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   /> \n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportAudioPreview }\n                      title=\"Export wav audio preview - Experimental feature, at the moment you cannot combine audio and video in the same export.\"\n                      text={<><FontAwesomeIcon icon={ faFileAudio } /> Audio (wav) <FontAwesomeIcon icon={ faFlask } /><FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   />\n                    <Dropdown.Divider />\n                    <ExportWaveForm \n                      TOOLTIP_DEPLAY_IN_MILLISECONDS={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      handleExportAudioPreviewWithVideoWaveform={this.handleExportAudioPreviewWithVideoWaveform}\n                      title=\"Export audio preview as video with animated wave form - Experimental feature, at the moment you cannot combine audio and video in the same export.\"\n                      text={<><FontAwesomeIcon icon={ faFileAudio } /> Animated Waveform (mp4)   <FontAwesomeIcon icon={ faFlask } /><FontAwesomeIcon icon={ faInfoCircle } /></>}\n                    />     \n                    </>: null   }\n                    <Dropdown.Divider />\n                    <ExportMenuItem\n                      tootlipDelay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                      text={<>  <FontAwesomeIcon icon={ faFileCode } /> Json <FontAwesomeIcon icon={ faInfoCircle } /></>}\n                   /> \n                    </>)}\n                  </DropdownButton> \n                <OverlayTrigger\n                placement={'top'}\n                // delay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                overlay={\n                  <Tooltip >\n            {` Last Saved at ${this.state.lastSaved.toLocaleString()}`}\n                  </Tooltip>\n                    }>\n                   <Button variant=\"light\" disabled>\n                    <small className={'text-secondary'} style={{marginBottom: '0em'}}>{ `${this.state.lastSaved.toLocaleTimeString()}`}</small>\n                    </Button>\n                </OverlayTrigger>\n                <OverlayTrigger\n                placement={'top'}\n                delay={TOOLTIP_DEPLAY_IN_MILLISECONDS}\n                overlay={\n                  <Tooltip >\n             Delete programme script content. \n                  </Tooltip>\n                    }>\n               <Button variant=\"light\"\n                  onClick={ this.handleDeleteProgrammeScriptContent }\n                ><FontAwesomeIcon icon={ faTrash } />\n                </Button>\n                </OverlayTrigger>\n                </ButtonGroup>\n            </Row>\n\n          </Card.Body>\n          <hr style={{margin: '0px'}}/>\n          <Card.Body style={{padding: '0px'}}>\n            <article\n              style={ { \n                height:'55vh', \n                overflow: 'scroll', \n                padding: '1em', \n                // backgroundColor:'#f9f9f9' \n              } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScript\n                programmeScriptElements={ this.state.programmeScript.elements }\n                handleProgrammeScriptOrderChange={ this.handleProgrammeScriptOrderChange }\n                handleDeleteProgrammeScriptElement={ this.handleDeleteProgrammeScriptElement }\n                handleEditProgrammeScriptElement={ this.handleEditProgrammeScriptElement }\n                handleAddTranscriptElementToProgrammeScript={this.handleAddTranscriptElementToProgrammeScript}\n                handleAddTranscriptSelectionToProgrammeScriptTmpSave={this.handleAddTranscriptSelectionToProgrammeScriptTmpSave}\n                handleChangeInsertPointPosition={this.handleChangeInsertPointPosition}\n                />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEyeSlash,\n  faEye\n} from '@fortawesome/free-solid-svg-icons';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgramScript from './ProgramScript/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n\nclass PaperEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n    };\n  }\n\n  componentDidMount = async () => {\n\n    ApiWrapper.getProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={{\n        //  backgroundColor: '#eee'\n         }} fluid>\n        <Row>\n          <Col xs={ 12 }  sm={ 8 } md={ 8 } ld={ 8 } xl={ 8 }>\n            <CustomBreadcrumb\n               backgroundColor={'transparent'}\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n          <Col xs={ 12 } sm={ 4 } md={ 4 } ld={ 4 } xl={ 4 }>\n          <div className=\"d-flex flex-column\">\n          <ButtonGroup\n              className=\"mt-2\"\n              size=\"md\"\n              block\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ 'light' }\n                size=\"sm\"\n             >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ?faEye :faEyeSlash }/> \n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={'light' }\n                size=\"sm\"\n             >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faEye : faEyeSlash}/> \n              </Button>\n            </ButtonGroup>\n          \n        </div>\n          </Col>\n        </Row>\n\n        <Container fluid={ true }>\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              <div className={['d-block','d-sm-none'].join(' ')}><br/></div>\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgramScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n              />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default PaperEdit;\n","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap-css-only/css/bootstrap.css';\n// TODO: Note: Replace ^[theme]^ (examples: materia, darkly, slate, cosmo, spacelab, and superhero. See https://bootswatch.com for current theme names.)\n// https://www.npmjs.com/package/react-bootstrap-theme-switcher\n// import \"bootswatch/dist/litera/bootstrap.min.css\"; \nimport Projects from './Components/Projects/index.js';\nimport Project from './Components/Projects/Project.js';\nimport TranscriptCorrect from './Components/Transcripts/TranscriptCorrect.js';\nimport PaperEdit from './Components/PaperEdits/PaperEdit';\nimport CustomAlert from './Components/lib/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nconst demoWarningMessage = (<><p> This is a demo version of the app <Alert.Link href=\"https://github.com/pietrop/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n>see project Github repository for more info</Alert.Link>. </p><p>This is a read-only demo you can only play around with existing projects!</p></>);\n\nconst NoMatch = () => {\n  return <h1>There was an error loading the page you requested</h1>;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transcriptJson: null\n    };\n  }\n  // TODO: remove unused rootes\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    let envWarning = null;\n    let offlineWarning = null;\n\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      envWarning = (\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Demo mode' }\n            message={ demoWarningMessage }/>\n        </Container>);\n    }\n\n    if (!navigator.onLine) {\n      offlineWarning = <><br/><Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Offline warning' }\n          message={ 'You don\\'t seem to be connected to the internet ' }/>\n      </Container></>;\n    }\n\n    return (<>\n\n      {envWarning}\n\n      {offlineWarning}\n\n      <HashRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={ Projects } />\n          <Route exact path=\"/projects\" component={ Projects } />\n          <Route exact path=\"/projects/:projectId\" component={ Project } />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n            component={ TranscriptCorrect }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/paperedits/:papereditId\"\n            component={ PaperEdit }\n          />\n          <Route component={ NoMatch } />\n        </Switch>\n        </div>\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}