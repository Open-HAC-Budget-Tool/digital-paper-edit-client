{"version":3,"sources":["Util/which-js-env/index.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/index.module.css","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.module.css","img/labsLogo.png","Components/lib/CustomNavbar/index.js","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ListPage/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/CustomBreadcrumb/index.js","Components/lib/CustomFooter/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","Components/Projects/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/CustomAlert/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","Util/only-call-once/index.js","Components/Transcripts/TranscriptAnnotate/LabelsList/css-color-names.js","Components/Transcripts/TranscriptAnnotate/LabelsList/LabelForm.js","Components/Transcripts/TranscriptAnnotate/LabelsList/LabelModal.js","Components/Transcripts/TranscriptAnnotate/LabelsList/index.js","Util/remove-punctuation/index.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/split-paragraph-by-annotation.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/find-annotation-in-paragraph.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/group-words-by-speakers.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/Paragraph.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/Words.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/AnnotationOverlayTrigger.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/compute-paragraph-display-preference.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/generate-paragraphs/index.js","Components/Transcripts/TranscriptAnnotate/Paragraphs/index.js","Components/Transcripts/TranscriptAnnotate/LabelsList/select-color-styles.js","Components/Transcripts/TranscriptAnnotate/SearchBar/select-speakers-color-styles.js","Components/Transcripts/TranscriptAnnotate/SearchBar/index.js","Components/lib/custom-navbar-links.js","Components/Transcripts/TranscriptAnnotate/get-user-selection.js","Components/Transcripts/TranscriptAnnotate/index.js","Components/Transcripts/TranscriptCorrect.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/select-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Word.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/css-color-names.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelForm.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelModal.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/index.js","Components/PaperEdits/PaperEdit/Transcripts/get-user-selection.js","Components/PaperEdits/PaperEdit/Transcripts/Transcript.js","Components/PaperEdits/PaperEdit/Transcripts/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextViewer.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextControls.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/index.js","Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js","Components/PaperEdits/PaperEdit/ProgramScript/get-data-from-user-selection.js","Components/PaperEdits/PaperEdit/ProgramScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEdits/PaperEdit/ProgramScript/index.js","Components/PaperEdits/PaperEdit/index.js","App.js","serviceWorker.js","index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextProgressBar.module.css"],"names":["process","__dirname","whichJsEnv","undefined","window","versions","electron","cep","chdir","err","console","log","error","module","exports","speaker","unselectable","highlightedWord","__webpack_require__","p","CustomNavbar","react_default","a","createElement","Navbar_default","collapseOnSelect","expand","bg","variant","fixed","lib","to","Brand","index_es","icon","faFlask","SimpleCard","handleDelete","confirm","_this","props","id","alert","handleEdit","showLinkPath","Card_default","style","width","marginBottom","Body","Row_default","this","cursor","Col_default","xs","sm","md","ld","xl","Title","href","concat","title","Link","Button_default","onClick","size","faPen","faTrash","Subtitle","className","description","Component","List","listItems","items","map","item","display","lib_SimpleCard","key","filter","Fragment","height","overflow","React","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","InputGroup_default","Prepend","Text","faSearch","FormControl_default","onChange","placeholder","aria-label","aria-describedby","Page","results","project","handleUpdateList","searchEl","length","lib_SearchBar","handleShowCreateNewItemForm","block","model","lib_List","ItemForm","handleTitleChange","event","handleDescriptionChange","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","_this2","Form_default","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal_default","Footer","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","modalTitle","lib_ItemForm","CustomBreadcrumb","breadcrumbs","index","link","Breadcrumb_default","Item","name","active","CustomFooter","footer","src","labsLogo","alt","rel","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","data","arguments","applicationType","mode","body","JSON","stringify","headers","Content-Type","_callee","url","_args","regenerator_default","wrap","_context","prev","next","fetch","abrupt","sent","stop","corsFetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","env","API_URL","res","json","projects","getProject","resProject","projectTitle","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","DemoApiWrapper","response","_id","status","ok","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","jsENV","src_ApiWrapper","demoApiWrapper","freeze","apiWrapper","electronWrapper","ElectronWrapper","Projects","handleSaveItem","updateProject","then","findItemById","findIndex","element","isNewItemModalShow","itemId","createProject","toConsumableArray","push","list","handleEditItem","showLinkPathToItem","handleDeleteItem","bind","assertThisInitialized","getAllProjects","result","tmpList","t0","deleteProject","newItemsList","lib_CustomNavbar","Container_default","marginTop","lib_CustomBreadcrumb","ListPage","deleteItem","createNew","editItem","lib_ItemFormModal","lib_CustomFooter","CustomTranscriptCard","borderStatus","Badge_default","showLink","Alert_default","faExclamationTriangle","errorMessage","border","disabled","Spinner_default","as","animation","role","aria-hidden","faCheck","subtitle","ListPageTranscript","itemsCards","content","lib_CustomTranscriptCard","CustomAlert","handleDismiss","onClose","dismissible","heading","Heading","message","TranscriptForm","handleFileUpload","file","Array","from","files","FormData","append","path","mediaFileSelected","sendRequest","uploading","get","createTranscript","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","lib_CustomAlert","dismissable","accept","NewTranscriptFormModal","Transcripts_TranscriptForm","Transcripts","newItem","newitems","handleSaveEditedItem","newEditedItem","itemIdex","updateTranscript","isEditItemModalShow","handleCloseModalEdit","isServerError","deleteTranscript","findId","tmpNewList","lib_ListPageTranscript","faFileAlt","Transcripts_NewTranscriptFormModal","PaperEdits","updatePaperEdit","createPaperEdit","getAllPaperEdits","deletePaperEdit","Project","context","match","params","projectName","Tabs_default","activeKey","onSelect","Tab_default","eventKey","Components_Transcripts","Components_PaperEdits","onlyCallOnce","cb","duration","timer","args","clearTimeout","setTimeout","apply","csscolors","yellow","greenyellow","deepskyblue","deeppink","aqua","black","blueviolet","brown","burlywood","cadetblue","chocolate","coral","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","blue","dimgray","dimgrey","dodgerblue","firebrick","forestgreen","fuchsia","gainsboro","goldenrod","gold","gray","green","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","chartreuse","limegreen","linen","magenta","maroon","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","yellowgreen","aquamarine","mediumaquamarine","colorNamesList","keys","splice","cssColorsList","color","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","handleSave","onLabelSaved","defaultValue","onInput","rows","lg","faSyncAlt","backgroundColor","borderWidth","borderColor","padding","react_color_lib","triangle","onChangeComplete","colors","LabelModal","handleShow","openBtn","faTag","LabelsList_LabelForm","LabelsList","removeLabel","onLabelDelete","editLabel","labelToEdit","labelsOptions","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup_default","LabelsList_LabelModal","faTimes","labelsList","isLabelsListOpen","faCog","removePunctuation","string","replace","getWordsBeforeAnnotation","paragraph","paragraphFilterBeforeSelection","w","start","getWordsAfterAnnotation","end","getWordsInAnnotation","startWord","startIndex","indexOf","endWord","endIndex","slice","splitParagraphByAnnotation","wordsBefore","wordsInAnnotation","wordsAfter","findAnnotationInParagraph","resultsCaseOne","paragraphFirstWordTime","paragraphLastWordTime","isAnnotationWithinParagraph","groupWordsInParagraphsBySpeakers","words","segments","wordsWithSpeakers","currentSpeaker","text","word","groupWordsBySpeaker","tmpSegment","seg","findSegmentForWord","addSpeakerToEachWord","Paragraph","paragraphDisplayPreference","borderStyle","paragraphStyle","showParagraphsMatchingSearch","borderRight","borderLeft","objectSpread","data-paragraph-text","paragraphTextWithoutPunctuation","speakerName","toUpperCase","shortTimecode","styles","join","data-start","tabIndex","wordsElements","Words","generatePreviousTimes","prevTimes","i","dec","Math","floor","_this$props","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger_default","rootClose","trigger","placement","overlay","Popover_default","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","generateParagraphs","transcriptJson","paragraphs","searchString","selectedOptionSpeakerSearch","spk","selectedOptionLabelSearch","lb","_splitParagraphByAnno","wordsBeforeEl","generate_paragraphs_Words","handleWordClick","wordsInAnnotationEl","wordsAfterEl","generate_paragraphs_AnnotationOverlayTrigger","note","generate_paragraphs_Paragraph","handleKeyDownTimecodes","handleTimecodeClick","Paragraphs","generateParagraphsEl","colourStyles","control","option","_ref","isDisabled","tmpColor","isFocused","isSelected","multiValue","_ref2","multiValueLabel","_ref3","multiValueRemove","_ref4","speakersColorStyles","handleToggleSearchTextPreferences","showTextSearchPreferences","handleToggleSearchLabelsPreferences","showLabelsSearchPreferences","handleToggleSearchSpeakersPreferences","showSpeakersSearchPreferences","handleSpeakersSearchChange","handleLabelsSearchChange","handleShowParagraphsMatchingSearch","handleToggleAll","handleHideAll","DropdownButton_default","drop","InputGroup","Append","faFilter","Dropdown_default","faUser","faAlignJustify","Divider","react_select_esm","isMulti","isSearchable","options","speakersOptions","Check","checked","navbarLinks","faFolderOpen","faFolderPlus","faFile","faTasks","faCut","faUsers","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","has","set","return","TranscriptAnnotate","componentDidMount","get_TranscriptLabelsAnnotations","notification","wordEl","videoRef","current","currentTime","play","classList","contains","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","handleTimeUpdate","onLoadedDataGetDuration","currentDurationWithOffset","timecodeOffset","durationInSeconds","secondsToTimecode","mediaDuration","redirectToEditPage","renderRedirect","Redirect","handleCreateAnnotation","selection","newAnnotation","createAnnotation","newAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","handleLabelListOpen","createRef","showSelectedOptionLabelSearch","currentWordTime","time","round","highlights","scoped","fluid","links","MediaPlayer_default","hookSeek","foo","setCurrentTime","hookPlayMedia","playMedia","hookIsPlaying","isPlaying","rollBackValueInSeconds","mediaUrl","handleSaveTranscript","paddingRight","VideoPlayer_default","tabindex","onTimeUpdate","previewIsDisplayed","ButtonGroup","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","TranscriptAnnotate_LabelsList","TranscriptAnnotate_SearchBar","onDoubleClick","TranscriptAnnotate_Paragraphs","TranscriptCorrect","saveToServer","transcriptEditorRef","getEditorContent","redirectToAnnotatePage","react_transcript_editor","transcriptData","isEditable","sttJsonType","ref","currentSegment","currentSegmentIndex","previousSegmentIndex","addWordsToSpeakersParagraphs","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Word","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","textResult","annotationInCurrentParagraph","Paragraphs_Word","Paragraphs_AnnotationOverlayTrigger","Paragraphs_Paragraph","Transcripts_LabelsList_LabelForm","Transcripts_LabelsList_LabelModal","overflowY","overflowX","faTags","Transcript","newAnnotationFromServer","parse","deepCloneOfNestedObjectNewAnnotationsSet","showLabelsReference","getCurrentWordTime","controls","ButtonGroup_default","Transcripts_LabelsList","Transcripts_SearchBar","Transcripts_Paragraphs","transcriptsElNav","Nav_default","faClock","transcriptsElTab","Pane","Transcripts_Transcript","Container","defaultActiveKey","Content","PaperCutsPlayerViewer","_props$width","_props$height","_props$playlist","playlist","loadPlaylist","sourceStart","node","videoContext","startAt","stopAt","connect","destination","canvasRef","canvas","VideoContext","PureComponent","VideoContextProgressBar","updateProgress","requestAnimationFrame","progress","handleClick","offsetX","nativeEvent","getTracks","_sourceNodes","reverse","startTime","stopTime","elementURL","pop","pointerEvents","papercutsPlayerProgressTrackBuffer","papercutsPlayerProgressTrack","tracks","papercutsPlayerProgress","papercutsPlayerProgressBack","papercutsPlayerProgressFront","playIcon","faPlay","pauseIcon","faPause","stopIcon","faStop","Controls","handlePlay","handlePause","pause","handleStop","PreviewCanvas","videoContextRef","forceUpdate","VideoContextViewer","PreviewCanvas_VideoContextProgressBar","VideoContextControls","VoiceOver","faMicrophoneAlt","PaperCut","userSelect","TitleHeading","Note","InsertPoint","faArrowAltCircleRight","DragHandle","sortableHandle","faGripLines","SortableItem","sortableElement","faArrowAltCircleLeft","SortableContainer","sortableContainer","children","listStyle","ProgrammeScript","onSortEnd","oldIndex","newIndex","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","ProgramScript_TitleHeading","ProgramScript_VoiceOver","ProgramScript_PaperCut","ProgramScript_Note","ProgrammeScript_InsertPoint","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement","getDataFromUserWordsSelection","innerText","isOneParagraph","firstword","divideWordsSelectionsIntoParagraphs","previousWordSpeaker","currentParagraph","paragraphsResult","ProgramScript","elements","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","cuid","insertPointElement","handleAddTranscriptSelectionToProgrammeScript","getSequenceJsonEDL","_edlSq$events","edlSq","events","programmeScriptPaperCutsWithId","currentTranscript","endTime","reelName","clipName","fps","offset","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","generateADL","projectOriginator","edits","sampleRate","frameRate","handleExportFCPX","jsonToFCPX","getProgrammeScriptJson","_edlSq$events2","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleExportTxt","handleUpdatePreview","timelineStartTime","resetPreview","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","ProgramScript_PreviewCanvas","noGutters","faPlus","faHeading","faSync","faShare","faInfoCircle","faSave","ProgramScript_ProgrammeScript","PaperEdit","asyncToGenerator","mark","get_ProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","faAngleDown","faAngleUp","span","PaperEdit_Transcripts","PaperEdit_ProgramScript","demoWarningMessage","App","envWarning","HashRouter","Switch","Route","exact","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.546f17c1.chunk.js","sourcesContent":["/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n      //   console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n      //   console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      try {\n        process.chdir(__dirname);\n        // process.chdir('..');\n        // console.log('New directory: ' + process.cwd());\n      }\n      catch (err) {\n        console.log('chdir: ' + err);\n      }\n\n      return 'cep';\n\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"generate-paragraphs_speaker__2DC8z\",\"unselectable\":\"generate-paragraphs_unselectable__1wCnj\",\"highlightedWord\":\"generate-paragraphs_highlightedWord__3YCEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__1kdz6\",\"unselectable\":\"Paragraphs_unselectable__3k2Ob\",\"highlightedWord\":\"Paragraphs_highlightedWord__3mJtY\"};","module.exports = __webpack_public_path__ + \"static/media/labsLogo.658ac9e3.png\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomNavbar () {\n\n  return (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"top\"\n    >\n      <LinkContainer to=\"/projects\">\n        <Navbar.Brand>\n          <FontAwesomeIcon icon={ faFlask } />\n          {'  '}{process.env.REACT_APP_NAME}\n        </Navbar.Brand>\n      </LinkContainer>\n    </Navbar>\n  );\n}\n\nexport default CustomNavbar;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <Card style={ { width: '100%', marginBottom: '1em' } }>\n        <Card.Body>\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                  <a href={ `#${ this.showLinkPath() }` } >\n                    {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <section style={ { height: '75vh', overflow: 'scroll' } }>\n        {listItems}\n      </section>\n    </>\n    );\n  }\n}\n\nexport default List;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport labsLogo from '../../../img/labsLogo.png';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <small>\n        <img src={ labsLogo } style={ { height: '2em' } } alt=\"Labs Logo\" /> This is\n        a prototype from{' '}\n        <a href=\"http://bbcnewslabs.co.uk/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          BBC News Labs\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default ( () => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n})();\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomNavbar from '../lib/CustomNavbar';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n  async componentDidMount () {\n    try {\n    // TODO: do we need to add user id in request?\n      const result = await ApiWrapper.getAllProjects();\n\n      if (result) {\n      // add a display property for component cards search\n        const tmpList = result.map(project => {\n          project.display = true;\n\n          return project;\n        });\n        this.setState({ items: tmpList });\n      }\n    } catch (e) {\n      console.log('Error with ApiWrapper.getAllProjects', e);\n    }\n    // TODO: some error handling\n  };\n\n  // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createProject(item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const projects = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newProject = response.project;\n          newProject.display = true;\n          projects.push(response.project);\n          this.setState({\n            isNewItemModalShow: false,\n            items: projects,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updateProject(item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const project = response.project;\n          // need to add display true attribute for search to the new project\n          project.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          this.findItemById(items, item);\n          const projectIndex = this.state.items.findIndex(element => element.id === project.id);\n          items[projectIndex] = project;\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n    console.log('edit item', item);\n  }\n\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deleteProject(itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (<>\n      <CustomNavbar/>\n      <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb items={ [\n              {\n                name: 'Projects'\n              }\n            ] } />\n          </Col>\n        </Row>\n        <ListPage\n          model={ 'Project' }\n          items={ this.state.items }\n          handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n          deleteItem={ this.createNew }\n          editItem={ this.createNew }\n          handleEdit={ this.handleEditItem }\n          handleDelete={ this.handleDeleteItem }\n          showLinkPath={ this.showLinkPathToItem }\n          handleUpdateList={ this.handleUpdateList }\n        />\n        <ItemFormModal\n          title={ this.state.title }\n          description={ this.state.description }\n          id={ this.state.itemId }\n          modalTitle={ this.state.itemId ? 'Edit Project' : 'New Project' }\n          show={ this.state.isNewItemModalShow }\n          handleCloseModal={ this.handleCloseModal }\n          handleSaveForm={ this.handleSaveItem }\n        />\n      </Container>\n      <CustomFooter/>\n    </>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faCheck,\n  faExclamationTriangle,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let description;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      description = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      description = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={ `#${ this.props.showLink() }` }> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      description = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={ faExclamationTriangle } />{' '}\n            {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <Card\n        border={ borderStatus }\n        style={ { width: '100%', marginBottom: '2em' } }\n      >\n        <Card.Body>\n          <Row>\n            <Col xs={ 12 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n              <Card.Title>\n                {this.props.icon ? this.props.icon : ''} {title}\n              </Card.Title>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              {status && status === 'info' ? (\n                <Button variant=\"info\" size=\"sm\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'danger' ? (\n                <Button variant=\"danger\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faExclamationTriangle } />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'success' ? (\n                <Button variant=\"success\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faCheck } />\n                </Button>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {this.props.subtitle}\n              </Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              {description}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\n\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <section style={ { height: '75vh', overflow: 'scroll' } }>\n            {itemsCards}\n          </section>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n            {searchEl}\n          </Col>\n          <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n          </Col>\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/#dismissing\nclass CustomAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleDismiss = () => this.setState({ show: false });\n\n  render() {\n    if (this.state.show) {\n      return (\n        <Alert\n          variant={ this.props.variant }\n          onClose={ this.handleDismiss }\n          dismissible\n        >\n          {this.props.heading ? (\n            <Alert.Heading>{this.props.heading}</Alert.Heading>\n          ) : (\n            ''\n          )}\n          {this.props.message}\n        </Alert>\n      );\n    } else {\n      return (\n        <>\n          <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default CustomAlert;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    console.log(\"formData.get('path')\", formData.get('path'));\n\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n        Select an audio or video file to upload\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n        Please chose a audio or video file to upload\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n    // TODO: add error handling\n    if (result) {\n      const tmpList = result.transcripts.map((item) => {\n        item.display = true;\n\n        return item;\n      });\n      this.setState({\n        projectTitle: result.projectTitle,\n        items: tmpList\n      });\n    }\n  }\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, (props, state) => {\n      console.log('setState', props, state);\n    });\n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    console.log('ApiWrapper.getAllPaperEdits', result);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomNavbar from '../lib/CustomNavbar';\nimport CustomFooter from '../lib/CustomFooter';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name'\n    };\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  };\n\n  render() {\n    return (\n      <>\n        <CustomNavbar/>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <CustomBreadcrumb items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: this.state.projectName\n                }\n              ] } />\n            </Col>\n          </Row>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={ this.state.key }\n            onSelect={ key => this.setState({ key }) }\n          >\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={ this.state.projectId }/>\n            </Tab>\n            <Tab eventKey=\"programmes\" title=\"Programmes script\">\n              <PaperEdits projectId={ this.state.projectId } />\n            </Tab>\n          </Tabs>\n        </Container>\n        <CustomFooter/>\n      </>\n    );\n  }\n}\n\nexport default Project;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }>\n            </Col>\n            <Col xs={ 7 } sm={ 7 } md={ 7 } lg={ 7 } xl={ 7 }>\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text className=\"text-muted\">\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '30vh', overflow: 'scroll' } }>{labelsListOptions}\n    </ListGroup>);\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        <br/>\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTag } />\n            <FontAwesomeIcon icon={ faCog } /> Labels Options\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","/**\n * Problem this module solves\n * is given a list of words as a paragraph, it can segment\n * it based on an annotation with start and end time\n * Work in progress\n```\nconst paragraph = [\n  {\n    index: 1706,\n    start: 702.17,\n    end: 702.37,\n    text: \"Their\"\n  },\n  {\n    index: 1707,\n    start: 702.62,\n    end: 703.26,\n    text: \"reflections\"\n  },\n  {\n    index: 1708,\n    start: 703.26,\n    end: 703.36,\n    text: \"of\"\n  },\n  {\n    index: 1709,\n    start: 703.36,\n    end: 703.45,\n    text: \"our\"\n  },\n  {\n    index: 1710,\n    start: 703.45,\n    end: 703.63,\n    text: \"own\"\n  },\n  {\n    index: 1711,\n    start: 703.63,\n    end: 704.34,\n    text: \"humanity.\"\n  }\n];\n```\n* and an annotation\n```\nconst annotation = {\n  start: 702.62,\n  end: 703.45,\n  labelId: 0,\n  note: \"optional example text description for an annotation\"\n};\n```\n* it returns\n```\n{\n  before: [{ index: 1706, start: 702.17, end: 702.37, text: \"Their\" }],\n  annotations: [\n    { index: 1707, start: 702.62, end: 703.26, text: \"reflections\" },\n    { index: 1708, start: 703.26, end: 703.36, text: \"of\" }\n  ],\n  after: [\n    { index: 1710, start: 703.45, end: 703.63, text: \"own\" },\n    { index: 1711, start: 703.63, end: 704.34, text: \"humanity.\" }\n  ]\n}\n```\n* TODO: add tests for this function\n*/\n\n/**\n * Checks if end of an annotation is included in a paragraph\n */\n// const paragraphIncludesStartOfAnnotation = (annotation, paragraph) => {\n//   // find returns undefined if it doesn't find anything\n//   const startWord = paragraph.find(w => {\n//     return annotation.start == w.start;\n//   });\n//   // find returns undefined if it doesn't find anything\n//   if (startWord) {\n//     return true;\n//   }\n\n//   return false;\n// };\n\n/**\n * Helper function\n * Checks if start of an annotation is included in a paragraph\n */\n// const paragraphIncludesEndOfAnnotation = (annotation, paragraph) => {\n//   const endWord = paragraph.find(w => {\n//     return annotation.end == w.end;\n//   });\n//   // find returns undefined if it doesn't find anything\n//   if (endWord) {\n//     return true;\n//   }\n\n//   return false;\n// };\n\n/**\n * Helper function\n * Checks if an annotation is included in a paragraph\n */\n// const paragraphIncludesAnnotation = (annotation, paragraph) => {\n//   if (\n//     paragraphIncludesStartOfAnnotation(annotation, paragraph) &&\n//     paragraphIncludesEndOfAnnotation(annotation, paragraph)\n//   ) {\n//     return true;\n//   }\n\n//   return false;\n// };\n/**\n *\n */\nconst getWordsBeforeAnnotation = (annotation, paragraph) => {\n  // TODO: move these in annotation\n  // const paragraphFirstWordTime = paragraph[0].start;\n  // const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // if (annotation.start >= paragraphFirstWordTime &&\n  //   annotation.start <= paragraphLastWordTime) {\n  //   return paragraph;\n  // }\n  ///////////////////////////////////////////////////////////\n  const paragraphFilterBeforeSelection = paragraph.filter(w => {\n    return annotation.start > w.start;\n  });\n  if (paragraphFilterBeforeSelection.length === 0) {\n    return false;\n  }\n\n  return paragraphFilterBeforeSelection;\n};\n\n/**\n *\n */\nconst getWordsAfterAnnotation = (annotation, paragraph) => {\n  // TODO: move these in annotation\n  // const paragraphFirstWordTime = paragraph[0].start;\n  // const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // if ( annotation.end >= paragraphFirstWordTime &&\n  //     annotation.end <= paragraphLastWordTime) {\n  //   return paragraph;\n  // }\n  ///////////////////////////////////////////////////////////\n  const paragraphFilterBeforeSelection = paragraph.filter(w => {\n    return annotation.end < w.end;\n  });\n  if (paragraphFilterBeforeSelection.length === 0) {\n    return false;\n  }\n\n  return paragraphFilterBeforeSelection;\n};\n\n/**\n *\n */\nconst getWordsInAnnotation = (annotation, paragraph) => {\n  ///////////////////////////////////////////////////////\n  // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  // if annotation spans across paragraph - return paragraph\n  // const paragraphFirstWordTime = paragraph[0].start;\n  // const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // if (annotation.start <= paragraphFirstWordTime && annotation.end >= paragraphLastWordTime) {\n  //   return paragraph;\n  // }\n  ///////////////////////////////////////////////////////\n  // index for start\n  const startWord = paragraph.find(w => {\n    return annotation.start === w.start;\n  });\n  const startIndex = paragraph.indexOf(startWord);\n  // index for end\n  const endWord = paragraph.find(w => {\n    return annotation.end === w.end;\n  });\n  const endIndex = paragraph.indexOf(endWord);\n\n  //  endIndex + 1 because end not included in slice()\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice\n  return paragraph.slice(startIndex, endIndex + 1);\n};\n\n/**\n * Annotation have start and end time\n * paragrap has a list of words with start and end times\n * @param {object} annotation\n * @param {float} annotation.start - time in seconds\n * @param {float} annotation.end - time in seconds\n * @param {int} annotation.labelId\n * @param {string} annotation.note\n * @param {array} paragraph - list of words\n * @param {object} paragraph[] - word object\n * @param {int} paragraph[].index - word id\n * @param {float} paragraph[].start - word start time\n * @param {float} paragraph[].end - word end time\n * @param {string} paragraph[].text - word's text\n *\n * @returns - example output - object with words divided into 3 groups, under attribute, before, annotations, after\n```json\n{\n  before: [{ index: 1706, start: 702.17, end: 702.37, text: \"Their\" }],\n  annotations: [\n    { index: 1707, start: 702.62, end: 703.26, text: \"reflections\" },\n    { index: 1708, start: 703.26, end: 703.36, text: \"of\" }\n  ],\n  after: [\n    { index: 1710, start: 703.45, end: 703.63, text: \"own\" },\n    { index: 1711, start: 703.63, end: 704.34, text: \"humanity.\" }\n  ]\n}\n```\n *\n */\nconst splitParagraphByAnnotation = (annotation, paragraph) => {\n  // if (paragraphIncludesAnnotation(annotation, paragraph)) {\n  return {\n    // slice before\n    wordsBefore: getWordsBeforeAnnotation(annotation, paragraph),\n    // slice between\n    wordsInAnnotation: getWordsInAnnotation(annotation, paragraph),\n    // slice after\n    wordsAfter: getWordsAfterAnnotation(annotation, paragraph)\n  };\n  // }\n\n  // return false;\n};\n\nexport default splitParagraphByAnnotation;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\n// const isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n//   const results = annotations.find(annotation => {\n//     return (\n//       annotation.start >= paragraphFirstWordTime &&\n//       annotation.start <= paragraphLastWordTime\n//     );\n//   });\n\n//   return results;\n// };\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\n// const isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n//   const results = annotations.find(annotation => {\n//     return (\n//       annotation.end >= paragraphFirstWordTime &&\n//       annotation.end <= paragraphLastWordTime\n//     );\n//   });\n\n//   return results;\n// };\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\n// const isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n//   const results = annotations.find(annotation => {\n//     return (\n//       annotation.start <= paragraphFirstWordTime &&\n//       annotation.end >= paragraphLastWordTime\n//     );\n//   });\n\n//   return results;\n// };\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  // const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  // if (resultsCaseTwo) {\n  //   return resultsCaseTwo;\n  // }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  // const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  // if (resultsCase3) {\n  //   return resultsCase3;\n  // }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  // const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  // if (resultsCaseFour) {\n  //   return resultsCaseFour;\n  // }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","/**\n * TODO: remove this and export from @bbc/react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  // add speakers to each word\n  const wordsWithSpeakers = addSpeakerToEachWord(words, segments);\n  // group words by speakers sequentially\n  const result = groupWordsBySpeaker(wordsWithSpeakers);\n\n  return result;\n};\n\n/**\n* Add speakers to each words\n* if it doesn't have add unknown attribute `U_UKN`\n* @param {*} words\n* @param {*} segments\n*/\nfunction addSpeakerToEachWord(words, segments) {\n  return words.map((word) => {\n    word.speaker = findSegmentForWord(word, segments);\n\n    return word;\n  });\n}\n\n/**\n * Groups Words by speaker attribute\n * @param {array} wordsWithSpeakers - same as kaldi words list but with a `speaker` label attribute on each word\n * @return {array} - list of paragraph objcts, with words, text and sepaker attributes.\n * where words is an array and the other two are strings.\n */\nfunction groupWordsBySpeaker(wordsWithSpeakers) {\n  let currentSpeaker = wordsWithSpeakers[0].speaker;\n  const results = [ ];\n  let paragraph = { words: [], text: '', speaker: '' };\n  wordsWithSpeakers.forEach((word) => {\n    // if current speaker same as word speaker add words to paragraph\n    if (currentSpeaker === word.speaker) {\n      delete word.speaker;\n      paragraph.words.push(word);\n      paragraph.text += word.text + ' ';\n      paragraph.speaker = currentSpeaker;\n    }\n    // if it's not same speaker\n    else {\n      // update current speaker\n      currentSpeaker = word.speaker;\n      // remove spacing in text\n      paragraph.text = paragraph.text.trim();\n      //save  previous paragraph\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: '', speaker: 'U_UKN' };\n      // add words attributes to new\n      paragraph.words.push(word);\n      paragraph.text += word.text + ' ';\n    }\n  });\n  // add last paragraph\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    return ((word.start >= seg.start) && (word.end <= seg.end));\n  });\n  // if find doesn't find any matches it returns an undefined\n  if (tmpSegment === undefined) {\n    // covering edge case orphan word not belonging to any segments\n    // adding UKN speaker label\n    return 'UKN';\n  } else {\n    // find returns the first element that matches the criteria\n    return tmpSegment.speaker;\n  }\n}\n\nexport default groupWordsInParagraphsBySpeakers;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@bbc/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","import React, { Component } from 'react';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\nclass Words extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker } = this.props;\n    const result = this.props.paragraph.map(word => {\n      return (\n        <span\n          title={ `start:${ word.start } - end:${ word.end }` }\n          data-prev-times = { this.generatePreviousTimes( word.start) }\n          className={ [ 'words'\n            // , styles.highlightedWord\n          ].join(' ') }\n          data-start={ word.start }\n          // TODO: make/Use helper function in Util - removePunctuation\n          data-text={ removePunctuation(word.text) }\n          // data-text={ word.text }\n          data-end={ word.end }\n          data-transcript-id={ transcriptId }\n          data-speaker={ speaker }\n          key={ 'key_' + word.id + '_' + word.end }\n          // tabIndex=\"0\"\n          role=\"button\"\n          aria-pressed=\"false\"\n          onKeyDown={ this.props.handleKeyDownWords }\n        >\n          {word.text}{' '}\n        </span>\n      );\n    });\n\n    return (\n      <>{result}</>\n\n    );\n  }\n};\n\nexport default Words;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n        console.log(label.id, annotationLabelId);\n\n        return label.id === annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","import React from 'react';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\nimport splitParagraphByAnnotation from './split-paragraph-by-annotation.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\n\nimport Paragraph from './Paragraph.js';\nimport Words from './Words.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\n\nfunction generateParagraphs(props) {\n  let wordsElements;\n  let paragraphDisplayPreference = {};\n  const { annotations, transcriptId } = props;\n\n  /**\n   *  Group words into paragraphs\n   *\n   * TODO: Breaking down words in paragraphs could be done\n   * client side or server side?\n   * using paragraphs attribute of transcript json\n   */\n  const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n    props.transcriptJson.words,\n    props.transcriptJson.paragraphs\n  );\n\n  /**\n   * Loop over paragraphs\n   */\n  const textResult = paragraphsWithWordsSpeakerText.map((paragraph, index) => {\n    /* Paragraph text for data attribute for searches, without punctuation */\n    const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n    // TODO: something around paragraph, start and end time, included or overlappng in labels start and end time\n    // to do the filtering\n\n    /**\n     * find Annotation In Paragraph\n     * findAnnotationInParagraph returns false if it doesn't find any\n     */\n    const annotation = findAnnotationInParagraph(annotations, paragraph.words);\n    // console.log('annotation', annotation);\n    const isTextSearch = paragraphTextWithoutPunctuation.includes(props.searchString.toLowerCase());\n\n    let isSpeakerSearch = false;\n    if (props.selectedOptionSpeakerSearch.length !== 0) {\n      // checks speaker against list of speakers in search,\n      // TODO: Down case comparison or use speaker ID?\n      if (props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n        isSpeakerSearch = true;\n      }\n    }\n    else {\n      isSpeakerSearch = true;\n    }\n\n    let isLabelSearch = false;\n    if (props.selectedOptionLabelSearch.length !== 0) {\n      // checks label against list of speakers in search,\n      if (props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotation.labelId; })) {\n        isLabelSearch = true;\n      }\n    }\n    else {\n      isLabelSearch = true;\n    }\n    paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n    /**\n     * Annotation In Paragraph - if present\n     *\n     * splitParagraphByAnnotation returns false if it doesn't find any.\n     * but we have already checked in previous line with `findAnnotationInParagraph`\n     */\n    if (annotation) {\n      const {\n        wordsBefore,\n        wordsInAnnotation,\n        wordsAfter\n      } = splitParagraphByAnnotation(annotation, paragraph.words);\n\n      const wordsBeforeEl = wordsBefore ? (\n        <Words\n          transcriptId={ transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key-' + index }\n          paragraph={ wordsBefore }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? props.handleWordClick(e) : null;\n          } }\n        />\n      ) : null;\n\n      const wordsInAnnotationEl = (\n        <Words\n          transcriptId={ transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          paragraph={ wordsInAnnotation }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? props.handleWordClick(e) : null;\n          } }\n        />\n      );\n\n      const wordsAfterEl = wordsAfter ? (\n        <Words\n          transcriptId={ transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key---' + index }\n          paragraph={ wordsAfter }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? props.handleWordClick(e) : null;\n          } }\n        />\n      ) : null;\n\n      wordsElements = [\n        wordsBeforeEl,\n        <AnnotationOverlayTrigger\n          key={ 'key----' + index }\n          words={ wordsInAnnotationEl }\n          labelsOptions={ props.labelsOptions }\n          annotationLabelId={ annotation.labelId }\n          annotationId={ annotation.id }\n          annotationNote={ annotation.note }\n          handleDeleteAnnotation={ props.handleDeleteAnnotation }\n          handleEditAnnotation={ props.handleEditAnnotation }\n        />,\n        wordsAfterEl\n      ];\n    } else {\n      /**\n       * if no annotation in paragraph\n       */\n      wordsElements = (\n        <Words\n          transcriptId={ transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key-----' + index }\n          // TODO: rename to wordsInParagraph? or ListOfWords?\n          paragraph={ paragraph.words }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? props.handleWordClick(e) : null;\n          } }\n        />\n      );\n    }\n\n    /**\n     * Create a Paragraph containing words, with or without annotation (overlay)\n     */\n    return (\n      <Paragraph\n        showParagraphsMatchingSearch={ props.showParagraphsMatchingSearch }\n        paragraphDisplayPreference={ paragraphDisplayPreference }\n        key={ 'key------' + index }\n        paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n        speakerName={ paragraph.speaker }\n        paragraph={ paragraph.words }\n        handleKeyDownTimecodes={ e => {\n          return e.key === 'Enter' ? props.handleTimecodeClick(e) : null;\n        } }\n        wordsElements={ wordsElements }\n      />\n    );\n  });\n\n  return textResult;\n}\n\nexport default generateParagraphs;\n","import React, { Component } from 'react';\nimport generateParagraphs from './generate-paragraphs/index.js';\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  generateParagraphsEl = ( ) => {\n    const textResult = generateParagraphs(this.props);\n\n    return textResult;\n  }\n\n  render() {\n\n    return (\n      <>\n        {this.generateParagraphsEl()}\n      </>\n    );\n  }\n}\n\nexport default Paragraphs;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFolderOpen,\n  faFolderPlus,\n  faFileAlt,\n  faFile,\n  faTasks,\n  faCut,\n  faUsers\n} from '@fortawesome/free-solid-svg-icons';\n\nconst navbarLinks = projectId => {\n\n  return [\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFolderOpen } /> Projects\n        </span>\n      ),\n      link: '/projects'\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFolderPlus } /> NewProject\n        </span>\n      ),\n      link: '/projects/new'\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFileAlt } /> Transcripts\n        </span>\n      ),\n      link: `/projects/${ projectId }/transcripts`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faFile } /> New Transcript\n        </span>\n      ),\n      link: `/projects/${ projectId }/transcripts/new`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faTasks } /> Paper Edits\n        </span>\n      ),\n      link: `/projects/${ projectId }/paperedits`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faCut } /> New Paper Edit\n        </span>\n      ),\n      link: `/projects/${ projectId }/paperedits/new`\n    },\n    {\n      name: (\n        <span>\n          {' '}\n          <FontAwesomeIcon icon={ faUsers } /> Users\n        </span>\n      ),\n      link: `/projects/${ projectId }/users`\n    }\n  ];\n};\n\nexport default navbarLinks;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Redirect } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faTag,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport MediaPlayer from '@bbc/react-transcript-editor/MediaPlayer';\nimport VideoPlayer from '@bbc/react-transcript-editor/VideoPlayer';\nimport { secondsToTimecode } from '@bbc/react-transcript-editor/timecodeConverter';\n\nimport onlyCallOnce from '../../../Util/only-call-once/index.js';\nimport CustomNavbar from '../../lib/CustomNavbar/index.js';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\nimport LabelsList from './LabelsList/index.js';\n\nimport Paragraphs from './Paragraphs/index.js';\nimport SearchBar from './SearchBar/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\nimport navbarLinks from '../../lib/custom-navbar-links';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport CustomAlert from '../../lib/CustomAlert/index.js';\nimport './index.css';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass TranscriptAnnotate extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId:  this.props.match.params.transcriptId,\n      projectTitle: '',\n      transcriptJson: null,\n      // TODO: rename title to Transcript Title\n      transcriptTitle: '',\n      url: null,\n      mediaDuration: '00:00:00:00',\n      currentTime: 0,\n      timecodeOffset: 0,\n      searchString: '',\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      wordsToSearchCSS: '',\n      showTextSearchPreferences: false,\n      showLabelsSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showSelectedOptionLabelSearch: false,\n      selectedOptionLabelSearch: [],\n      selectedOptionSpeakerSearch: [],\n      showParagraphsMatchingSearch: false,\n      notification: null,\n      annotations: [],\n      labelsOptions: [],\n      speakersOptions : [ ],\n      isLabelsListOpen: false\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.get_TranscriptLabelsAnnotations(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        console.log('TranscriptAnnotate', json.transcriptId);\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptJson: json.transcript,\n          annotations: json.annotations,\n          transcriptTitle: json.transcriptTitle,\n          url: json.url,\n          labelsOptions: json.labels,\n          speakersOptions: makeListOfUniqueSpeakers(json.transcript.paragraphs)\n        });\n      })\n      .catch((e) => {\n        this.setState({\n          notification:<CustomAlert\n            dismissable={ true }\n            variant={ 'danger' }\n            heading={ 'Server Error' }\n            message={ <p>Error reaching the server to fetch transcript </p> }\n          />\n        });\n      });\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleTimecodeClick= e => {\n    if ( e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  // TODO: bug, when highlights a sentence, within a paragraph, it also highlights\n  // lose words belonging to that sentence, in the paragraph.\n  // eg 'a day not so long ago' it will also highlight all the occurrences of 'a'\n  // and other words in the sentence\n  // there might be a way to narrow down with CSS selector\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.state.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    // TODO: PUT with API Wrapper\n\n    ApiWrapper.updateLabel(this.state.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.state.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  handleTimeUpdate = (e) => {\n    const currentTime = e.target.currentTime;\n    this.setState({\n      currentTime\n    });\n  }\n\n  onLoadedDataGetDuration = e => {\n    const currentDuration = e.target.duration;\n    const currentDurationWithOffset = currentDuration + this.state.timecodeOffset;\n    const durationInSeconds = secondsToTimecode(currentDurationWithOffset);\n\n    this.setState({\n      mediaDuration: durationInSeconds\n    });\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  redirectToEditPage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.transcriptId }/correct` } />;\n    }\n  }\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      ApiWrapper.createAnnotation(this.state.projectId, this.state.transcriptId, newAnnotation)\n        .then(json => {\n        // this.setState({\n        //   labelsOptions: json.labels\n        // });\n          newAnnotation.id = json.annotation.id;\n          annotations.push(newAnnotation);\n\n          this.setState( { annotations: annotations });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n\n  }\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    ApiWrapper.deleteAnnotation(this.state.projectId, this.state.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: newAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.state.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleLabelListOpen = () => {\n    this.setState((state) => {\n      return {\n        isLabelsListOpen: !state.isLabelsListOpen\n      };\n    });\n  }\n\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.state.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    return (<>\n      {this.renderRedirect()}\n      <Container fluid={ true } style={ { backgroundColor: '#f9f9f9', marginBottom: '5em' } }>\n        <style scoped>\n          {''}\n        </style>\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <CustomNavbar\n          links={ navbarLinks(this.state.projectId) }\n        />\n        <br />\n        {this.state.notification}\n        <Row>\n          <Col sm={ 12 } md={ 10 } ld={ 10 } xl={ 10 }>\n            <CustomBreadcrumb\n              items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`,\n                },\n                {\n                  name: 'Annotate'\n                }\n              ] }\n            />\n          </Col>\n          <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Button variant=\"outline-secondary\" title=\"correct transcript text\" onClick={ this.redirectToEditPage } size=\"lg\" block>\n            Edit\n            </Button>\n            <br/>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n            <MediaPlayer\n              mediaDuration={ this.state.mediaDuration }\n              hookSeek={ foo => (this.setCurrentTime = foo) }// <--\n              hookPlayMedia={ foo => (this.playMedia = foo) }// <--\n              hookIsPlaying={ foo => (this.isPlaying = foo) } // <--\n              // rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n              rollBackValueInSeconds={ 15 }\n              timecodeOffset={ this.state.timecodeOffset }\n              mediaUrl={ this.state.url }\n              // handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n              videoRef={ this.videoRef }\n              // handleSaveTranscript={ this.handleSaveTranscript }\n              handleSaveTranscript={ () => {alert('feature not implemented yet');} }\n            />\n            <br/>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={ 12 } sm={ 3 } md={ 3 } lg={ 3 } xl={ 3 } style={ { paddingRight:'0' } }>\n            {this.state.transcriptJson !== null && (\n              <VideoPlayer\n                tabindex=\"0\"\n                role=\"button\"\n                aria-pressed=\"false\"\n                mediaUrl={ this.state.url }\n                onTimeUpdate={ this.handleTimeUpdate }\n                videoRef={ this.videoRef }\n                previewIsDisplayed={ true }\n                onLoadedDataGetDuration={ this.onLoadedDataGetDuration }\n              />\n            )}\n            <Row>\n              <Col xs={ 9 } sm={ 9 } md={ 8 } lg={ 9 } xl={ 9 }>\n                <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                  <Button variant=\"warning\" id=\"defaultHighlightBtn\" data-label-id={ 0 } onClick={ this.handleCreateAnnotation } ><FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight</Button>\n                  <Dropdown.Toggle split variant=\"warning\" id=\"dropdown-split-basic\" data-lable-id={ 0 }/>\n                  <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                    {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                      return (\n                        <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                          <Row data-label-id={ label.id }>\n                            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                          </Row>\n                        </Dropdown.Item>\n                      );\n                    })}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col xs={ 3 } sm={ 3 } md={ 4 } lg={ 3 } xl={ 3 }>\n                <Button\n                  variant=\"outline-secondary\"\n                  block\n                  onClick={ this.handleLabelListOpen }\n                  title={ 'View labels options' }><FontAwesomeIcon icon={ faTag } /><FontAwesomeIcon icon={ faCog } />\n                </Button>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <Form.Text className=\"text-muted\">\n            Select some text in the transcript then click the highlight button.\n                  <br/>You can choose btween default or custom labels to categorise your annotations.\n                </Form.Text>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <LabelsList\n                  isLabelsListOpen={ this.state.isLabelsListOpen }\n                  labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                  onLabelUpdate={ this.onLabelUpdate }\n                  onLabelCreate={ this.onLabelCreate }\n                  onLabelDelete={ this.onLabelDelete }\n                />\n              </Col>\n            </Row>\n            <br/>\n\n          </Col>\n          <Col xs={ 12 } sm={ 9 } md={ 9 } lg={ 9 } xl={ 9 }>\n\n            <Card>\n              <SearchBar\n                labelsOptions={ this.state.labelsOptions }\n                speakersOptions={ this.state.speakersOptions }\n                handleSearch={ this.handleSearch }\n                handleLabelsSearchChange={ this.handleLabelsSearchChange }\n                handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n                handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n              />\n              <Card.Body\n                onDoubleClick={ this.handleWordClick }\n                onClick={ this.handleTimecodeClick }\n                style={ { height: '80vh', overflow: 'scroll' } }\n              >\n                {highlights}\n                {/* TODO: instead of null, if transcript is not provided, eg offline or server error, then add custom alert */}\n                {this.state.transcriptJson\n                && <Paragraphs\n                  labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                  annotations={ this.state.annotations }\n                  transcriptJson={ this.state.transcriptJson }\n                  searchString={ this.state.searchString }\n                  showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n                  selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch }\n                  selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch }\n                  transcriptId={ this.state.transcriptId }\n                  handleTimecodeClick={ this.handleTimecodeClick }\n                  handleWordClick={ this.handleWordClick }\n                  handleDeleteAnnotation={ this.handleDeleteAnnotation }\n                  handleEditAnnotation={ this.handleEditAnnotation }\n                />}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <CustomFooter />\n      </Container>\n    </>\n    );\n  }\n}\n\nexport default TranscriptAnnotate;\n","import React, { Component } from 'react';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor } from '@bbc/react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport CustomNavbar from '../lib/CustomNavbar/index.js';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\n// import CustomFooter from '../lib/CustomFooter/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport navbarLinks from '../lib/custom-navbar-links';\nimport CustomFooter from '../lib/CustomFooter/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url\n        });\n      });\n  }\n\n  saveToServer = () => {\n    // TODO: add Api call to save content of\n    alert('save to server');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in @bbc/react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in bbc/react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('ApiWrapper.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { marginBottom: '5em' } } fluid>\n\n          <CustomNavbar\n            links={ navbarLinks(this.state.projectId) }\n          />\n          <br/>\n\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <CustomBreadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {/* <Row> */}\n          {this.state.transcriptJson !== null &&\n          <TranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            // title={ this.state.projectTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n          />}\n          {/* </Row> */}\n\n          <CustomFooter />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from @bbc/react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegment = 'UKN';\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@bbc/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","import React, { Component } from 'react';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    console.log('render - AnnotationOverlayTrigger', this.props.annotationNote);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        this.setState({\n          annotations: json.annotations\n        });\n      });\n  }\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    ApiWrapper.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      ApiWrapper.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    ApiWrapper.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    return (\n      <>\n\n        {/* <div style={ {\n          display:\n          // this.state.isShowLabelsReference ?\n           'block'\n          //  : 'none'\n          ,\n          position: 'absolute',\n          top: '0px',\n          left: '0px',\n          width: '5vw',\n          height: '100vh',\n          backgroundColor: 'black'\n        } }>\n            Test\n        </div> */}\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        {/* // Preview video - HTML5 Video element or  @bbc/react-transcript-editor/VideoPlayer\n        // Media control - HTML5 default or @bbc/react-transcript-editor/MediaPlayer\n        // Search Bar - from TranscriptAnnotate component\n        // Text -  from TranscriptAnnotate component */}\n        <video\n          src={ this.props.url }\n          ref={ this.videoRef }\n          onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n          // onTimeUpdate={ (e) => {console.log(e.target.currentTime); } }\n          style={ {\n            // display: this.state.isVideoTranscriptPreviewShow,\n            width: '100%',\n            height:'10em',\n            backgroundColor: 'black'\n          } }\n          controls/>\n        <Card>\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: '60vh', overflow: 'scroll' } }\n          >\n            <div>\n              {highlights}\n              {this.props.transcript\n          && <Paragraphs\n            labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n            annotations={ this.state.annotations ? this.state.annotations : [] }\n            transcriptJson={ this.props.transcript }\n            searchString={ this.state.searchString ? this.state.searchString : '' }\n            showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n            selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n            selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n            transcriptId={ this.props.transcriptId }\n            handleTimecodeClick={ this.handleTimecodeClick }\n            handleWordClick={ this.handleWordClick }\n            handleDeleteAnnotation={ this.handleDeleteAnnotation }\n            handleEditAnnotation={ this.handleEditAnnotation }\n          />}\n            </div>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ transcript.id }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ transcript.id } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport VideoContext from 'videocontext';\n\nclass PaperCutsPlayerViewer extends React.PureComponent {\n  constructor(props) {\n    const {\n      width = 640,\n      height = 360,\n      playlist = [],\n    } = props;\n\n    super(props);\n\n    this.playlist = playlist;\n    this.canvasRef = React.createRef();\n    this.canvas = (<canvas\n      ref={ this.canvasRef }\n      width={ width }\n      height={ height }\n    />);\n  }\n\n  componentDidMount() {\n    this.videoContext = new VideoContext(\n      this.canvasRef.current,\n      (err) => console.error(\n        'There was problem instantiating the Video Context in Paper Cuts Player Viewer component',\n        err,\n      )\n    );\n    this.loadPlaylist();\n  }\n\n  loadPlaylist = () => {\n    this.playlist.forEach(({ type, sourceStart, start, duration, src }) => {\n      const node = this.videoContext[type](src, sourceStart);\n      node.startAt(start);\n      node.stopAt(start + duration);\n      node.connect(this.videoContext.destination);\n    });\n  }\n\n  render() {\n    return (this.canvas);\n  }\n}\n\nexport default PaperCutsPlayerViewer;\n","/* eslint-disable template-curly-spacing */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styles from './VideoContextProgressBar.module.css';\n\nclass VideoContextProgressBar extends React.PureComponent {\n  constructor(props) {\n    const {\n      width = 640,\n    } = props;\n\n    super(props);\n\n    this.width = width;\n    this.state = { progress: 0 };\n  }\n\n  componentDidUpdate() {\n    this.videoContext = this.props.videoContext;\n    this.setState({ duration: this.videoContext.duration });\n    this.updateProgress();\n  }\n\n  updateProgress = () => requestAnimationFrame(() => {\n    const currentTime = this.videoContext && this.videoContext.currentTime;\n    const progress = (currentTime / this.state.duration) * 100;\n\n    if (this.state.progress !== progress) this.setState({ progress });\n\n    requestAnimationFrame(this.updateProgress);\n  });\n\n  handleClick = ({ nativeEvent: { offsetX } }) => {\n    this.videoContext.currentTime =\n      (offsetX / this.width) * this.state.duration;\n  }\n\n  getTracks = () =>\n    this.state.duration && this.videoContext._sourceNodes.reverse().map(\n      ({ startTime, stopTime, elementURL }, i) => {\n        const marginLeft = (startTime / this.state.duration) * this.width;\n        const width =\n          ((stopTime - startTime) / this.state.duration) * this.width;\n        const key = `${elementURL.split('/').slice(-1).pop()}.${i}`;\n\n        return (\n          <div key={ key } style={ { pointerEvents: 'none' } } >\n            <div className={ styles.papercutsPlayerProgressTrackBuffer } />\n            <div className={ styles.papercutsPlayerProgressTrack }\n              style={ { width, marginLeft } }\n            />\n            <div className={ styles.papercutsPlayerProgressTrackBuffer }/>\n          </div>\n        );\n      });\n\n  render() {\n    if (!this.tracks) this.tracks = this.getTracks();\n\n    return (\n      <>\n        <div\n        // className='papercuts-player-progress papercuts-player-progress-back'\n          className={ [ styles.papercutsPlayerProgress, styles.papercutsPlayerProgressBack ].join(' ') }\n          onClick={ this.handleClick }\n          style={ { width: this.width } }\n        >\n          <div\n          // className='papercuts-player-progess papercuts-player-progress-front'\n            className={ [ styles.papercutsPlayerProgress, styles.papercutsPlayerProgressFront ].join(' ') }\n            style={ { width: `${this.state.progress}%` } }\n          >\n            { this.tracks }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default VideoContextProgressBar;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop } from '@fortawesome/free-solid-svg-icons';\n\nconst playIcon = <FontAwesomeIcon icon={ faPlay } />;\nconst pauseIcon = <FontAwesomeIcon icon={ faPause } />;\nconst stopIcon = <FontAwesomeIcon icon={ faStop } />;\n\nclass Controls extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isPlaying: false\n    };\n  }\n\n  handlePlay = () => {\n    this.props.videoContext.play();\n    this.setState({ isPlaying: true });\n  }\n\n  handlePause = () => {\n    this.props.videoContext.pause();\n    this.setState({ isPlaying: false });\n  }\n\n  handleStop = () => {\n    this.props.videoContext.pause();\n    this.props.videoContext.currentTime = 0;\n    this.setState({ isPlaying: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Col\n          sm={ 6 } md={ 6 } ld={ 6 } xl={ 6 }\n          // className={ 'col-auto' }\n        >\n          <Button\n            size=\"sm\"\n            block\n            variant=\"outline-secondary\"\n            onClick={ this.state.isPlaying ? this.handlePause : this.handlePlay }\n          >\n            { this.state.isPlaying ? pauseIcon : playIcon }\n          </Button>\n        </Col>\n        <Col\n          sm={ 6 } md={ 6 } ld={ 6 } xl={ 6 }\n          // className={ 'col-auto' }\n        >\n          <Button\n            size=\"sm\"\n            block\n            variant=\"outline-secondary\"\n            onClick={ this.handleStop }\n          >\n            { stopIcon }\n          </Button>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Controls;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport VideoContextViewer from './VideoContextViewer';\nimport VideoContextProgressBar from './VideoContextProgressBar';\nimport VideoContextControls from './VideoContextControls';\nimport Row from 'react-bootstrap/Row';\n\nclass PreviewCanvas extends React.PureComponent {\n\n  constructor(props) {\n    const { playlist = [], width = 640 } = props;\n\n    super(props);\n\n    this.width = width;\n    this.height = (9 / 16) * this.width;\n\n    this.playlist = playlist;\n    this.videoContextRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.videoContext =\n      this.videoContextRef\n      && this.videoContextRef.current\n      && this.videoContextRef.current.videoContext;\n\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <>\n        <Row\n          className={ 'justify-content-center' }\n          style={ { backgroundColor: 'black' } }\n        >\n          <VideoContextViewer\n            ref={ this.videoContextRef }\n            playlist={ this.playlist }\n            width={ this.width }\n            height={ this.height }\n          />\n        </Row>\n        <Row\n          className={ 'justify-content-center' }\n          style={ { backgroundColor: 'lightgrey' } }\n        >\n          <VideoContextProgressBar\n            width={ this.width }\n            videoContext={ this.videoContext && this.videoContext }\n          />\n        </Row>\n        <Row\n          // noGutters\n          // className={ 'justify-content-center' }\n          style={\n            {\n              marginTop: '0.4em'\n            }\n          }\n        >\n          <VideoContextControls\n            videoContext={ this.videoContext && this.videoContext }\n          />\n        </Row>\n      </>\n    );\n  }\n};\n\nexport default PreviewCanvas;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w, index) => {return (\n        // eslint-disable-next-line react/jsx-key\n        <span\n          // TODO: add w.id to words to us as index?\n          key={ w.start + index }\n          className=\"words\"\n          title={ `stat: ${ w.start }- end: ${ w.end }` }\n          data-start={ w.start }\n          data-end={ w.end }\n        >{w.text} </span>);});\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\n\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: 'white' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\nconst SortableItem = sortableElement(({ value, index, type, handleDelete, handleEdit }) => {\n  return (<li>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faPen } onClick={ () => { handleEdit(index); } } /> : null}\n\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n        {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faTrash } onClick={ () => {handleDelete(index);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    // this.setState(({ items }) => ({\n    //   items:\n    // })\n    // );\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    console.log(result);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => (\n          <SortableItem\n            key={ `item-${ index }` }\n            index={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n          />\n        ))}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n      // TODO: remove window.words, it's for troubleshooting\n      window.words = words;\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: words[0].dataset.transcriptId,\n          speaker: words[0].dataset.speaker,\n          words: words\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport cuid from 'cuid';\nimport Tab from 'react-bootstrap/Tab';\nimport PreviewCanvas from './PreviewCanvas/index.js';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@bbc/aes31-adl-composer';\nimport jsonToFCPX from '@bbc/fcpx-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScript from './ProgrammeScript.js';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs/index.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\nclass ProgramScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript\n        }\n        // TODO: figure out how to update preview\n        // , () => {\n        //   this.handleUpdatePreview();\n        // }\n        );\n      });\n\n  }\n\n  // TODO: save to server\n  handleProgrammeScriptOrderChange = (list) => {\n    console.log('handleProgrammeScriptOrderChange', list);\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDeleteProgrammeScriptElement = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    console.log(i);\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  handleEditProgrammeScriptElement = (i) => {\n    console.log(i);\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    console.log(newText);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      console.log(text);\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert-point';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    console.log('getDataFromUserWordsSelection::', result);\n    if (result) {\n      console.log(JSON.stringify(result, null, 2));\n\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName: 'NA',\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: 24,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset: 0\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    // const result = generateADL(edlSq);\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      // TODO: sampleRate should be pulled from the sequence\n      sampleRate: '44100',\n      // TODO: frameRate should be pulled from the clips in the sequence\n      // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n      // but again frameRate should not be hard coded\n      frameRate: 24,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          ...element,\n          startTime: element.start,\n          endTime: element.end,\n          reelName: 'NA',\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: 24,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset: 0\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log(edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text;}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleUpdatePreview = () => {\n    let timelineStartTime = 0;\n    //  const { playlist } = this.state;\n    // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n    const playlist = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n        const duration = element.end - element.start;\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const result = {\n          type:'video',\n          start: timelineStartTime,\n          sourceStart: element.start,\n          duration: duration,\n          src: currentTranscript.url\n        };\n\n        timelineStartTime += duration;\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n\n    // Workaround to mound and unmoun the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      console.log('handleUpdatePreview', playlist);\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    console.log('handleUpdatePreview', playlist);\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  render() {\n    return (\n      <Tab.Content>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {/* Programme:  */}\n          {/* <small> */}\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n          {/* </small> */}\n        </h2>\n        {/* <hr/> */}\n        { !this.state.resetPreview ?\n          <PreviewCanvas playlist={ this.state.playlist } width={ '300' }/>\n          : null }\n        <br/>\n\n        <Row noGutters>\n          <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button\n              // block\n              variant=\"outline-secondary\"\n              onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n              title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n            >\n              <FontAwesomeIcon icon={ faPlus } /> Selection\n            </Button>\n          </Col>\n          <Col sm={ 12 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"outline-secondary\">\n                <FontAwesomeIcon icon={ faPlus } />\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                  title=\"Add a title header element to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faHeading } /> Heading\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                  title=\"Add a title voice over element to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                  title=\"Add a note element to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faStickyNote } /> Note\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button variant=\"outline-secondary\"\n              onClick={ this.handleUpdatePreview }\n              // size=\"sm\"\n              title=\"update preview\"\n              // block\n            >\n              <FontAwesomeIcon icon={ faSync } /> Preview\n            </Button>\n          </Col>\n          <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"outline-secondary\">\n                <FontAwesomeIcon icon={ faShare } /> Export\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item\n                  onClick={ this.handleExportEDL }\n                  title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ this.handleExportADL }\n                  title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                >\n                  {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ this.handleExportFCPX }\n                  title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  onClick={ this.handleExportTxt }\n                  title=\"export Text, export the programme script as a text version\"\n                >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={ () => {alert('export word doc not implemented yet');} }\n                  title=\"export docx, export the programme script as a word document\"\n                >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item\n                  onClick={ this.handleExportJson }\n                  title=\"export Json, export the programme script as a json file\"\n                >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Col>\n          <Col sm={ 12 } md={ 1 } ld={ 1 } xl={ 1 }>\n            <Button variant=\"outline-secondary\"\n              onClick={ this.handleSaveProgrammeScript }\n              // size=\"sm\"\n              title=\"save programme script\"\n              block\n            >\n              <FontAwesomeIcon icon={ faSave } />\n              {/* Save */}\n            </Button>\n          </Col>\n        </Row>\n        <hr/>\n        <article\n          style={ { height: '60vh', overflow: 'scroll' } }\n          onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n        >\n          { this.state.programmeScript ? <ProgrammeScript\n            programmeScriptElements={ this.state.programmeScript.elements }\n            handleProgrammeScriptOrderChange={ this.handleProgrammeScriptOrderChange }\n            handleDeleteProgrammeScriptElement={ this.handleDeleteProgrammeScriptElement }\n            handleEditProgrammeScriptElement={ this.handleEditProgrammeScriptElement }\n\n          />\n            : null }\n        </article>\n      </Tab.Content>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport CustomNavbar from '../../lib/CustomNavbar/index.js';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\nimport navbarLinks from '../../lib/custom-navbar-links';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgramScript from './ProgramScript/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n\nclass PaperEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n    };\n  }\n\n  componentDidMount = async () => {\n\n    ApiWrapper.get_ProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <CustomNavbar\n          links={ navbarLinks(this.state.projectId) }\n        />\n        <br/>\n\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n          {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n            </Button>\n          </Col> */}\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgramScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n              />\n            </Col>\n          </Row>\n        </Container>\n        <CustomFooter />\n      </Container>\n    );\n  }\n}\n\nexport default PaperEdit;\n","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Projects from './Components/Projects/index.js';\nimport Project from './Components/Projects/Project.js';\nimport TranscriptAnnotate from './Components/Transcripts/TranscriptAnnotate/index.js';\nimport TranscriptCorrect from './Components/Transcripts/TranscriptCorrect.js';\nimport PaperEdit from './Components/PaperEdits/PaperEdit';\nimport CustomAlert from './Components/lib/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nimport './App.css';\n\nconst demoWarningMessage = (<p> This is Demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n>see project Github repository for more info</Alert.Link>.</p>);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transcriptJson: null\n    };\n  }\n  // TODO: remove unused rootes\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    let envWarning = null;\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      envWarning = (\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Demo mode' }\n            message={ demoWarningMessage }/>\n        </Container>);\n    }\n\n    return (<>\n\n      {envWarning}\n\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Projects } />\n          <Route exact path=\"/projects\" component={ Projects } />\n          <Route exact path=\"/projects/:projectId\" component={ Project } />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n            component={ TranscriptCorrect }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/annotate\"\n            component={ TranscriptAnnotate }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/paperedits/:papereditId\"\n            component={ PaperEdit }\n          />\n        </Switch>\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"papercutsPlayerProgress\":\"VideoContextProgressBar_papercutsPlayerProgress__3Ob4p\",\"papercutsPlayerProgressBack\":\"VideoContextProgressBar_papercutsPlayerProgressBack__1Wjfn\",\"papercutsPlayerProgressFront\":\"VideoContextProgressBar_papercutsPlayerProgressFront__3ggno\",\"papercutsPlayerProgressTrack\":\"VideoContextProgressBar_papercutsPlayerProgressTrack__5E6Ba\",\"papercutsPlayerProgressTrackBuffer\":\"VideoContextProgressBar_papercutsPlayerProgressTrackBuffer__1yKEJ\"};"],"sourceRoot":""}