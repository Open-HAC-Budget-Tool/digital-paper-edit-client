{"version":3,"sources":["Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.module.css","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ListPage/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/CustomBreadcrumb/index.js","Components/lib/CustomFooter/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","Util/which-js-env/index.js","ApiWrapper/index.js","Components/Projects/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/CustomAlert/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/BatchTranscriptForm.js","Components/Transcripts/NewBatchTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","Components/Transcripts/TranscriptCorrect.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/select-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Word.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/css-color-names.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelForm.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelModal.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEdits/PaperEdit/Transcripts/get-user-selection.js","Components/PaperEdits/PaperEdit/Transcripts/Transcript.js","Components/PaperEdits/PaperEdit/Transcripts/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/Filler.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/ProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/VideoContextPreview/VideoContextProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/Controls.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/VideoContextPreview/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/index.js","Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js","Components/PaperEdits/PaperEdit/ProgramScript/get-data-from-user-selection.js","Components/PaperEdits/PaperEdit/ProgramScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEdits/PaperEdit/ProgramScript/programme-script-json-to-docx/index.js","Components/PaperEdits/PaperEdit/ProgramScript/index.js","Components/PaperEdits/PaperEdit/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SimpleCard","handleDelete","confirm","props","id","alert","handleEdit","showLinkPath","Card","style","width","marginBottom","Body","Row","to","this","cursor","Col","xs","sm","md","ld","xl","Title","href","title","Link","Button","onClick","variant","size","icon","faPen","faTrash","Subtitle","className","description","Component","List","listItems","items","map","item","display","key","filter","height","overflow","React","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","InputGroup","Prepend","Text","faSearch","FormControl","onChange","placeholder","aria-label","aria-describedby","Page","results","project","handleUpdateList","searchEl","length","handleShowCreateNewItemForm","block","model","ItemForm","handleTitleChange","event","handleDescriptionChange","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal","Footer","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","modalTitle","CustomBreadcrumb","breadcrumbs","index","link","Breadcrumb","Item","name","active","CustomFooter","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","data","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","a","async","fetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","window","env","API_URL","res","json","projects","getProject","resProject","projectTitle","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","DemoApiWrapper","response","_id","status","ok","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","whichJsEnv","undefined","process","versions","electron","console","debug","cep","error","jsENV","log","demoApiWrapper","Object","freeze","apiWrapper","electronWrapper","ElectronWrapper","adobeCEPWrapper","AdobeCEPWrapper","Projects","handleSaveItem","updateProject","then","findItemById","findIndex","element","isNewItemModalShow","itemId","createProject","push","list","p","handleEditItem","showLinkPathToItem","handleDeleteItem","bind","getAllProjects","result","tmpList","deleteProject","newItemsList","Container","marginTop","ListPage","deleteItem","createNew","editItem","CustomTranscriptCard","borderStatus","Badge","showLink","Alert","faExclamationTriangle","errorMessage","border","disabled","Spinner","as","animation","role","aria-hidden","faCheck","subtitle","ListPageTranscript","itemsCards","content","lg","handleShowCreateNewBatchForm","CustomAlert","handleDismiss","onClose","dismissible","heading","Heading","message","TranscriptForm","handleAdobeCepSetFilePath","__adobe_cep__","evalScript","path","basename","adobeCepFilePath","handleFileUpload","file","Array","from","files","FormData","append","mediaFileSelected","sendRequest","uploading","get","createTranscript","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","dismissable","accept","NewTranscriptFormModal","BatchTranscriptForm","listOfFilesPath","getAll","filePath","listOfFiles","listOfFileTypes","individualFile","individualFileFormData","multiple","NewBatchTranscriptFormModal","Transcripts","componentWillUnmount","interval","clearInterval","areThereTranscriptsInProgress","newItem","newitems","handleSaveBatch","itemsProps","isNewBatchModalShow","newItems","itemsList","handleSaveEditedItem","newEditedItem","itemIdex","updateTranscript","isEditItemModalShow","handleCloseBatchModal","handleCloseModalEdit","isServerError","setInterval","deleteTranscript","findId","tmpNewList","faFileAlt","PaperEdits","updatePaperEdit","createPaperEdit","getAllPaperEdits","deletePaperEdit","Project","context","match","params","projectName","Tabs","activeKey","onSelect","Tab","eventKey","TranscriptCorrect","componentDidMount","transcriptJson","clipName","saveToServer","transcriptEditorRef","current","getEditorContent","redirectToAnnotatePage","renderRedirect","createRef","mediaType","extname","fluid","transcriptData","mediaUrl","isEditable","sttJsonType","ref","handleAnalyticsEvents","colourStyles","control","styles","backgroundColor","option","isDisabled","tmpColor","isFocused","isSelected","color","borderLeft","borderColor","multiValue","multiValueLabel","multiValueRemove","speakersColorStyles","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleFilterResults","isShowingFilterOptions","showTextSearchPreferences","showSpeakersSearchPreferences","showLabelsSearchPreferences","Append","faFilter","faTag","isMulti","isSearchable","options","labelsOptions","faUser","speakersOptions","Check","checked","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","text","speaker","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","addWordsToSpeakersParagraphs","findAnnotationInParagraph","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","data-paragraph-text","paragraphTextWithoutPunctuation","speakerName","toUpperCase","shortTimecode","unselectable","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","i","dec","Math","floor","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","wordEl","note","csscolors","colorNamesList","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","handleSave","onLabelSaved","defaultValue","onInput","rows","faSyncAlt","triangle","onChangeComplete","colors","LabelModal","handleShow","openBtn","LabelsList","removeLabel","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup","faTimes","labelsList","overflowY","overflowX","isLabelsListOpen","faTags","faCog","onlyCallOnce","cb","duration","timer","args","arguments","clearTimeout","setTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","has","set","Transcript","handleLoadTranscription","componentMounted","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","currentTime","play","isShowParagraphsMatchingSearch","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","parse","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","showLabelsReference","getCurrentWordTime","currentWordTime","time","round","highlights","scoped","src","onTimeUpdate","controls","ButtonGroup","Dropdown","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","DropdownButton","drop","onDoubleClick","transcriptsElNav","Nav","faClock","transcriptsElTab","Pane","defaultActiveKey","Content","Filler","percentage","background","borderRadius","ProgressBar","position","opacity","getPercentage","VideoContextProgressBar","useRef","useState","setPercentage","videoContext","setVideoContext","setWidth","useLayoutEffect","offsetWidth","useEffect","fillerAnimation","percent","requestAnimationFrame","offsetX","nativeEvent","playIcon","faPlay","pauseIcon","faPause","stopIcon","faStop","Controls","isPlaying","setIsPlaying","handlePause","handlePlay","handleStop","VideoContextPreview","canvasRef","VideoContext","playlist","sourceStart","node","startAt","stopAt","connect","destination","seconds","pause","vc","Date","toISOString","substr","defaultProps","PreviewCanvas","VoiceOver","faMicrophoneAlt","PaperCut","w","userSelect","TitleHeading","Note","InsertPoint","faArrowAltCircleRight","DragHandle","sortableHandle","faGripLines","SortableItem","sortableElement","indexNumber","faArrowAltCircleLeft","SortableContainer","sortableContainer","children","listStyle","ProgrammeScript","onSortEnd","oldIndex","newIndex","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement","parseWordElDataset","innerText","getDataFromUserWordsSelection","isOneParagraph","firstword","programmeScriptJsonToDocx","edlJson","isWithClipReference","doc","Document","creator","sections","events","HeadingLevel","HEADING_1","spacing","after","TextRun","italics","bold","allCaps","addSection","properties","TITLE","alignment","AlignmentType","CENTER","resolve","reject","Packer","toBlob","blob","ProgramScript","elements","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","cuid","insertPointElement","handleAddTranscriptSelectionToProgrammeScript","previousWordSpeaker","currentParagraph","paragraphsResult","divideWordsSelectionsIntoParagraphs","reverse","getSequenceJsonEDL","edlSq","programmeScriptPaperCutsWithId","currentTranscript","mediaFps","metadata","fps","startTime","endTime","reelName","offset","timecode","sampleRate","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","firstElement","generateADL","projectOriginator","edits","frameRate","handleExportFCPX","jsonToFCPX","handleExportXML","jsonToAudition","getProgrammeScriptJson","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleCepExportSequence","paperCuts","tmpEdl","premiereCommandString","info","handleExportTxt","handleExportDocx","programmeScriptDocx","handleExportDocxWithClipReference","handleUpdatePreview","timelineStartTime","resetPreview","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","noGutters","faPlus","faHeading","faSync","faShare","faInfoCircle","Divider","faSave","PaperEdit","getProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","faAngleDown","faAngleUp","span","demoWarningMessage","rel","NoMatch","App","envWarning","offlineWarning","navigator","onLine","exact","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f16c0637.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__1kdz6\",\"unselectable\":\"Paragraphs_unselectable__3k2Ob\",\"highlightedWord\":\"Paragraphs_highlightedWord__3mJtY\"};","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <Card style={ { width: '100%', marginBottom: '1em' } }>\n        <Card.Body>\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                  <a href={ `#${ this.showLinkPath() }` } >\n                    {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <section style={ { height: '75vh', overflow: 'scroll' } }>\n        {listItems}\n      </section>\n    </>\n    );\n  }\n}\n\nexport default List;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n        console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n        console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      // try {\n      //   // commenting out because of error \"chdir: Error: process.chdir is not supported\"\n      //   // process.chdir(__dirname);\n      //   // process.chdir('..');\n      //   // console.log('New directory: ' + process.cwd());\n      // }\n      // catch (err) {\n      //   console.log('chdir: ' + err);\n      // }\n      return 'cep';\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default ( () => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n  if (jsENV === 'cep') {\n    const AdobeCEPWrapper = window.AdobeCEPWrapper;\n    const adobeCEPWrapper = new AdobeCEPWrapper();\n    Object.freeze(adobeCEPWrapper);\n\n    return adobeCEPWrapper;\n  }\n})();\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport {HashRouter} from 'react-router-dom';\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n  async componentDidMount () {\n    try {\n    // TODO: do we need to add user id in request?\n      const result = await ApiWrapper.getAllProjects();\n\n      if (result) {\n      // add a display property for component cards search\n        const tmpList = result.map(project => {\n          project.display = true;\n\n          return project;\n        });\n        this.setState({ items: tmpList });\n      }\n    } catch (e) {\n      console.log('Error with ApiWrapper.getAllProjects', e);\n    }\n    // TODO: some error handling\n  };\n\n  // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createProject(item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const projects = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newProject = response.project;\n          newProject.display = true;\n          projects.push(response.project);\n          this.setState({\n            isNewItemModalShow: false,\n            items: projects,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updateProject(item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const project = response.project;\n          // need to add display true attribute for search to the new project\n          project.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          this.findItemById(items, item);\n          const projectIndex = this.state.items.findIndex(element => element.id === project.id);\n          items[projectIndex] = project;\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n    console.log('edit item', item);\n  }\n\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deleteProject(itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (<>\n    <HashRouter>\n      <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb items={ [\n              {\n                name: 'Projects'\n              }\n            ] } />\n          </Col>\n        </Row>\n        <ListPage\n          model={ 'Project' }\n          items={ this.state.items }\n          handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n          deleteItem={ this.createNew }\n          editItem={ this.createNew }\n          handleEdit={ this.handleEditItem }\n          handleDelete={ this.handleDeleteItem }\n          showLinkPath={ this.showLinkPathToItem }\n          handleUpdateList={ this.handleUpdateList }\n        />\n        <ItemFormModal\n          title={ this.state.title }\n          description={ this.state.description }\n          id={ this.state.itemId }\n          modalTitle={ this.state.itemId ? 'Edit Project' : 'New Project' }\n          show={ this.state.isNewItemModalShow }\n          handleCloseModal={ this.handleCloseModal }\n          handleSaveForm={ this.handleSaveItem }\n        />\n      </Container>\n      {/* <CustomFooter/> */}\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faCheck,\n  faExclamationTriangle,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let description;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      description = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      description = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={ `#${ this.props.showLink() }` }> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      description = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={ faExclamationTriangle } />{' '}\n            {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <Card\n        border={ borderStatus }\n        style={ { width: '100%', marginBottom: '2em' } }\n      >\n        <Card.Body>\n          <Row>\n            <Col xs={ 12 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n              <Card.Title>\n                {this.props.icon ? this.props.icon : ''} {title}\n              </Card.Title>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              {status && status === 'info' ? (\n                <Button variant=\"info\" size=\"sm\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'danger' ? (\n                <Button variant=\"danger\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faExclamationTriangle } />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'success' ? (\n                <Button variant=\"success\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faCheck } />\n                </Button>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {this.props.subtitle}\n              </Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              {description}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\nimport whichJsEnv from '../../../Util/which-js-env';\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <section style={ { height: '75vh', overflow: 'scroll' } }>\n            {itemsCards}\n          </section>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col xs={ 12 } sm={ 6 } md={ 7 } lg={ 7 } xl={ 7 }>\n            {searchEl}\n          </Col>\n          { (whichJsEnv() !== 'cep')?(\n            <>\n            <Col xs={ 12 } sm={ 3 } md={ 2 } lg={ 2 } xl={ 2 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n            <Col xs={ 12 } sm={ 3 } md={ 3 } lg={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewBatchForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New Batch {this.props.model}s\n            </Button>\n            </Col>\n            </>\n          ): (\n            <Col xs={ 12 } sm={ 6 } md={ 5 } lg={ 5 } xl={ 5 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n          )}\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/#dismissing\nclass CustomAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleDismiss = () => this.setState({ show: false });\n\n  render() {\n    if (this.state.show) {\n      return (\n        <Alert\n          variant={ this.props.variant }\n          onClose={ this.handleDismiss }\n          dismissible\n        >\n          {this.props.heading ? (\n            <Alert.Heading>{this.props.heading}</Alert.Heading>\n          ) : (\n            ''\n          )}\n          {this.props.message}\n        </Alert>\n      );\n    } else {\n      return (\n        <>\n          <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default CustomAlert;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path'; \n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only \n  handleAdobeCepSetFilePath = ()=>{\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`,  (response)=>{\n      console.log('handleAdobeCepSetFilePath');\n      if(response !== \"\"){\n        console.log('handleAdobeCepSetFilePath', response);\n      //  const newFilePath = response;\n      //  fileName = path.basename(newFilePath);\n      // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n       this.setState({\n         title: path.basename(response),\n         adobeCepFilePath: response\n       })\n     }\n     else{\n       // TODO: review logic for edge case\n       alert('select a clip')\n     }\n   })\n  }\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n    if(whichJsEnv() !== 'cep'){\n      formData.append('title', this.state.title);\n      formData.append('description', this.state.description);\n      console.log(\"formData.get('path')\", formData.get('path'));\n    }\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n\n    if (whichJsEnv() === 'cep') {\n  \n      data = {\n        title: this.state.title,\n        description: this.state.description,\n        path: this.state.adobeCepFilePath\n      };\n    \n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n           { (whichJsEnv() === 'cep')?(\n              <>\n              <Button  variant=\"light\" onClick={this.handleAdobeCepSetFilePath} block>Pick a file</Button>\n              <Form.Text className=\"text-muted\">\n                Select an audio or video file to transcribe. Click on a file in the Adobe Premiere project browser window, and the click <code>pick a file</code> to select a file to transcribe. Then \n                click <code>save</code> when you are ready to start the transcriptiion.\n              </Form.Text>\n            </>\n          ):(\n            <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*,.mxf\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n            Select an audio or video file to transcribe\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n              Please chose a audio or video file to transcribe\n            </Form.Control.Feedback>\n          </Form.Group>\n          )}\n          \n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n         \n          \n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      \n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path'; \n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass BatchTranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only \n  handleAdobeCepSetFilePath = ()=>{\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`,  (response)=>{\n      console.log('handleAdobeCepSetFilePath');\n      if(response !== \"\"){\n        console.log('handleAdobeCepSetFilePath', response);\n      //  const newFilePath = response;\n      //  fileName = path.basename(newFilePath);\n      // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n       this.setState({\n         title: path.basename(response),\n         adobeCepFilePath: response\n       })\n     }\n     else{\n       // TODO: review logic for edge case\n       alert('select a clip')\n     }\n   })\n  }\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    console.log('files',files)\n    const formData = new FormData();\n    files.forEach((file,index)=>{\n      formData.append(`file`, file);\n      formData.append(`type`, file.type);\n      if (file.path) {\n        formData.append(`path`, file.path);\n      }\n    })\n    // const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n   \n    // formData.append('file', file);\n    // formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    // if (file.path) {\n    //   formData.append('path', file.path);\n    // }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    // if (this.state.title === '') {\n    //   this.setState({ title: file.name });\n    // }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n    const formData = this.state.formData;\n    const listOfFilesPath = formData.getAll('path');\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      listOfFilesPath.forEach((filePath)=>{\n        data = {\n          title: path.basename(filePath),\n          description: `Batch imported - ${path.basename(filePath)}`,\n          path: filePath\n        };\n\n        // if client run inside of electron\n        // is easier to pass another object with title, description\n        // as well as the additional path to the file\n        // rather then parsing a formData object in node etc..\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n\n            }).catch((e) => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: <CustomAlert\n                  dismissable={ true }\n                  variant={ 'danger' }\n                  heading={ 'Error could not contact the server' }\n                  message={ <p>There was an error trying to create this transcript on the server</p> }\n                />\n              });\n            });\n\n          } catch (e) {\n            console.error('error submitting:::', e);\n          }\n\n      })\n      \n    }\n    if(whichJsEnv() !== 'cep'){\n      const formData = this.state.formData;\n      const listOfFiles = formData.getAll('file');\n      const listOfFileTypes = formData.getAll('type');\n      listOfFiles.forEach((individualFile,index)=>{\n        const individualFileFormData = new FormData();\n        individualFileFormData.append('file', individualFile);\n        individualFileFormData.append('type',  listOfFileTypes[index]);\n        individualFileFormData.append('title', individualFile.name);\n        individualFileFormData.append('description', 'batch imported with default name');\n        // individualFileFormData.append('type', file.type);\n        const  data = {\n          title: individualFile.name,\n          description: 'batch imported with default name',\n          // path: \n        };\n\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, individualFileFormData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n    \n            }).catch((e) => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: <CustomAlert\n                  dismissable={ true }\n                  variant={ 'danger' }\n                  heading={ 'Error could not contact the server' }\n                  message={ <p>There was an error trying to create this transcript on the server</p> }\n                />\n              });\n            });\n    \n        } catch (e) {\n          console.error('error submitting:::', e);\n        }\n      \n      })\n\n      \n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n          <Form.Label>Select Files </Form.Label>\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*,.mxf\"\n              multiple=\"multiple\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n            Select multiple audio or video file to transcribe.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            This allows you to batch transcribe multiple files, the transcript name will default to the clip name.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            You can change the default transcript name after you've clicked save.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            Use command <code>⌘</code> + click or  shift <code>⇧</code> + click to select multiple files.\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n              Please chose a audio or video file to transcribe\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      \n      </>\n    );\n  }\n}\n\nexport default BatchTranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport BatchTranscriptForm from './BatchTranscriptForm';\n\nclass NewBatchTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <BatchTranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewBatchTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt, faGrinTongueSquint } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport NewBatchTranscriptFormModal from './NewBatchTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      isNewBatchModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n      this.getTranscripts();\n      // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly, \n      // and only if there are items in progress in the list, it checks the backed for updates\n      this.interval = setInterval(() => {\n        console.log('Running interval to check for transcripts');\n        if(this.areThereTranscriptsInProgress(this.state.items)){\n            console.log('interval: checking transcirpt update');\n            this.getTranscripts();\n        }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount =() => {\n    if (this.interval) {\n       clearInterval(this.interval);\n    }\n  }\n\n  getTranscripts = async () =>{\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n      // TODO: add error handling\n      if (result) {\n        const tmpList = result.transcripts.map((item) => {\n          item.display = true;\n\n          return item;\n        });\n        this.setState({\n          projectTitle: result.projectTitle,\n          items: tmpList\n        }, () => {\n          console.log('getTranscripts-tmpList');\n        });\n      }\n  }\n\n  areThereTranscriptsInProgress = (items) => {\n    if (items.length !== 0) {\n      const result = items.find((transcript) => {\n\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  }\n\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState');\n    });\n  }\n\n  // TODO: adjust for multiuple\n  handleSaveBatch = (itemsProps) => {\n    console.log('handleSaveBatch', itemsProps);\n\n    this.setState({\n      isNewBatchModalShow: false\n    })\n\n    if(itemsProps.length){\n      const newItems = itemsProps.map((item)=>{\n        item.display = true;\n        return item;\n      })\n      const { items } = this.state;\n      const itemsList = [ ...items ];\n      const newItemsList = [...itemsList, ...newItems]\n      this.setState({\n        items: newItemsList,\n        title:'',\n        itemId: null,\n        description: '',\n        isNewBatchModalShow: false\n      }, () => {\n        console.log('setState - itemsProps.length', this.state.isNewBatchModalShow);\n      });\n    }else{\n    const newItem = itemsProps;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState - single',  this.state.isNewBatchModalShow);\n    });\n    }\n   \n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      }, () => {\n        console.log('deleted')\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleShowCreateNewBatchForm = ()=>{\n    console.log('handleShowCreateNewBatchForm')\n    this.setState({ isNewBatchModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseBatchModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewBatchModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleShowCreateNewBatchForm={ this.handleShowCreateNewBatchForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            handleCloseBatchModal={ this.handleCloseBatchModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n\n        <NewBatchTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Batch Transcripts' }\n            show={ this.state.isNewBatchModalShow }\n            handleCloseModal={ this.handleCloseBatchModal }\n            handleSaveForm={ this.handleSaveBatch }\n          />\n          \n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    console.log('ApiWrapper.getAllPaperEdits', result);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name'\n    };\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  };\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <CustomBreadcrumb items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: this.state.projectName\n                }\n              ] } />\n            </Col>\n          </Row>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={ this.state.key }\n            onSelect={ key => this.setState({ key }) }\n          >\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={ this.state.projectId }/>\n            </Tab>\n            <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n              <PaperEdits projectId={ this.state.projectId } />\n            </Tab>\n          </Tabs>\n        </Container>\n        {/* <CustomFooter/> */}\n      </>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport path from 'path';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor } from '@pietrop/react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\n// import CustomFooter from '../lib/CustomFooter/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomFooter from '../lib/CustomFooter/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        console.log('json',json)\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url,\n          clipName: json.clipName\n        });\n      });\n  }\n\n  saveToServer = () => {\n    // TODO: add Api call to save content of\n    alert('saved');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('ApiWrapper.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    // Workaround to change layout of TranscriptEditor for audio files. \n    // For now only handling limited numnber of file extension that have more of a certainty of being audio\n    // as opposed to more ambiguos extensions such as ogg or mp4 that could be either video or audio\n    // there might be better ways to determine if a clip is audio or video, especially node/\"server side\" but\n    // might also be more of a setup eg using ffprobe etc..\n    let mediaType = 'video';\n    if(path.extname(this.state.clipName) ==='.wav' \n      || path.extname(this.state.clipName) ==='.mp3' \n      || path.extname(this.state.clipName) ==='.m4a' \n      || path.extname(this.state.clipName) ==='.flac' \n      || path.extname(this.state.clipName) ==='.aiff'){\n      mediaType = 'audio'\n    }\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { marginBottom: '5em' } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <CustomBreadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson !== null &&\n          <TranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            title={ this.state.transcriptTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n            mediaType={ mediaType }\n            handleAnalyticsEvents = {()=>{\n              console.log('handleAnalyticsEvents')\n            }}\n          \n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowingFilterOptions: false,\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n      this.props.handleShowParagraphsMatchingSearch( !state.showParagraphsMatchingSearch);\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n      \n     });\n   }\n\n   handleFilterResults = ()=>{\n    this.setState((state) => {\n      if(!state.isShowingFilterOptions){\n        this.props.handleShowParagraphsMatchingSearch( true );\n        return {\n          isShowingFilterOptions: true,\n          showTextSearchPreferences: true,\n          showSpeakersSearchPreferences: true,\n          showLabelsSearchPreferences: true,\n          // defaults to show only matching paragraph to be checked\n          showParagraphsMatchingSearch: true\n        };\n      }else{\n        this.props.handleShowParagraphsMatchingSearch( false );\n        return {\n          isShowingFilterOptions: false,\n          showTextSearchPreferences: false,\n          showSpeakersSearchPreferences: false,\n          showLabelsSearchPreferences: false,\n          // remove preferences for showing matching paragraphjs when removing filters\n          showParagraphsMatchingSearch: false\n        };\n      }\n    \n    });\n   }\n\n\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n              <InputGroup.Append>\n                <Button \n                  variant=\"outline-secondary\"\n                  onClick={this.handleFilterResults}\n                >\n                    <FontAwesomeIcon \n                      icon={ faFilter }\n                      title=\"Filter results\" \n                      />\n                </Button>\n              </InputGroup.Append>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@pietrop/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0,\n      componentMounted: false\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' ApiWrapper.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations,\n          // componentMounted: true\n        });\n      });\n  }\n\n  handleLoadTranscription = () =>{\n    this.setState({\n      componentMounted: true\n    });\n  }\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    ApiWrapper.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = (isShowParagraphsMatchingSearch) => {\n    this.setState({ showParagraphsMatchingSearch: isShowParagraphsMatchingSearch });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      ApiWrapper.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    ApiWrapper.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    return (\n      <>\n\n        {/* <div style={ {\n          display:\n          // this.state.isShowLabelsReference ?\n           'block'\n          //  : 'none'\n          ,\n          position: 'absolute',\n          top: '0px',\n          left: '0px',\n          width: '5vw',\n          height: '100vh',\n          backgroundColor: 'black'\n        } }>\n            Test\n        </div> */}\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        <Card>\n          <Card.Header>\n            {/* // Preview video - HTML5 Video element or  react-transcript-editor/VideoPlayer\n        // Media control - HTML5 default or react-transcript-editor/MediaPlayer\n        // Search Bar - from TranscriptAnnotate component\n        // Text -  from TranscriptAnnotate component */}\n          {this.state.componentMounted &&   <video\n              src={ this.props.url }\n              ref={ this.videoRef }\n              onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n              // onTimeUpdate={ (e) => {console.log(e.target.currentTime); } }\n              style={ {\n                // display: this.state.isVideoTranscriptPreviewShow,\n                width: '100%',\n                height:'10em',\n                backgroundColor: 'black'\n              } }\n            controls/> }\n          </Card.Header>\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: '60vh', overflow: 'scroll' } }\n          >\n\n            {highlights}\n\n            {this.props.transcript && !this.state.componentMounted && <Button variant=\"light\" onClick={ this.handleLoadTranscription }block>Load transcription</Button>}\n\n            {this.props.transcript && this.state.componentMounted &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ transcript.id  }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ transcript.id } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React from 'react';\n\nconst Filler = (props) => {\n  return <div style={ {\n    width: `${ props.percentage }%`,\n    background: 'red',\n    height: '100%',\n    borderRadius: 'inherit'\n  } } />;\n};\n\nexport default Filler;\n","import React from 'react';\nimport Filler from './Filler';\n\nconst ProgressBar = (props) => {\n\n  return (\n    <div onClick={ props.onClick }\n      style={ {\n        position: 'relative',\n        height: '12px',\n        width: '100%',\n        opacity: '1'\n      } } >\n      <Filler percentage={ props.percentage }></Filler>\n    </div>\n\n  );\n};\nexport default ProgressBar;\n","import React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport ProgressBar from '../ProgressBar';\nimport PropTypes from 'prop-types';\n\nconst getPercentage = (currentTime, duration) => currentTime / duration * 100;\n\nconst VideoContextProgressBar = (props) => {\n  const ref = useRef();\n\n  const [ percentage, setPercentage ] = useState(0);\n  const [ videoContext, setVideoContext ] = useState();\n  const [ width, setWidth ] = useState(0);\n\n  const handleClick = ({ nativeEvent: { offsetX } }) => {\n    videoContext.currentTime = (offsetX / width) * videoContext.duration;\n    const percent = getPercentage(videoContext.currentTime, videoContext.duration);\n    setPercentage(percent);\n  };\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      setWidth(ref.current.offsetWidth);\n    }\n  }, [ ref ]);\n\n  useEffect(() => {\n    const fillerAnimation = () => {\n      const percent = getPercentage(videoContext.currentTime, videoContext.duration);\n      setPercentage(percent);\n      requestAnimationFrame(fillerAnimation);\n    };\n\n    setVideoContext(props.videoContext);\n\n    if (videoContext) {\n      fillerAnimation();\n    }\n  }, [ props.videoContext, videoContext ]);\n\n  return (\n    <div ref={ ref } style={ { width:'100%' } }>\n      <ProgressBar onClick={ handleClick } percentage={ percentage } />\n    </div>\n  );\n};\n\nVideoContextProgressBar.propTypes = {\n  videoContext: PropTypes.any\n};\n\nexport default VideoContextProgressBar;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nconst playIcon = <FontAwesomeIcon icon={ faPlay } />;\nconst pauseIcon = <FontAwesomeIcon icon={ faPause } />;\nconst stopIcon = <FontAwesomeIcon icon={ faStop } />;\n\nconst Controls = (props) => {\n\n  const [ isPlaying, setIsPlaying ] = useState(false);\n\n  const handlePlay = () => {\n    props.handlePlay();\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    props.handlePause();\n    setIsPlaying(false);\n  };\n\n  const handleStop = () => {\n    props.handleStop();\n    setIsPlaying(false);\n  };\n\n  return (\n    <>\n      <Col sm={ 6 }>\n        <Button\n          size=\"sm\"\n          block\n          variant=\"outline-secondary\"\n          onClick={ isPlaying ? handlePause : handlePlay }\n        >\n          { isPlaying ? pauseIcon : playIcon }\n        </Button>\n      </Col>\n      <Col\n        sm={ 6 }\n      >\n        <Button\n          size=\"sm\"\n          block\n          variant=\"outline-secondary\"\n          onClick={ handleStop }\n        >\n          { stopIcon }\n        </Button>\n      </Col>\n    </>\n  );\n};\n\nexport default Controls;\n\nControls.propTypes = {\n  handleStop: PropTypes.any,\n  handlePlay: PropTypes.any,\n  handlePause: PropTypes.any\n};\n","import React, { useState, useEffect } from 'react';\nimport VideoContextProgressBar from './VideoContextProgressBar';\nimport Controls from '../Controls';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport VideoContext from 'videocontext';\n\nconst VideoContextPreview = (props) => {\n  const [ videoContext, setVideoContext ] = useState();\n\n  const updateVideoContext = (media) => {\n    media.forEach(({ type, sourceStart, start, duration, src }) => {\n      const node = videoContext[type](src, sourceStart);\n      node.startAt(start);\n      node.stopAt(start + duration);\n      node.connect(videoContext.destination);\n    });\n  };\n\n  const handleStop = () => {\n    videoContext.pause();\n    setVideoContext(vc => {\n      vc.currentTime = 0;\n\n      return vc;\n    });\n  };\n\n  useEffect(() => {\n    if (props.canvasRef && props.canvasRef.current) {\n      setVideoContext(new VideoContext(props.canvasRef.current));\n    }\n\n  }, [ props.canvasRef ]);\n\n  if (videoContext) {\n    updateVideoContext(props.playlist);\n  }\n\n  const secondsToHHMMSSFormat = (seconds) => {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  };\n\n  return (\n    <>\n      <Row\n        className={ 'justify-content-center' }\n        style={ { backgroundColor: 'black' } }\n      >\n        <canvas\n          ref={ props.canvasRef }\n          width={ props.width }\n          height={ props.width * 0.5625 }\n        />\n      </Row>\n      <Row\n        className={ 'justify-content-center' }\n        style={ { backgroundColor: 'lightgrey' } }\n      >\n        <VideoContextProgressBar videoContext={ videoContext }/>\n      </Row>\n      <Row style={ { marginTop: '0.4em' } }>\n        <Controls\n          handlePlay={ videoContext ? () => videoContext.play() : () => console.log('handlePlay') }\n          handlePause={ videoContext ? () => videoContext.pause() : () => console.log('handlePause') }\n          handleStop={ videoContext ? () => handleStop() : () => console.log('handleStop') }\n        />\n      </Row>\n      <Row className={ 'justify-content-center' }>\n        Total duration: {videoContext ? secondsToHHMMSSFormat(videoContext.duration) : '00:00:00'}\n      </Row>\n    </>\n  );\n};\n\nVideoContextPreview.propTypes = {\n  canvasRef: PropTypes.any,\n  playlist: PropTypes.array,\n  videoContext: PropTypes.any,\n  width: PropTypes.any\n};\n\nVideoContextPreview.defaultProps = {\n  playlist: []\n};\n\nexport default VideoContextPreview;\n","/* eslint-disable react/prop-types */\nimport React, { useRef } from 'react';\nimport VideoContextPreview from './VideoContextPreview';\nimport PropTypes from 'prop-types';\n\nconst PreviewCanvas = props => {\n  const canvasRef = useRef();\n\n  return (\n    <VideoContextPreview\n      width={ props.width }\n      canvasRef={ canvasRef }\n      playlist={ props.playlist }\n    />\n  );\n};\n\nPreviewCanvas.propTypes = {\n  playlist: PropTypes.array,\n  width: PropTypes.number\n};\n\nPreviewCanvas.defaultProps = {\n  playlist: []\n};\n\nexport default PreviewCanvas;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w, index) => {return (\n        // eslint-disable-next-line react/jsx-key\n        <span\n          // TODO: add w.id to words to us as index?\n          key={ w.start + index }\n          className=\"words\"\n          title={ `stat: ${ w.start }- end: ${ w.end }` }\n          data-start={ w.start }\n          data-end={ w.end }\n        >{w.text} </span>);});\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\n\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: 'white' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\n\n\n\nconst SortableItem = sortableElement(({ indexNumber, value, type, handleDelete, handleEdit } ) => {\n  return (<li>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faPen } onClick={ () => { handleEdit(indexNumber); } } /> : null}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n  {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faTrash } onClick={ () => {handleDelete(indexNumber);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    // this.setState(({ items }) => ({\n    //   items:\n    // })\n    // );\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    console.log(result);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el,index) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => {\n          console.log(index)\n          return <SortableItem\n            key={ `item-${ index }` }\n            index={index}\n            indexNumber={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n          />\n        })}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import {\n    Document,\n    HeadingLevel,\n    AlignmentType,\n    Paragraph,\n    TextRun,\n    Packer\n} from 'docx';\nimport {secondsToTimecode, timecodeToSeconds, shortTimecode} from \"@pietrop/react-transcript-editor/timecodeConverter\";\n\nconst programmeScriptJsonToDocx = (edlJson,isWithClipReference) => {\n    console.log('edlJson', edlJson.title)\n    const transcriptTitle = edlJson.title;\n\n    const doc = new Document({creator: 'Test', description: 'Test Description', title: transcriptTitle});\n\n    // add body\n    const sections = []\n    edlJson.events.forEach((event) => {\n        if (event.type === 'title') { \n            sections.push(new Paragraph({\n                text: event.text,\n                heading: HeadingLevel.HEADING_1,\n                spacing: {\n                    after: 200\n                }\n            }))\n        } else if (event.type === 'voice-over') {\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({ \n                        text: `Voice Over:\\t`, \n                        italics: false, \n                        bold: true\n                    }),\n                    new TextRun({\n                        text: `${ event.text}`\n                    }),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n        } else if (event.type === 'note') { \n            sections.push(new Paragraph({\n                children: [\n                    new TextRun(\n                        {text: `Notes:\\t`, italics: true, bold: true}\n                    ),\n                    new TextRun(\n                        {text: `${\n                                event.text\n                            }`, italics: true}\n                    ),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n\n        } else if (event.type === 'paper-cut') {\n            const text = event.words.map((word) => {\n                return word.text;\n            }).join(' ');\n\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({\n                        text: `${event.speaker}\\t`, \n                        bold: true,\n                        allCaps: true\n                    }),\n                    new TextRun({\n                        text: `${text}`\n                    })\n                ],\n                spacing: {\n                    after: 100\n                }\n            }))\n\n            if(isWithClipReference){\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({\n                        text: `${event.clipName}\\t [${shortTimecode(event.start)} - ${shortTimecode(event.end)}]`,\n                        size: 18\n                    }),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n            }\n        }\n\n        return null;\n    });\n\n    // Add transcription title\n    doc.addSection({\n        properties: {},\n        children: [\n            new Paragraph(\n                { text: transcriptTitle, heading: HeadingLevel.TITLE, alignment: AlignmentType.CENTER}\n            ),\n            ... sections\n        ]\n    });\n\n    return new Promise((resolve, reject) => {\n        return Packer.toBlob(doc).then(blob => {\n            console.log(blob);\n            resolve(blob)\n            console.log(\"Document created successfully\");\n        }).catch((error) => {\n            reject(error)\n        })\n    })\n}\n\nexport default programmeScriptJsonToDocx\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport cuid from 'cuid';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\nimport PreviewCanvas from './PreviewCanvas2/index.js';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@pietrop/aes31-adl-composer';\nimport jsonToFCPX from '@pietrop/fcpx-xml-composer';\nimport jsonToAudition from 'audition-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScript from './ProgrammeScript.js';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs/index.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\nimport whichJsEnv from '../../../../Util/which-js-env';\nimport programmeScriptJsonToDocx from './programme-script-json-to-docx/index.js';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\n\nclass ProgramScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript\n        }\n        // TODO: figure out how to update preview\n        // , () => {\n        //   this.handleUpdatePreview();\n        // }\n        );\n      });\n\n  }\n\n  // TODO: save to server\n  handleProgrammeScriptOrderChange = (list) => {\n    console.log('handleProgrammeScriptOrderChange', list);\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDeleteProgrammeScriptElement = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    console.log('handleDeleteProgrammeScriptElement ',i);\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  handleEditProgrammeScriptElement = (i) => {\n    console.log('handleEditProgrammeScriptElement',i);\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    console.log(newText);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      console.log(text);\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert-point';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    console.log('getDataFromUserWordsSelection::', result);\n    if (result) {\n      console.log(JSON.stringify(result, null, 2));\n\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        let mediaFps = defaultFps;\n        if(currentTranscript.metadata && currentTranscript.metadata.fps && (currentTranscript.metadata.fps!== 'NA')){\n          mediaFps = currentTranscript.metadata.fps\n        }\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: mediaFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    // const result = generateADL(edlSq);\n\n    let mediaFps = defaultFps;\n    if(firstElement.fps && (firstElement.fps!== 'NA')){\n      mediaFps = firstElement.fps\n    }\n\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: mediaFps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  handleExportXML = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log('edlSq',edlSq);\n    const result = jsonToAudition(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.xml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        let mediaFps = defaultFps;\n        if(currentTranscript.metadata && currentTranscript.metadata.fps && (currentTranscript.metadata.fps!== 'NA')){\n          mediaFps = currentTranscript.metadata.fps\n        }\n        // const words = element.words.map((word) => {\n        //   word.text = word.text.replace(/'/g,\"\\'\"); \n        //   return word;\n        // })\n\n        console.log('element', element);\n\n        const result = {\n          ...element,\n          // words,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: mediaFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log('edlSq',edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        // need to escape ' otherwise Premiere.jsx chockes \n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text.replace(/'/,'\\'');}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleCepExportSequence = () =>{\n    console.log('handleCepExportSequence');\n    // var tmpEdl = {edlJson:  this.makeEDLJSON(false) };\n    // console.log(JSON.stringify( tmpEdl, null,2));\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    console.log('handleCepExportSequence - programmeScriptJson ', programmeScriptJson);\n\n    const paperCuts = programmeScriptJson.events.filter((el)=>{\n      return el.type ==='paper-cut'\n    })\n    console.log('handleCepExportSequence - paperCuts ', paperCuts);\n    // not quier sure how to escapte  ' in word text attribute, so since it's not needed for premiere export, removing the words\n    const paperCutsWithoutWords = paperCuts.map((el)=>{\n      delete el.words;\n      return el;\n    })\n    // TODO: need to remove \n    const tmpEdl = {\n      edlJson: {\n        events: paperCutsWithoutWords,\n        title: this.state.programmeScript.title\n      } \n    }\n    console.log('tmpEdl', tmpEdl)\n    const premiereCommandString = \"$._PPP.create_sequence_from_paper_edit('\" + JSON.stringify(tmpEdl) + \"')\";\n    console.log('premiereCommandString:: ',premiereCommandString)\n    window.__adobe_cep__.evalScript(premiereCommandString, function (response){\n      // done \n      console.info('done exporting sequence')\n    })\n  }\n\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText (programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleExportDocx = async () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    console.log('programmeScriptJson',programmeScriptJson)\n    const isWithClipReference = false;\n    const programmeScriptDocx = await programmeScriptJsonToDocx(programmeScriptJson, isWithClipReference);\n    downloadjs(programmeScriptDocx, `${ this.state.programmeScript.title }.docx`, 'text/docx');\n  }\n\n  handleExportDocxWithClipReference = async () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    console.log('programmeScriptJson',programmeScriptJson)\n    const isWithClipReference = true;\n    const programmeScriptDocx = await programmeScriptJsonToDocx(programmeScriptJson, isWithClipReference);\n    downloadjs(programmeScriptDocx, `${ this.state.programmeScript.title }.docx`, 'text/docx');\n  }\n\n  handleUpdatePreview = () => {\n    let timelineStartTime = 0;\n    //  const { playlist } = this.state;\n    // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n    const playlist = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n        const duration = element.end - element.start;\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const result = {\n          type:'video',\n          start: timelineStartTime,\n          sourceStart: element.start,\n          duration: duration,\n          src: currentTranscript.url\n        };\n\n        timelineStartTime += duration;\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n\n    // Workaround to mound and unmoun the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      console.log('handleUpdatePreview', playlist);\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    console.log('handleUpdatePreview', playlist);\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  render() {\n    return (\n\n      <>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {/* Programme:  */}\n          {/* <small> */}\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n          {/* </small> */}\n        </h2>\n        <Card>\n          <Card.Header>\n            {/* <hr/> */}\n            { !this.state.resetPreview ?\n              <PreviewCanvas playlist={ this.state.playlist }\n               width={ 300 }\n               />\n              : null }\n          </Card.Header>\n          <Card.Header>\n\n            <Row noGutters>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Button\n                  // block\n                  variant=\"outline-secondary\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                  title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 2 } ld={ 2 } xl={ 2 }>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faPlus } />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faHeading } /> Heading\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faStickyNote } /> Note\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleUpdatePreview }\n                  // size=\"sm\"\n                  title=\"update preview\"\n                  // block\n                >\n                  <FontAwesomeIcon icon={ faSync } /> Preview\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faShare } /> Export\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                  {(whichJsEnv() === 'cep')? (<>\n                    <Dropdown.Item\n                      onClick={ this.handleCepExportSequence }\n                      title=\"export the programme script as a sequence in Adobe Premiere\"\n                    >\n                    Premiere - Sequence <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </>): (<>\n                    <Dropdown.Item\n                      onClick={ this.handleExportEDL }\n                      title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                    >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                    >\n                      {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportFCPX }\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                    >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportXML }\n                      title=\"export XML, to import the programme script as a sequence into Adobe Premiere, Adobe Audition and Final Cut Pro 7\"\n                    >\n                  XML - Audition <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                    >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportDocx }\n                      title=\"export docx, export the programme script as a word document\"\n                    >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportDocxWithClipReference }\n                      title=\"export docx, export the programme script as a word document, with clip name and timecode references, for text selections\"\n                    >\n                   Word Doc (with ref) <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                    >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </>)}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 1 } ld={ 1 } xl={ 1 }>\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleSaveProgrammeScript }\n                  // size=\"sm\"\n                  title=\"save programme script\"\n                  block\n                >\n                  <FontAwesomeIcon icon={ faSave } />\n                  {/* Save */}\n                </Button>\n              </Col>\n            </Row>\n\n          </Card.Header>\n          <Card.Body>\n            <article\n              style={ { height: '60vh', overflow: 'scroll' } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScript\n                programmeScriptElements={ this.state.programmeScript.elements }\n                handleProgrammeScriptOrderChange={ this.handleProgrammeScriptOrderChange }\n                handleDeleteProgrammeScriptElement={ this.handleDeleteProgrammeScriptElement }\n                handleEditProgrammeScriptElement={ this.handleEditProgrammeScriptElement }\n\n              />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgramScript from './ProgramScript/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n\nclass PaperEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n    };\n  }\n\n  componentDidMount = async () => {\n\n    ApiWrapper.getProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <br/>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n          {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n            </Button>\n          </Col> */}\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgramScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n              />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default PaperEdit;\n","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap-css-only/css/bootstrap.css';\nimport Projects from './Components/Projects/index.js';\nimport Project from './Components/Projects/Project.js';\nimport TranscriptCorrect from './Components/Transcripts/TranscriptCorrect.js';\nimport PaperEdit from './Components/PaperEdits/PaperEdit';\nimport CustomAlert from './Components/lib/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nconst demoWarningMessage = (<><p> This is a demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n>see project Github repository for more info</Alert.Link>. </p><p>This is a read-only demo you can only play around with existing projects!</p></>);\n\nconst NoMatch = () => {\n  return <h1>There was an error loading the page you requested</h1>;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transcriptJson: null\n    };\n  }\n  // TODO: remove unused rootes\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    let envWarning = null;\n    let offlineWarning = null;\n\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      envWarning = (\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Demo mode' }\n            message={ demoWarningMessage }/>\n        </Container>);\n    }\n\n    if (!navigator.onLine) {\n      offlineWarning = <><br/><Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Offline warning' }\n          message={ 'You don\\'t seem to be connected to the internet ' }/>\n      </Container></>;\n    }\n\n    return (<>\n\n      {envWarning}\n\n      {offlineWarning}\n\n      <HashRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={ Projects } />\n          <Route exact path=\"/projects\" component={ Projects } />\n          <Route exact path=\"/projects/:projectId\" component={ Project } />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n            component={ TranscriptCorrect }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/paperedits/:papereditId\"\n            component={ PaperEdit }\n          />\n          <Route component={ NoMatch } />\n        </Switch>\n        </div>\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}