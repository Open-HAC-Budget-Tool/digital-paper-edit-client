{"version":3,"sources":["Util/which-js-env/index.js","Components/PaperEditor/Transcripts/Paragraphs/index.module.css","Context/ApiContext.js","Components/lib/CustomFooter/index.js","Util/array-match/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","Components/lib/ItemsContainer/TranscriptForm.js","Components/lib/ItemsContainer/NewTranscriptFormModal.js","Components/lib/ItemsContainer/index.js","Util/in-text/index.js","Context/reducers.js","Components/Projects/index.js","Components/Workspace/Transcripts/index.js","Components/Workspace/PaperEdits/index.js","Components/Workspace/index.js","Components/Workspace/Transcripts/TranscriptEditor.js","Components/PaperEditor/Transcripts/LabelsList/select-color-styles.js","Components/PaperEditor/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEditor/Transcripts/SearchBar/index.js","Components/PaperEditor/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEditor/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEditor/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEditor/Transcripts/Paragraphs/Word.js","Components/PaperEditor/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEditor/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEditor/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEditor/Transcripts/Paragraphs/index.js","Components/PaperEditor/Transcripts/LabelsList/css-color-names.js","Components/PaperEditor/Transcripts/LabelsList/LabelForm.js","Components/PaperEditor/Transcripts/LabelsList/LabelModal.js","Components/PaperEditor/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEditor/Transcripts/get-user-selection.js","Components/PaperEditor/Transcripts/Transcript.js","Components/PaperEditor/Transcripts/index.js","Components/PaperEditor/ProgrammeScript/get-data-from-user-selection.js","Components/PaperEditor/ProgrammeScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEditor/ProgrammeScript/index.js","Components/PaperEditor/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["whichJsEnv","undefined","window","process","versions","node","env","REACT_APP_NODE_ENV","electron","cep","chdir","__dirname","err","console","log","error","module","exports","ApiContext","createContext","CustomFooter","footer","Navbar","collapseOnSelect","expand","bg","variant","fixed","className","icon","faFlask","href","target","rel","Row","Col","arraysMatch","arr1","arr2","length","i","METHODS","validateRESTMethod","method","includes","Error","getCorsConfig","corsConfig","data","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","a","async","fetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","trim","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","this","baseUrl","API_URL","res","json","projects","id","getProject","resProject","projectTitle","project","title","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","results","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","map","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","DemoApiWrapper","paperEdits","response","_id","p","status","alert","ok","transcriptsData","filter","formData","annotation","defaultLabel","label","unshift","pe","paperEdit","statusCode","jsENV","dynamicApiWrapper","debug","demoApiWrapper","Object","freeze","apiWrapper","electronWrapper","ElectronWrapper","TranscriptForm","props","handleTitleChange","event","setState","value","handleDescriptionChange","description","handleFileUpload","e","file","Array","from","files","FormData","append","type","path","mediaFileSelected","state","name","sendRequest","uploading","get","createTranscript","then","uploadCompleted","redirect","newTranscriptId","handleSaveForm","catch","savedNotification","dismissable","heading","message","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","placeholder","onChange","Text","Feedback","accept","Modal","Footer","Button","Component","NewTranscriptFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","Title","modalTitle","Body","React","initialFormState","ItemsContainer","searchEl","showItems","useState","items","setItems","showModal","setShowModal","setFormData","item","handleSave","toggleShowModal","useEffect","arrayMatch","handleSearch","text","arr","sourceText","findText","toLowerCase","inText","display","handleFilterDisplay","handleEditItem","handleDeleteItem","handleDelete","formModal","handleOnHide","itemType","sm","xs","onClick","size","block","defaultProps","updateItem","newItem","newItems","index","findIndex","assign","deleteItem","addItem","Projects","isFetch","setIsFetch","api","useContext","createProject","newProject","updateProject","allProjects","getAllProjects","result","key","getProjects","breadcrumbItems","link","Container","data-testid","style","marginBottom","marginTop","model","deleteProject","Transcripts","isInProgress","setIsInProgress","interval","setInterval","setTimeout","clearInterval","updateTranscript","editedTranscript","originalTranscript","newTranscript","deleteTranscript","Consumer","PaperEdits","getAllPaperEdits","allPaperEdits","updatePaperEdit","paperedit","createPaperEdit","newPaperEdit","deletePaperEdit","genBreadcrumb","WorkspaceView","match","params","active","setActive","setName","getProjectName","Tabs","activeKey","onSelect","tab","Tab","eventKey","TranscriptEditor","componentDidMount","context","transcriptJson","mediaUrl","mediaType","saveToServer","transcriptEditorRef","current","getEditorContent","createRef","fluid","md","ld","xl","transcriptData","isEditable","sttJsonType","ref","contextType","colourStyles","control","styles","backgroundColor","option","isDisabled","tmpColor","isFocused","isSelected","color","borderLeft","borderColor","cursor","multiValue","border","multiValueLabel","multiValueRemove","speakersColorStyles","SearchBar","handleToggleSearchTextPreferences","showTextSearchPreferences","handleToggleSearchLabelsPreferences","showLabelsSearchPreferences","handleToggleSearchSpeakersPreferences","showSpeakersSearchPreferences","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleToggleAll","handleHideAll","Card","InputGroup","Prepend","faSearch","FormControl","aria-label","aria-describedby","DropdownButton","drop","as","Append","faFilter","Dropdown","Item","faTag","faCheck","faUser","faAlignJustify","Divider","isMulti","isSearchable","options","labelsOptions","speakersOptions","Check","checked","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","speaker","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","push","addWordsToSpeakersParagraphs","findAnnotationInParagraph","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","data-paragraph-text","paragraphTextWithoutPunctuation","lg","width","speakerName","toUpperCase","shortTimecode","unselectable","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","dec","Math","floor","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","role","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","faPen","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","wordEl","note","csscolors","colorNamesList","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","onLabelSaved","defaultValue","onInput","rows","faSyncAlt","triangle","onChangeComplete","colors","LabelModal","handleShow","openBtn","LabelsList","removeLabel","confirm","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup","disabled","faTimes","labelsList","height","overflowY","overflowX","isLabelsListOpen","faTags","faCog","onlyCallOnce","cb","duration","timer","args","arguments","clearTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","has","set","Transcript","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","currentTime","play","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","element","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","parse","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","showLabelsReference","getCurrentWordTime","currentWordTime","transcriptMediaCard","time","round","highlights","scoped","cardBodyHeight","src","onTimeUpdate","controls","ButtonGroup","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","onDoubleClick","overflow","transcriptsElNav","Nav","cuid","Link","faClock","faExclamationTriangle","transcriptsElTab","Pane","defaultActiveKey","Content","parseWordElDataset","innerText","getDataFromUserWordsSelection","w","isOneParagraph","firstword","ProgrammeScript","updateVideoContextWidth","newOffset","card","offsetWidth","newOffsetAdjustedForLargeScreen","getPlayList","startTime","elements","sourceStart","resetPreview","addEventListener","handleReorder","list","handleEdit","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","insertPointElement","el","handleAddTranscriptSelectionToProgrammeScript","previousWordSpeaker","currentParagraph","paragraphsResult","divideWordsSelectionsIntoParagraphs","reverse","getSequenceJsonEDL","edlSq","programmeScriptPaperCutsWithId","currentTranscript","endTime","reelName","metadata","clipName","fps","offset","timecode","sampleRate","events","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","firstElement","generateADL","projectOriginator","edits","frameRate","projectName","handleExportFCPX","jsonToFCPX","getProgrammeScriptJson","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleExportTxt","handleUpdatePreview","playlist","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","removeEventListener","noGutters","faPlus","faHeading","faMicrophoneAlt","faShare","faInfoCircle","faSave","PaperEditor","getProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","videoHeight","faAngleDown","faAngleUp","span","PageNotFound","Routes","basename","exact","component","Workspace","demoWarningMessage","Alert","App","envWarning","offlineWarning","navigator","onLine","Provider","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"iKAAA,cAIA,SAASA,IAEP,QAAwBC,IAAnBC,OAAOC,cAAsDF,IAA5BC,OAAOC,QAAQC,eAA2DH,IAAjCC,OAAOC,QAAQC,SAASC,KACrG,YAAwBJ,IAAnBC,OAAOC,SAAmE,SAA1CD,OAAOC,QAAQG,IAAIC,mBAC/C,OAGF,UAGT,GAAIL,OAAOC,QAAQC,SAASI,eAAiDP,IAArCC,OAAOC,QAAQC,SAASI,SAC9D,MAAO,WAGT,QAAoCP,IAAhCC,OAAOC,QAAQC,SAASK,IAAmB,CAM7C,IACEN,EAAQO,MAAMC,GAGd,MAAOC,GACPC,QAAQC,IAAI,UAAYF,GAG1B,MAAO,MAGTC,QAAQE,MAAM,yCAiBDf,Q,2CCnDfgB,EAAOC,QAAU,CAAC,QAAU,4BAA4B,aAAe,iCAAiC,gBAAkB,sC,yICG3GC,G,cAFIC,2B,iHCiCJC,MA3Bf,WACE,IAAMC,EACJ,kBAACC,EAAA,EAAD,CACEC,kBAAgB,EAChBC,OAAS,KACTC,GAAG,QACHC,QAAQ,QACRC,MAAM,SACNC,UAAU,0BAEV,kBAAC,IAAD,CAAiBC,KAAOC,MAR1B,IAQuC,yDACX,IACxB,uBAAGC,KAAO5B,2BAA0C6B,OAAO,SAASC,IAAI,uBACrE9B,mBAMT,OACE,kBAAC+B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKP,UAAU,qBAAqBP,GACpC,kBAACc,EAAA,EAAD,CAAKP,UAAU,yBAAyBP,K,QCrB/Be,EATK,SAACC,EAAMC,GACzB,GAAID,EAAKE,SAAWD,EAAKC,OAAQ,OAAO,EACxC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAKE,OAAQC,IAC/B,GAAIH,EAAKG,KAAOF,EAAKE,GAAI,OAAO,EAGlC,OAAO,G,gICCHC,EAAU,CAAE,MAAO,OAAQ,MAAO,UAElCC,EAAqB,SAACC,GAC1B,IAAKF,EAAQG,SAASD,GACpB,MAAM,IAAIE,MAAJ,8BAAkCF,EAAlC,+BAAiEF,KAOrEK,EAAgB,SAACH,GAAwC,IACzDI,EADyBC,EAA+B,uDAAxB,GAAIC,EAAoB,uCA+C5D,MA5Ce,QAAXN,EACFI,EAAa,CACXJ,OAAQA,EACRO,KAAM,OACNC,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACP,eAAgB,qBAGA,SAAXX,GAETI,EAAa,CACXJ,OAAQA,GAcc,SAApBM,GACFF,EAAWO,QAAU,CACnB,eAAgB,oBAElBP,EAAWI,KAAOC,KAAKC,UAAUL,IAIjCD,EAAWI,KAAOH,GAIpBD,EAAa,CACXJ,OAAQA,EACRO,KAAM,QAIHH,GAUMQ,MAPf,SAAyBC,GAAzB,iCAAAC,EAAAC,OAAA,uDAA8Bf,EAA9B,+BAAuC,MAAOK,EAA9C,+BAAqD,GAAIC,EAAzD,uBACEP,EAAmBC,GACbI,EAAaD,EAAcH,EAAQK,EAAMC,GAFjD,WAAAQ,EAAA,MAIeE,MAAMH,EAAKT,IAJ1B,8EC8Oea,E,WA9Sb,aAAe,IAAD,gCAMdC,cAAgB,SAACC,GAAD,gBAAmB,EAAKC,YAAxB,YAAyCD,IAN3C,KAQdE,eAAiB,SAACF,GAAD,gBAAmB,EAAKD,cAAcC,GAAtC,iBARH,KASdG,iBAAmB,SAACH,EAAWI,EAAcC,GAC3C,IAAMC,EAAcD,EAAkB,WAC7BE,IAAYhB,UAAUc,IAC3B,GAEJ,MAAO,UAAI,EAAKH,eAAeF,GAAxB,YAAwCI,GAAxC,OAAyDE,GAAeE,QAdnE,KAiBdC,cAAgB,SAACT,GAAD,gBAAmB,EAAKD,cAAcC,GAAtC,gBAjBF,KAkBdU,gBAAkB,SAACV,EAAWW,GAAZ,gBAAgC,EAAKZ,cAAcC,GAAnD,uBAA8EW,IAlBlF,KAoBdC,eAAiB,SAACZ,EAAWI,GAAZ,gBAAiC,EAAKD,iBAAiBH,EAAWI,GAAlE,iBApBH,KAqBdS,iBAAmB,SAACb,EAAWI,EAAcU,GAA1B,gBAA+C,EAAKX,iBAAiBH,EAAWI,GAAhF,wBAA+GU,IArBpH,KAuBdC,UAAY,SAACf,GAAD,gBAAmB,EAAKD,cAAcC,GAAtC,YAvBE,KAwBdgB,YAAc,SAAChB,EAAWiB,GAAZ,gBAA6B,EAAKlB,cAAcC,GAAhD,mBAAuEiB,IAvBnFC,KAAKC,QAAU/E,OAAOI,IAAI4E,QAC1BhF,OAAOI,IAAI4E,QAAU,KAErBF,KAAKjB,YAAL,UAAuBiB,KAAKC,QAA5B,iB,iKA0BkB1B,EAAUyB,KAAKjB,c,cAA3BoB,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,EAAKC,U,kFAGGC,G,oGACG/B,EAAUyB,KAAKnB,cAAcyB,K,cAAzCH,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,qFAGWpC,G,kGACAO,EAAUyB,KAAKjB,YAAa,OAAQf,EAAM,S,cAAtDmC,E,0BACOA,EAAIC,Q,6HAGCE,EAAItC,G,oGACJO,EAAUyB,KAAKnB,cAAcyB,GAAK,MAAOtC,I,cAArDmC,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,qFAGWE,G,kGACA/B,EAAUyB,KAAKnB,cAAcyB,GAAK,W,cAA9CH,E,yBAECA,G,sFAMYrB,G,oGACDP,EAAUyB,KAAKhB,eAAeF,K,cAA1CqB,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,wFAGctB,EAAWd,G,oGACdO,EAAUyB,KAAKhB,eAAeF,GAAY,OAAQd,I,cAA9DmC,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,qFAEWtB,EAAWI,EAAcC,G,sGACzBZ,EAAUyB,KAAKf,iBAAiBH,EAAWI,EAAcC,K,cAArEgB,E,0BACaA,EAAIC,Q,cAAjBA,E,0BAEmBJ,KAAKO,WAAWzB,I,cAAnC0B,E,OACNJ,EAAKK,aAAeD,EAAWE,QAAQC,MACvCP,EAAKQ,gBAAkBR,EAAKO,aACrBP,EAAKO,M,kBAELP,G,yFAGctB,EAAWI,EAAcC,EAAoBnB,G,kGAChDO,EAAUyB,KAAKf,iBAAiBH,EAAWI,EAAcC,GAAqB,MAAOnB,I,cAAjGmC,E,yBAECA,G,wFAGcrB,EAAWI,G,kGACdX,EAAUyB,KAAKf,iBAAiBH,EAAWI,GAAe,W,cAAtEiB,E,yBAECA,G,yFAMerB,EAAWI,G,oGACfP,MAAMqB,KAAKN,eAAeZ,EAAWI,K,cAAjDiB,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,qFAIWtB,EAAWI,EAAcU,G,oGACzBrB,EAAUyB,KAAKL,iBAAiBb,EAAWI,EAAcU,K,cAArEO,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,wFAGctB,EAAWI,EAAclB,G,kGAC5BO,EAAUyB,KAAKN,eAAeZ,EAAWI,GAAe,OAAQlB,EAAM,S,cAAlFmC,E,0BAEOA,EAAIC,Q,gIAGItB,EAAWI,EAAcU,EAAc5B,G,oGAC1CO,EAAUyB,KAAKL,iBAAiBb,EAAWI,EAAcU,GAAe,MAAO5B,I,cAA3FmC,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,wFAGctB,EAAWI,EAAcU,G,oGAC5BrB,EAAUyB,KAAKL,iBAAiBb,EAAWI,EAAcU,GAAe,W,cAApFO,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,oFAQUtB,G,oGACCH,MAAMqB,KAAKH,UAAUf,K,cAAjCqB,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,gFAGMtB,EAAW+B,G,oGACNtC,EAAUyB,KAAKF,YAAYhB,EAAW+B,K,cAAlDV,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,mFAIStB,EAAWd,G,oGACTO,EAAUyB,KAAKH,UAAUf,GAAY,OAAQd,EAAM,S,cAA/DmC,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,mFAGStB,EAAW+B,EAAS7C,G,oGAClBO,EAAUyB,KAAKF,YAAYhB,EAAW+B,GAAU,MAAO7C,I,cAAnEmC,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,mFAGStB,EAAW+B,G,oGACTtC,EAAUyB,KAAKF,YAAYhB,EAAW+B,GAAU,W,cAA5DV,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,wFAKctB,G,oGACHP,EAAUyB,KAAKT,cAAcT,K,cAAzCqB,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,EAAKU,Y,oFAGKhC,EAAWwB,G,oGACV/B,EAAUyB,KAAKR,gBAAgBV,EAAWwB,K,cAAtDH,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,uFAGatB,EAAWd,G,kGACbO,EAAUyB,KAAKT,cAAcT,GAAY,OAAQd,EAAM,S,cAAnEmC,E,0BAEOA,EAAIC,Q,+HAGGtB,EAAWwB,EAAItC,G,oGACjBO,EAAUyB,KAAKR,gBAAgBV,EAAWwB,GAAK,MAAOtC,I,cAAlEmC,E,0BACaA,EAAIC,Q,cAAjBA,E,yBAECA,G,uFAGatB,EAAWwB,G,kGACb/B,EAAUyB,KAAKR,gBAAgBV,EAAWwB,GAAK,W,cAA3DH,E,yBAECA,G,sGAO4BrB,EAAWI,G,wGAEfc,KAAKe,cAAcjC,EAAWI,I,cAAvD8B,E,0BAEsBhB,KAAKiB,aAAanC,EAAWI,I,cAAnDgC,E,0BAE0BlB,KAAKmB,kBAAkBrC,EAAWI,I,cAA5DkC,E,OAGAC,EAAU,CACdnC,aAAcA,EACdJ,UAAWA,EACX2B,aAAcO,EAAiBP,aAC/BG,gBAAiBI,EAAiBJ,gBAClCpC,IAAKwC,EAAiBxC,IACtB8C,OAAQJ,EAAcI,OACtBC,WAAaP,EAAiBO,WAC9BC,YAAaJ,EAAkBI,a,kBAG1BH,G,yGAK8BvC,EAAW2C,G,qHAEhBzB,KAAK0B,eAAe5C,I,cAA9C6C,E,0BAKwBC,QAAQC,IAAIF,EAAkBG,YAAYC,KAAI,SAACR,GAK3E,OAHsB,EAAKR,cAAcjC,EAAWyC,EAAWjB,S,cAF3D0B,E,0BAQwBJ,QAAQC,IAAIF,EAAkBG,YAAYC,KAAI,SAACR,GAG3E,OAFoB,EAAKJ,kBAAkBrC,EAAWyC,EAAWjB,S,cAD7D2B,E,OAOND,EAAgBE,SAAQ,SAACC,GAEvB,IAAMC,EAAwBH,EAAgBI,MAAK,SAAC5D,GAElD,OAAOA,EAAES,eAAiBiD,EAAG7B,MAI7B6B,EAAGX,YADDY,EACeA,EAAsBZ,YAKtB,M,oBAKSxB,KAAKsC,aAAaxD,EAAW2C,I,eAArDc,E,2BAEsBvC,KAAKO,WAAWzB,I,eAAtC0D,E,2BAEsBxC,KAAKiB,aAAanC,I,eAAxCoC,E,OAEAG,EAAU,CACdoB,gBAAiBF,EAAgBE,gBACjC/B,QAAS8B,EAAc9B,QAEvBoB,YAAaE,EACbV,OAAQJ,EAAcI,Q,kBAGjBD,G,yDC+DIqB,E,WA5Wb,aAAe,oBACb1C,KAAKxB,IAAM,MACXwB,KAAKK,SAAWL,KAAKxB,IAAM,gBAC3BwB,KAAK2C,WAAa3C,KAAKxB,IAAM,kBAC7BwB,KAAK8B,YAAc9B,KAAKxB,IAAM,mBAC9BwB,KAAKsB,OAAStB,KAAKxB,IAAM,cACzBwB,KAAKwB,YAAcxB,KAAKxB,IAAM,mB,mKAOPG,MAAMqB,KAAKK,W,cAA5BuC,E,0BACiBA,EAASxC,Q,UAA1BC,E,OACQ,EACU,IAApBA,EAAS9C,O,wBACX8D,EAAUhB,EAAS0B,KAAI,SAACrB,GAGtB,OAFAA,EAAQJ,GAAKI,EAAQmC,IAEdnC,K,kBAGFW,G,mFAIMf,G,sGACQ3B,MAAMqB,KAAKK,W,cAA5BuC,E,0BACiBA,EAASxC,Q,cAA1BC,E,OACAK,EAAUL,EAASgC,MAAK,SAACS,GAC7B,OAAOA,EAAED,MAAQvC,K,kBAGZ,CAAEyC,OAAQ,KAAMrC,QAASA,I,qFAGd1C,G,yEAClBgF,MAAM,gCACNnH,QAAQC,IAAIkC,G,kBAEL,CAAE+E,OAAQ,U,2EAGCzC,EAAItC,G,yEACtBgF,MAAM,gCACNnH,QAAQC,IAAIwE,EAAItC,G,kBAET,CAAE+E,OAAQ,U,2EAGCzC,G,yEAClB0C,MAAM,gCACNnH,QAAQC,IAAIwE,G,kBAEL,CAAE2C,IAAI,EAAOF,OAAQ,QAASrC,QAAS,K,4EAO3B5B,G,sGACIH,MAAMqB,KAAK8B,c,cAA5Bc,E,0BACwBA,EAASxC,Q,cAAjC8C,E,OAEApB,EAAcoB,EAAgBC,QAAO,SAAC5B,GAC1C,OAAOA,EAAWzC,YAAcA,KAC/BiD,KAAI,SAACR,GAGN,OAFAA,EAAWjB,GAAKiB,EAAWsB,IAEpBtB,K,kBAGF,CAAEO,YAAaA,I,wFAGDhD,EAAWsE,EAAUpF,G,yEAC1CgF,MAAM,gCAENnH,QAAQC,IAAIgD,EAAWsE,EAAUpF,G,kBAE1B,CAAE+E,OAAQ,U,2EAGCjE,EAAWI,EAAcC,G,wGACpBR,MAAMqB,KAAK8B,c,cAA5Bc,E,0BACoBA,EAASxC,Q,cAA7B0B,E,QACAP,EAAaO,EAAYO,MAAK,SAACF,GACnC,OAAOA,EAAGU,MAAQ3D,MAGToB,GAAKiB,EAAWsB,I,oBACF7C,KAAKO,WAAWzB,I,eAAnC0B,E,OACNe,EAAWd,aAAeD,EAAWE,QAAQC,MAC7CY,EAAWX,gBAAkBW,EAAWZ,M,kBAEjCY,G,yFAGczC,EAAWI,EAAcC,EAAoBnB,G,yEAClEgF,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWI,EAAcC,EAAoBnB,G,kBAElD,CAAEiF,IAAI,I,8EAGQnE,EAAWI,G,yEAChC8D,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWI,G,kBAEhB,CAAE+D,IAAI,EAAOF,OAAQ,U,+EAONjE,EAAWI,G,oGAEVP,MAAMqB,KAAKwB,c,cAA5BoB,E,0BACkBA,EAASxC,Q,cAO/BoB,GALFA,GAFIA,E,QAEsB2B,QAAO,SAACE,GAChC,OAAOA,EAAWnE,eAAiBA,MAIrBsC,EACXO,KAAI,SAACsB,GAGJ,OAFAA,EAAW/C,GAAK+C,EAAWR,IAEpBQ,KAGG,G,kBAGT,CAAE7B,gB,qFAIS1C,EAAWI,EAAcU,G,sGACpBjB,MAAMqB,KAAKwB,c,cAA5BoB,E,0BACoBA,EAASxC,Q,cAA7BoB,E,OACA6B,EAAa7B,EAAY,G,kBAExB,CAAE6B,e,wFAGYvE,EAAWI,EAAclB,G,yEAC9CgF,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWI,EAAclB,G,kBAE9B,CAAE,IAAM,EAAO+E,OAAQ,QAASM,WAAY,K,8EAG9BvE,EAAWI,EAAcU,G,yEAC9CoD,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWI,EAAcU,G,kBAE9B,CAAE,IAAM,EAAOmD,OAAQ,U,0EASbjE,G,sGACMH,MAAMqB,KAAKsB,S,cAA5BsB,E,0BACaA,EAASxC,Q,cAAxBkB,E,OACEgC,EAAehC,EAAO,IAC5BA,EAASA,EAAO6B,QAAO,SAACI,GACtB,OAAOA,EAAMzE,YAAcA,MAEtB0E,QAAQF,GAEVhC,IACHA,EAAS,I,kBAGJ,CAAE2B,IAAI,EAAMF,OAAQ,KAAMzB,W,iFAIpBxC,EAAW+B,G,sGACDlC,MAAMqB,KAAKsB,S,cAA5BsB,E,0BACeA,EAASxC,Q,cAAxBkB,E,OACAiC,EAAQjC,EAAO,G,kBAEd,CAAE2B,IAAI,EAAMF,OAAQ,KAAMQ,U,mFAIjBzE,EAAWd,G,yEAC3BgF,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWd,G,kBAEf,CAAEiF,IAAI,EAAOF,OAAQ,U,yEAIbjE,EAAW+B,EAAS7C,G,yEACpCgF,MAAM,gCACNnH,QAAQC,IAAIgD,EAAW+B,EAAS7C,G,kBAEzB,CAAEiF,IAAI,EAAOF,OAAQ,U,yEAGZjE,EAAW+B,G,yEAC3BmC,MAAM,gCACNnH,QAAQC,IAAIgD,EAAW+B,G,kBAEhB,CAAEkC,OAAQ,U,8EAMIjE,G,sGACEH,MAAMqB,KAAK2C,a,cAA5BC,E,0BACiBA,EAASxC,Q,cAChCU,GADIA,E,QACoBqC,QAAO,SAACM,GAC9B,OAAOA,EAAG3E,YAAcA,MAGpBd,EAAO,IACR8C,WAAa,GAClB9C,EAAK8C,WAAaA,EACd9C,EAAK8C,aACP9C,EAAK8C,WAAa9C,EAAK8C,WACpBiB,KAAI,SAAC0B,GAGJ,OAFAA,EAAGnD,GAAKmD,EAAGZ,IAEJY,M,kBAINzF,EAAK8C,Y,qFAGKhC,EAAWwB,G,qFACtBb,EAAca,E,mBACG3B,MAAMqB,KAAK2C,a,cAA5BC,E,0BACmBA,EAASxC,Q,cAA5BU,E,QACA4C,EAAY5C,EAAWuB,MAAK,SAACoB,GACjC,OAAOA,EAAGnD,KAAOb,QAIL,IAAI5B,MAAM,uBAClB8F,WAAa,K,kBAGZ,CAAEV,IAAI,EAAMF,OAAQ,KAAMN,gBAAiBiB,I,wFAG9B5E,EAAWd,G,yEAC/BgF,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWd,G,kBAEhB,CAAEiF,IAAI,EAAOF,OAAQ,U,6EAGRjE,EAAWwB,EAAItC,G,yEACnCgF,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWwB,EAAItC,G,kBAEpB,CAAEiF,IAAG,EAAMF,OAAQ,U,6EAGNjE,EAAWwB,G,yEAC/B0C,MAAM,gCACNnH,QAAQC,IAAIgD,EAAWwB,G,kBAEhB,CAAE2C,IAAI,EAAOF,OAAQ,U,4FAOOjE,EAAWI,G,wGAEfc,KAAKe,cAAcjC,EAAWI,I,cAAvD8B,E,0BAEsBhB,KAAKiB,aAAanC,EAAWI,I,cAAnDgC,E,0BAE0BlB,KAAKmB,kBAAkBrC,EAAWI,I,cAA5DkC,E,OAGAC,EAAU,CACdnC,aAAcA,EACdJ,UAAWA,EACX2B,aAAcO,EAAiBP,aAC/BG,gBAAiBI,EAAiBJ,gBAClCpC,IAAKwC,EAAiBxC,IACtB8C,OAAQJ,EAAcI,OACtBC,WAAaP,EAAiBO,WAC9BC,YAAaJ,EAAkBI,a,kBAG1BH,G,yGAK8BvC,EAAW2C,G,qHAChBzB,KAAK0B,eAAe5C,I,cAA9C6C,E,0BAIwBC,QAAQC,IAAIF,EAAkBG,YAAYC,KAAI,SAACR,GAG3E,OAFsB,EAAKR,cAAcjC,EAAWyC,EAAWjB,S,cAD3D0B,E,0BAMwBJ,QAAQC,IAAIF,EAAkBG,YAAYC,KAAI,SAACR,GAG3E,OAFoB,EAAKJ,kBAAkBrC,EAAWyC,EAAWjB,S,cAD7D2B,E,OAOND,EAAgBE,SAAQ,SAACC,GAEvB,IAAMC,EAAwBH,EAAgBI,MAAK,SAAC5D,GAElD,OAAOA,EAAES,eAAiBiD,EAAG7B,MAI7B6B,EAAGX,YADDY,EACeA,EAAsBZ,YAKtB,M,oBAKSxB,KAAKsC,aAAaxD,EAAW2C,I,eAArDc,E,2BAEsBvC,KAAKO,WAAWzB,I,eAAtC0D,E,2BAEsBxC,KAAKiB,aAAanC,I,eAAxCoC,E,OAEAG,EAAU,CACdoB,gBAAiBF,EAAgBE,gBACjC/B,QAAS8B,EAAc9B,QAEvBoB,YAAaE,EACbV,OAAQJ,EAAcI,Q,kBAGjBD,G,kECpWLuC,EAAQ5I,cA+BC6I,EA7BW,WAKxB,GAFAhI,QAAQiI,MAAMF,GAEA,SAAVA,EAAkB,CACpB/H,QAAQC,IAAI,0BACZ,IAAMiI,EAAiB,IAAIrB,EAG3B,OAFAsB,OAAOC,OAAOF,GAEPA,EAET,GAAc,YAAVH,EAAqB,CACvB,IAAMM,EAAa,IAAItF,EAGvB,OAFAoF,OAAOC,OAAOC,GAEPA,EAET,GAAc,aAAVN,EAAsB,CACxB,IACMO,EAAkB,IAAIC,EADJlJ,OAAOkJ,iBAI/B,OAFAJ,OAAOC,OAAOE,GAEPA,GAMIN,GCwKAQ,E,YA9Lb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRC,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAE9D,MAAO6D,EAAMxH,OAAO0H,SApBnB,EAuBnBC,wBAA0B,SAAAH,GACxB,EAAKC,SAAS,CAAEG,YAAaJ,EAAMxH,OAAO0H,SAxBzB,EA4BnBG,iBAAmB,SAAAC,GACjB,IACMC,EADQC,MAAMC,KAAKH,EAAE9H,OAAOkI,OACf,GAEb9B,EAAW,IAAI+B,SACrB/B,EAASgC,OAAO,OAAQL,GACxB3B,EAASgC,OAAO,OAAQL,EAAKM,MAEzBN,EAAKO,MACPlC,EAASgC,OAAO,OAAQL,EAAKO,MAG/B,EAAKb,SAAS,CAAEc,mBAAmB,EAAMnC,SAAUA,IAE1B,KAArB,EAAKoC,MAAM7E,OACb,EAAK8D,SAAS,CAAE9D,MAAOoE,EAAKU,QA3Cb,EA+CnBC,YAAc,WACZ,EAAKjB,SAAS,CAAEkB,WAAW,IAE3B,IAAMvC,EAAW,EAAKoC,MAAMpC,SAE5BA,EAASgC,OAAO,QAAS,EAAKI,MAAM7E,OACpCyC,EAASgC,OAAO,cAAe,EAAKI,MAAMZ,aAC1C/I,QAAQC,IAAI,uBAAwBsH,EAASwC,IAAI,SAEjD,IAAI5H,EAAO,GACU,aAAjBhD,gBAKFgD,EAAO,CACL2C,MAAOyC,EAASwC,IAAI,SACpBhB,YAAaxB,EAASwC,IAAI,eAC1BN,KAAMlC,EAASwC,IAAI,UAIvB,IACEhH,EAAWiH,iBAAiB,EAAKL,MAAM1G,UAAW,EAAK0G,MAAMpC,SAAUpF,GACpE8H,MAAK,SAAAlD,GACJ/G,QAAQC,IAAI,wCAAyC8G,GAErD,EAAK6B,SAAS,CACZkB,WAAW,EACXI,iBAAiB,EACjBC,UAAU,EACVC,gBAAiBrD,EAAS1D,eAE5B,EAAKoF,MAAM4B,eAAetD,EAASrB,eAGlC4E,OAAM,SAACrB,GACRjJ,QAAQC,IAAI,aAAcgJ,GAC1B,EAAKL,SAAS,CACZkB,WAAW,EACXK,UAAU,EACVI,kBAAmB,kBAAC,IAAD,CACjBC,aAAc,EACd3J,QAAU,SACV4J,QAAU,qCACVC,QAAU,uGAKlB,MAAOzB,GACPjJ,QAAQE,MAAM,sBAAuB+I,KAhGvC,EAAKU,MAAQ,CACX1G,UAAW,EAAKwF,MAAMxF,UACtB0H,WAAW,EACXR,UAAU,EACVC,gBAAiB,KACjBN,WAAW,EACXI,iBAAiB,EACjBR,mBAAmB,EACnB5E,MAAO,EAAK2D,MAAM3D,MAClBiE,YAAa,EAAKN,MAAMM,YACxBtE,GAAI,EAAKgE,MAAMhE,GACf8C,SAAU,KACVgD,kBAAmB,MAdJ,E,0EAsGN5B,GACX,IAAMiC,EAAOjC,EAAMkC,cACnB7K,QAAQC,IAAI,wBAAyB2K,EAAKE,iBACrCF,EAAKE,kBACRnC,EAAMoC,iBACNpC,EAAMqC,kBACN7G,KAAKyE,SAAS,CAAE+B,WAAW,KAGzBC,EAAKE,kBACPnC,EAAMoC,iBACNpC,EAAMqC,kBACN7G,KAAK0F,iB,+BAKC,IAAD,OACP,OACE,oCACG1F,KAAKwF,MAAMY,kBAEZ,kBAACU,EAAA,EAAD,CACEC,YAAU,EACVP,UAAYxG,KAAKwF,MAAMgB,UACvBQ,SAAW,SAAAlC,GAAC,OAAI,EAAKmC,aAAanC,KAElC,kBAACgC,EAAA,EAAKI,MAAN,CAAYC,UAAU,uBACpB,kBAACL,EAAA,EAAKM,MAAN,eACA,kBAACN,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRjC,KAAK,OACLkC,YAAY,2BACZ7C,MAAQ1E,KAAKwF,MAAM7E,MACnB6G,SAAWxH,KAAKuE,oBAElB,kBAACuC,EAAA,EAAKW,KAAN,CAAW7K,UAAU,cAArB,2CAGA,kBAACkK,EAAA,EAAKO,QAAQK,SAAd,oBACA,kBAACZ,EAAA,EAAKO,QAAQK,SAAd,CAAuBrC,KAAK,WAA5B,6CAKF,kBAACyB,EAAA,EAAKI,MAAN,CAAYC,UAAU,6BACpB,kBAACL,EAAA,EAAKM,MAAN,qBACA,kBAACN,EAAA,EAAKO,QAAN,CACEhC,KAAK,OACLkC,YAAY,iCACZ7C,MAAQ1E,KAAKwF,MAAMZ,YACnB4C,SAAWxH,KAAK2E,0BAElB,kBAACmC,EAAA,EAAKW,KAAN,CAAW7K,UAAU,cAArB,qDAGA,kBAACkK,EAAA,EAAKO,QAAQK,SAAd,oBACA,kBAACZ,EAAA,EAAKO,QAAQK,SAAd,CAAuBrC,KAAK,WAA5B,mDAIF,kBAACyB,EAAA,EAAKI,MAAN,CAAYC,UAAU,2BACpB,kBAACL,EAAA,EAAKO,QAAN,CACEC,UAAQ,EACRjC,KAAK,OACL9B,MAAM,SACNoE,OAAO,kBACPH,SAAWxH,KAAK6E,mBAElB,kBAACiC,EAAA,EAAKW,KAAN,CAAW7K,UAAU,cAArB,2CAGA,kBAACkK,EAAA,EAAKO,QAAQK,SAAd,oBACA,kBAACZ,EAAA,EAAKO,QAAQK,SAAd,CAAuBrC,KAAK,WAA5B,iDAIF,kBAACuC,EAAA,EAAMC,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQpL,QAAQ,UAAU2I,KAAK,UAA/B,e,GArLiB0C,aC4BdC,E,YAjCb,WAAY1D,GAAQ,IAAD,8BACjB,4CAAMA,KAMR2D,YAAc,WACZ,EAAK3D,MAAM4D,oBANX,EAAK1C,MAAQ,CACX7E,MAAO,SAHQ,E,sEAYjB,OACE,kBAACiH,EAAA,EAAD,CAAOO,KAAOnI,KAAKsE,MAAM6D,KAAOC,OAASpI,KAAKiI,aAC5C,kBAACL,EAAA,EAAMS,OAAP,CAAcC,aAAW,GACvB,kBAACV,EAAA,EAAMW,MAAP,KAAcvI,KAAKsE,MAAMkE,aAE3B,kBAACZ,EAAA,EAAMa,KAAP,KACE,kBAAC,EAAD,CACE3J,UAAYkB,KAAKsE,MAAMxF,UACvB6B,MAAQX,KAAKsE,MAAM3D,MACnBiE,YAAc5E,KAAKsE,MAAMM,YACzBtE,GAAKN,KAAKsE,MAAMhE,GAChB4F,eAAiBlG,KAAKsE,MAAM4B,eAC5BgC,iBAAmBlI,KAAKsE,MAAM4D,iBAC9B7C,KAAM,qB,GA1BmBqD,IAAMX,WCOrCY,EAAmB,CACrBhI,MAAO,GACPiE,YAAa,GACbtE,GAAI,MAGFsI,EAAiB,SAACtE,GACpB,IA2DIuE,EACAC,EA5DEzD,EAAOf,EAAMe,KADW,EAEJ0D,mBAAS,IAFL,mBAEvBC,EAFuB,KAEhBC,EAFgB,OAIIF,oBAAS,GAJb,mBAIvBG,EAJuB,KAIZC,EAJY,OAKEJ,mBAASJ,GALX,mBAKvBvF,EALuB,KAKbgG,EALa,KAQxBlD,EAAiB,SAACmD,GACpB/E,EAAMgF,WAAWD,GACjBF,GAAa,GACbC,EAAYT,IA+BVY,EAAkB,WACpB1N,QAAQC,IAAI,UAAWoN,GACvBC,GAAcD,GAETA,GACDE,EAAYT,IAIpBa,qBAAU,WAKN,OAJKC,EAAWnF,EAAM0E,MAAOA,IACzBC,EAAS3E,EAAM0E,OAGb,eAEP,CAACA,EAAO1E,EAAM0E,QAKbA,EAAMzL,OAAS,GACfsL,EAAW,kBAAC,IAAD,CAAWa,aA3BL,SAAAC,GACjB,IAAMtI,EAAU2H,EAAMjH,KAAI,SAAAsH,GAAI,OAbN,SAACA,EAAMM,GCxCrB,IAACC,EAAKC,EDiDhB,OCjDWD,EDyCG,CACVP,EAAK1I,MAAO0I,EAAKzE,aC1CLiF,ED2CbF,EC1CFC,EAAIvH,MAAK,SAAAyH,GACd,OANW,SAACA,EAAUD,GACxB,OAAOC,EAASC,cAAczK,OAAO1B,SAASiM,EAAWE,cAAczK,QAK9D0K,CAAOF,EAAUD,MD0ChBR,EAAKY,SAAU,EAEfZ,EAAKY,SAAU,EAGZZ,EAI2Ba,CAAoBb,EAAMM,MAC5DV,EAAS5H,MA0BTyH,EACI,kBAAC,IAAD,CAAMzD,KACEf,EAAMe,KAEV2D,MAAOA,EACPmB,eAxDW,SAAC7J,GACpB,IAAM+I,EAAOL,EAAM3G,MAAK,SAAC7E,GAAD,OAAOA,EAAE8C,KAAOA,KACxC8I,EAAYC,GAEZF,GAAa,IAqDLiB,iBAlDa,SAAC9J,GACtBgE,EAAM+F,aAAa/J,OAqDnBwI,EACI,2CAAiBzD,EAAjB,uCAGR,IAAIiF,EACA,kBAAC,IAAD,iBAAgBlH,EAAhB,CACIoF,WACIpF,EAAS9C,GAAT,eAAsB+E,GAAtB,cAAsCA,GAE1C6D,UAAWA,EACXqB,aAAchB,EACdrD,eAAgBA,EAChBsE,SACInF,EAAK0E,eAoBjB,MAhBmB,eAAfzF,EAAMe,MACc,OAAhBjC,EAAS9C,KACTgK,EACI,kBAAC,EAAD,CAAwB9B,WAAU,cACnBnD,GAEX6C,iBAAkBqB,EAClBpB,KAAMe,EACNhD,eAAgBA,EAChBsE,SACEnF,EAAK0E,eAOnB,oCACI,kBAAC7M,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKsN,GAAI,GACJ5B,EADL,KAEA,kBAAC1L,EAAA,EAAD,CAAKuN,GAAI,GACLD,GAAI,GACJ,kBAAC3C,EAAA,EAAD,CAAQ6C,QAASpB,EACb7M,QAAQ,oBACRkO,KAAK,KACLC,OAAK,GAHT,OAISxF,EAJT,OAOPyD,EACAwB,EAdL,MAuBR1B,EAAekC,aAAe,CAC1BzF,KAAM,WAEKuD,Q,kBE1JTmC,GAAa,SAACzK,EAAI0K,EAAShC,GAC/B,IAAMiC,EAAWjC,EACXkC,EAAQlC,EAAMmC,WAAU,SAAA9B,GAAI,OAAIA,EAAK/I,KAAOA,KAGlD,OAFA0D,OAAOoH,OAAOH,EAASC,GAAQF,GAExBC,GAGHI,GAAa,SAAC/K,EAAI0I,GAGtB,OAFiBA,EAAM7F,QAAO,SAAAkG,GAAI,OAAIA,EAAK/I,KAAOA,MAK9CgL,GAAU,SAACjC,EAAML,GACrB,MAAM,GAAN,oBAAYA,GAAZ,CAAmBK,KCqHNkC,GA1HE,WAAO,IAAD,EACWxC,oBAAS,GADpB,mBACbyC,EADa,KACJC,EADI,OAEO1C,mBAAS,IAFhB,mBAEbC,EAFa,KAENC,EAFM,KAIf5D,EAAO,UACPqG,EAAMC,qBAAWzP,GAEjB0P,EAAgB,SAAOvC,GAAP,mBAAA5K,EAAAC,OAAA,kEAAAD,EAAA,MACGiN,EAAIE,cAAcvC,IADrB,OAEI,QADlBzG,EADc,QAEPG,SACL8I,EAAajJ,EAASlC,SACjBuJ,SAAU,EACfgB,EAAWK,GAAQO,EAAY7C,GACrCC,EAASgC,IAETpP,QAAQE,MAAM,wBAAyBsN,GARrB,sCAYhByC,EAAgB,SAAOxL,EAAI+I,GAAX,mBAAA5K,EAAAC,OAAA,kEAAAD,EAAA,MACGiN,EAAII,cAAcxL,EAAI+I,IADzB,OAGI,QAFlBzG,EADc,QAGPG,UACLrC,EAAUkC,EAASlC,SACjBuJ,SAAU,EACZgB,EAAWF,GAAWzK,EAAII,EAASsI,GACzCC,EAASgC,IAPS,sCAwCtBzB,qBAAU,WA2BR,OALKgC,KArBe,qBAAA/M,EAAAC,OAAA,uDACdqN,EAAc,GADA,oBAAAtN,EAAA,MAIKiN,EAAIM,kBAJT,OAIVC,EAJU,OAKhBF,EAAcE,EAAOlK,KAAI,SAAArB,GACvB,IAAMJ,EAAKI,EAAQJ,GAKnB,OAJAI,EAAQwL,IAAM5L,EACdI,EAAQlC,IAAR,oBAA4B8B,GAC5BI,EAAQuJ,SAAU,EAEXvJ,KAXO,gDAehB7E,QAAQC,IAAI,0BAfI,QAkBlBmN,EAAS8C,GAlBS,wDAsBlBI,GACAV,GAAW,IAGN,eAGN,CAAEC,EAAKF,EAASxC,IAEnB,IAAMoD,EAAkB,CACtB,CACE3G,KAAK,GAAD,OAAMJ,EAAN,KACJgH,KAAK,IAAD,OAAOhH,EAAP,OAIR,OACE,oCACE,kBAACiH,EAAA,EAAD,CACEC,cAAY,oBACZC,MAAQ,CAAEC,aAAc,MAAOC,UAAW,QAC1C,kBAACxP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsN,GAAK,IACR,kBAAC,IAAD,CACE8B,cAAY,qBACZvD,MAAQoD,MAGd,kBAAC,EAAD,CACEF,IAAM7G,EACNsH,MAAQtH,EACR2D,MAAQA,EACRM,WApFW,SAAOD,GAAP,SAAA5K,EAAAC,OAAA,oDACb2K,EAAK/I,GADQ,kCAAA7B,EAAA,MAEFqN,EAAczC,EAAK/I,GAAI+I,IAFrB,iEAAA5K,EAAA,MAIFmN,EAAcvC,IAJZ,8EAqFXgB,aAjEa,SAAC/J,GAGpB,GAFAzE,QAAQC,IAAI,iBAEY,OAfJ,SAAOwE,GAAP,eAAA7B,EAAAC,OAAA,2EAAAD,EAAA,MAGDiN,EAAIkB,cAActM,IAHjB,OAGlBsC,EAHkB,sDAKlB/G,QAAQC,IAAR,MALkB,cAOpBD,QAAQC,IAAI,oBAAqB8G,GAPb,kBASbA,GATa,wDAcHgK,CAActM,GAClByC,OAAiB,CAC5B,IAAMkI,EAAWI,GAAW/K,EAAI0I,GAChCC,EAASgC,QA+DT,kBAAC,EAAD,Q,mBCyBS4B,GAlJK,SAACvI,GACnB,IAAMoH,EAAMC,qBAAWzP,GADM,EAEG6M,oBAAS,GAFZ,mBAErByC,EAFqB,KAEZC,EAFY,OAGD1C,mBAAS,IAHR,mBAGrBC,EAHqB,KAGdC,EAHc,OAIaF,oBAAS,GAJtB,mBAIrB+D,EAJqB,KAIPC,EAJO,OAKKhE,qBALL,mBAKrBiE,EALqB,KAKXC,EALW,KAoB7BzD,qBAAU,WACR,IAbiC1H,EAiB3BJ,EAAiB,4BAAAjD,EAAAC,OAAA,kEAAAD,EAAA,MACEiN,EAAIhK,eAAe4C,EAAMxF,YAD3B,OACf8D,EADe,OAGfqI,EAAWrI,EAASd,YAAYC,KAAI,SAACR,GAP9B,IAACjB,EAYZ,OAJAiB,EAAW0I,SAAU,EACrB1I,EAAW/C,KATC8B,EASYiB,EAAWjB,GAR/B,cAAN,OAAsBgE,EAAMxF,UAA5B,wBAAuDwB,EAAvD,aASEiB,EAAWzC,UAAYwF,EAAMxF,UAEtByC,KAET0H,EAASgC,GAVY,sCA8BvB,OAjBKO,IACH9J,IACA+J,GAAW,IAKTqB,IAAiBE,GACnBC,EAAYC,YAAW,WACrBxL,MAjDa,MAqDbsH,EAAMzL,OAAS,GACjBwP,EA3CyB,KADMjL,EA4CWkH,GA3C5BzL,UACCuE,EAAYO,MAAK,SAACd,GAC/B,MAA6B,gBAAtBA,EAAWwB,WA4Cf,WACLoK,cAAcH,MAEf,CAAEtB,EAAKsB,EAAUxB,EAASsB,EAAc9D,EAAO1E,EAAMxF,YAExD,IAuCMwK,EAAa,SAACD,GAClB,OAAIA,EAAK/I,GAxCc,SAAOA,EAAI+I,GAAX,uBAAA5K,EAAAC,OAAA,uDACI,EADJ,WAAAD,EAAA,MAEAiN,EAAI0B,iBACzB9I,EAAMxF,UACNwB,GAHyB,EAKzB+I,IANqB,OASC,QAPlBzG,EAFiB,QASVG,QACXlH,QAAQC,IAAI,YAAa8G,GACnByK,EAAmBzK,EAASrB,WAC5B2J,EAAQlC,EAAMmC,WAAU,SAAA1H,GAAE,OAAIA,EAAGnD,KAAOA,KACxCgN,EAAqBtE,EAAMkC,GAEjCmC,EAAiBpD,SAAU,EAC3BoD,EAAiBtK,OAASuK,EAAmBvK,OACvCkI,EAAWF,GAAWzK,EAAI+M,EAAkBrE,GAClDC,EAASgC,IAETpP,QAAQC,IAAI,uBAAwB8G,GApBf,qCAyCdwK,CAAiB/D,EAAK/I,GAAI+I,GAjBZ,SAAOA,GAAP,mBAAA5K,EAAAC,OAAA,kEAAAD,EAAA,MACAiN,EAAI7F,iBAAiBwD,IADrB,OAEC,QADlBzG,EADiB,QAEVG,SACLwK,EAAgB3K,EAASrB,YAEjB0I,SAAU,EACxBsD,EAAcxK,OAAS,cAEjBkI,EAAWK,GAAQiC,EAAevE,GACxCC,EAASgC,IAETpP,QAAQC,IAAI,uBAAwB8G,GAXf,qCAmBdiD,CAAiBwD,IAiBtBgB,EAAe,SAAC/J,GAEpB,GAAwB,OAfD,SAAOA,GAAP,eAAA7B,EAAAC,OAAA,uDACvB7C,QAAQC,IAAI4P,GADW,oBAAAjN,EAAA,MAIJiN,EAAI8B,iBAAiBlJ,EAAMxF,UAAWwB,IAJlC,OAIrBsC,EAJqB,uDAMrB/G,QAAQC,IAAR,MANqB,eAQvBD,QAAQC,IAAI,uBAAwB8G,GARb,kBAUhBA,GAVgB,wDAcN4K,CAAiBlN,GACrByC,OAAiB,CAC5B,IAAMkI,EAAWI,GAAW/K,EAAI0I,GAChCC,EAASgC,KAIb,OACE,kBAAC,EAAWwC,SAAZ,MACG,kBACC,kBAAC,EAAD,CACEpI,KAAO,aACP2D,MAAQA,EACRM,WAAaA,EACbe,aAAeA,QC1BVqD,GA9GI,SAACpJ,GAClB,IAAMoH,EAAMC,qBAAWzP,GADK,EAEA6M,mBAAS,IAFT,mBAEpBC,EAFoB,KAEbC,EAFa,OAIIF,oBAAS,GAJb,mBAIpByC,EAJoB,KAIXC,EAJW,KAM5BjC,qBAAU,WAwBR,OALKgC,KAdoB,qBAAA/M,EAAAC,OAAA,kEAAAD,EAAA,MACKiN,EAAIiC,iBAAiBrJ,EAAMxF,YADhC,OACjB8O,EADiB,OAGjBjL,EAAaiL,EAAc7L,KAAI,SAAA2B,GAPxB,IAACpD,EAYZ,OAJAoD,EAAUuG,SAAU,EACpBvG,EAAUlF,KATE8B,EASWoD,EAAUpD,GAR7B,aAAN,OAAqBgE,EAAMxF,UAA3B,uBAAqDwB,IASnDoD,EAAU5E,UAAYwF,EAAMxF,UAErB4E,KAETuF,EAAStG,GAVc,qCAevBgL,GACAlC,GAAW,IAGN,eAEN,CAAEC,EAAKF,EAASxC,EAAO1E,EAAMxF,YAEhC,IA4BMwK,EAAa,SAACD,GAClB,OAAIA,EAAK/I,GAfa,SAAOA,EAAI+I,GAAX,mBAAA5K,EAAAC,OAAA,kEAAAD,EAAA,MACCiN,EAAImC,gBAAgBvJ,EAAMxF,UAAWwB,EAAI+I,IAD1C,OAChBzG,EADgB,OAEhBc,EAAYd,EAASkL,UAEH,OAApBlL,EAASG,QAAmBW,GAC9BA,EAAUuG,SAAU,EAEdgB,EAAWF,GAAWzK,EAAIoD,EAAWsF,GAC3CC,EAASgC,IAETpP,QAAQC,IAAI,sBAAuB8G,GAVf,qCAgBbiL,CAAgBxE,EAAK/I,GAAI+I,GA9BZ,SAAOA,GAAP,mBAAA5K,EAAAC,OAAA,kEAAAD,EAAA,MACCiN,EAAIqC,gBAAgBzJ,EAAMxF,UAAWuK,IADtC,OAEE,QADlBzG,EADgB,QAETG,SACLiL,EAAepL,EAASkL,WACjB7D,SAAU,EAGjBgB,EAAWK,GAAQ0C,EAAchF,GACvCC,EAASgC,IAETpP,QAAQC,IAAI,sBAAuB8G,GAVf,qCAgCbmL,CAAgB1E,IAgBrBgB,EAAe,SAAC/J,GAGpB,GAFAzE,QAAQC,IAAI,iBAEY,OAfF,SAAOwE,GAAP,eAAA7B,EAAAC,OAAA,2EAAAD,EAAA,MAGHiN,EAAIuC,gBAAgB3J,EAAMxF,UAAWwB,IAHlC,OAGpBsC,EAHoB,sDAKpB/G,QAAQC,IAAR,MALoB,cAOtBD,QAAQC,IAAI,sBAAuB8G,GAPb,kBASfA,GATe,wDAcLqL,CAAgB3N,GACpByC,OAAiB,CAC5B,IAAMkI,EAAWI,GAAW/K,EAAI0I,GAChCC,EAASgC,KAIb,OACE,kBAAC,EAAWwC,SAAZ,MACG,kBACC,kBAAC,EAAD,CACEpI,KA5FK,aA6FL2D,MAAQA,EACRM,WAAaA,EACbe,aAAeA,QC3FnB6D,GAAgB,SAACzI,GAAD,MAAU,CAC9B,CACEA,KAAM,WACN4G,KAAM,aAER,CACE5G,KAAMA,KAmEK0I,GA/DO,SAAC7J,GACrB,IAAMoH,EAAMC,qBAAWzP,GACjBoE,EAAKgE,EAAM8J,MAAMC,OAAOvP,UAFC,EAIDiK,mBAAS,eAJR,mBAIvBuF,EAJuB,KAIfC,EAJe,OAKLxF,mBAAS,gBALJ,mBAKvBtD,EALuB,KAKjB+I,EALiB,KAyB/B,OAlBAhF,qBAAU,WAaR,OAXuB,mBAAA/K,EAAAC,OAAA,2EAAAD,EAAA,MAEIiN,EAAInL,WAAWD,IAFnB,OAEbsC,EAFa,OAGnB4L,EAAQ5L,EAASlC,QAAQC,OAHN,gDAKnB9E,QAAQE,MAAM,6BAA8BuE,EAA5C,MALmB,wDASvBmO,GAEO,eAGN,CAAE/C,EAAKpL,EAAImF,IAGZ,kBAAC,EAAWgI,SAAZ,MACI,kBACA,oCACE,kBAACnB,EAAA,EAAD,CAAWE,MAAQ,CAAEC,aAAc,MAAOC,UAAW,QACnD,kBAACxP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsN,GAAK,IACR,kBAAC,IAAD,CAAYzB,MAAQkF,GAAczI,OAItC,kBAACiJ,GAAA,EAAD,CACEpO,GAAG,yBACHqO,UAAYL,EACZM,SAAW,SAAAC,GAAG,OAAIN,EAAUM,KAE5B,kBAACC,GAAA,EAAD,CAAKC,SAAS,cAAcpO,MAAM,eAChC,kBAAC2L,EAAA,EAAD,CAAWE,MAAQ,CAAEC,aAAc,MAAOC,UAAW,QACnD,kBAAC,GAAD,CAAa5N,UAAYwB,MAI7B,kBAACwO,GAAA,EAAD,CAAKC,SAAS,aAAapO,MAAM,eAC/B,kBAAC2L,EAAA,EAAD,CAAWE,MAAQ,CAAEC,aAAc,MAAOC,UAAW,QACnD,kBAAC,GAAD,CAAY5N,UAAYwB,QAMhC,kBAAC,EAAD,W,UC9DJ0O,G,YAEJ,WAAY1K,GAAQ,IAAD,8BACjB,4CAAMA,KAcR2K,kBAAoB,WACN,EAAKC,QACbnO,cAAc,EAAKyE,MAAM1G,UAAW,EAAK0G,MAAMtG,cAEhD4G,MAAK,SAAA1F,GACJ,EAAKqE,SAAS,CACZhE,aAAcL,EAAKK,aACnBG,gBAAiBR,EAAKQ,gBACtBuO,eAAgB/O,EAAKmB,WACrB6N,SAAUhP,EAAK5B,IACf6Q,UAAWjP,EAAKiP,gBAzBL,EA8BnBC,aAAe,WACb,IAAM5D,EAAM,EAAKwD,QAEjBlM,MAAM,kBAHa,IAeXhF,EAAS,EAAKuR,oBAAoBC,QAAQC,iBAAiB,oBAA3DzR,KACRA,EAAK2C,MAAQ,EAAK6E,MAAM5E,gBACxB5C,EAAK4C,gBAAkB,EAAK4E,MAAM5E,gBAElC8K,EAAI0B,iBAAiB,EAAK5H,MAAM1G,UAAW,EAAK0G,MAAMtG,cAD3B,EAC6DlB,GAAM8H,MAAK,SAAClD,GAC1E,OAApBA,EAASG,QAGX,EAAK0B,SAAS,CACZ2B,kBAAmB,kBAAC,IAAD,CACjBC,aAAc,EACd3J,QAAU,UACV4J,QAAU,mBACVC,QAAU,0CAAe,2BAAI,EAAKf,MAAM5E,iBAA9B,0BAIfuF,OAAM,SAACrB,GACRjJ,QAAQE,MAAM,6BAA8B+I,GAC5C,EAAKL,SAAS,CACZ2B,kBAAmB,kBAAC,IAAD,CACjBC,aAAc,EACd3J,QAAU,SACV4J,QAAU,0BACVC,QAAU,iFAAsD,2BAAI,EAAKf,MAAM5E,0BAnErF,EAAK4E,MAAQ,CACX1G,UAAW,EAAKwF,MAAM8J,MAAMC,OAAOvP,UACnCI,aAAc,EAAKoF,MAAM8J,MAAMC,OAAOnP,aACtCiQ,eAAgB,KAChBC,SAAU,KACV3O,aAAc,GACdG,gBAAiB,GACjBwF,kBAAmB,KACnBiJ,UAAW,SAEb,EAAKE,oBAAsB7G,IAAMgH,YAZhB,E,sEAyFjB,OACE,oCAEE,kBAACpD,EAAA,EAAD,CAAWE,MAAQ,CAAEC,aAAc,OAAUkD,OAAK,GAChD,6BACA,kBAACzS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsN,GAAK,GAAKmF,GAAK,GAAKC,GAAK,GAAKC,GAAK,IACtC,kBAAC,IAAD,CACE9G,MAAQ,CAAE,CACRvD,KAAM,WACN4G,KAAM,aAER,CACE5G,KAAK,YAAD,OAAezF,KAAKwF,MAAM/E,cAC9B4L,KAAK,aAAD,OAAgBrM,KAAKwF,MAAM1G,YAEjC,CACE2G,KAAM,eAER,CACEA,KAAK,GAAD,OAAMzF,KAAKwF,MAAM5E,kBAEvB,CACE6E,KAAM,eAWZ,kBAACtI,EAAA,EAAD,CAAKuN,GAAK,GAAKD,GAAK,EAAImF,GAAK,EAAIC,GAAK,EAAIC,GAAK,GAC7C,kBAAChI,EAAA,EAAD,CAAQpL,QAAQ,oBAAoBiO,QAAU3K,KAAKsP,aAAe1E,KAAK,KAAKC,OAAK,GAAjF,QAGA,+BAGH7K,KAAKwF,MAAMY,kBACXpG,KAAKwF,MAAM2J,gBACZ,kBAAC,oBAAD,CACEY,eAAiB/P,KAAKwF,MAAM2J,eAE5BC,SAAWpP,KAAKwF,MAAM4J,SACtBY,YAAa,EACbC,YAAc,mBAEdtP,MAAQX,KAAKwF,MAAM5E,gBAEnBsP,IAAMlQ,KAAKuP,oBACXF,UAAYrP,KAAKwF,MAAM6J,kB,GAhJJtH,aAAzBiH,GACGmB,YAAcjU,EAuJR8S,U,2EC7EAoB,GAvFM,CACnBC,QAAS,SAAAC,GAAM,uBAAUA,EAAV,CAAkBC,gBAAiB,WAClDC,OAAQ,SAACF,EAAD,GAA0D,IAA/CtS,EAA8C,EAA9CA,KAAMyS,EAAwC,EAAxCA,WAcjBC,GAdyD,EAA5BC,UAA4B,EAAjBC,WAc7B5S,EAAK6S,OAUtB,OAAO,gBACFP,EADL,CAEEC,gBAvByB,KAwBzBO,WAAY,cACZC,YAAaL,EACbjE,aAAc,QAEduE,OAAQP,EAAa,cAAgB,aA4BzCQ,WAAY,SAACX,EAAD,GAAuB,IAAZtS,EAAW,EAAXA,KAGrB,OAAO,gBACFsS,EADL,CAGEC,gBAAiB,QACjBW,OAAQ,eACRJ,WAAY,cACZC,YAAa/S,EAAK6S,SAGtBM,gBAAiB,SAACb,EAAD,KAAWtS,KAAX,uBACZsS,IAGLc,iBAAkB,SAACd,EAAD,KAAWtS,KAAX,uBACbsS,KClDQe,GA7Ba,CAC1BhB,QAAS,SAAAC,GAAM,uBAAUA,EAAV,CAAkBC,gBAAiB,WAClDC,OAAQ,SAACF,GAIP,OAAO,gBACFA,EADL,CAEEC,gBAJyB,KAKzBS,OAAO,aAIXC,WAAY,SAACX,GAEX,OAAO,gBACFA,EADL,CAEEC,gBAAiB,QACjBW,OAAQ,uBAGZC,gBAAiB,SAACb,GAAD,uBACZA,IAELc,iBAAkB,SAACd,GAAD,uBACbA,KC+NQgB,G,YApOb,WAAYhN,GAAQ,IAAD,8BACjB,4CAAMA,KASRiN,kCAAoC,WAClC,EAAK9M,UAAS,SAACe,GACb,MAAO,CAAEgM,2BAA4BhM,EAAMgM,+BAZ5B,EAgBnBC,oCAAsC,WACpC,EAAKhN,UAAS,SAACe,GACb,MAAO,CACLkM,6BAA8BlM,EAAMkM,iCAnBvB,EAwBnBC,sCAAwC,WACtC,EAAKlN,UAAS,SAACe,GACb,MAAO,CACLoM,+BAAgCpM,EAAMoM,mCA3BzB,EAgCnBC,2BAA6B,SAAAC,GAC3B,EAAKxN,MAAMuN,2BAA2BC,GACtC,EAAKrN,SAAS,CAAEqN,iCAlCC,EAqClBC,yBAA2B,SAAAC,GACzB,EAAK1N,MAAMyN,yBAAyBC,GACpC,EAAKvN,SAAS,CAAEuN,+BAvCA,EA0ClBC,mCAAqC,WACnC,EAAKxN,UAAS,SAACe,GACb,MAAO,CAAE0M,8BAA+B1M,EAAM0M,iCAC7C,WACD,EAAK5N,MAAM2N,yCA9CG,EAkDlBE,gBAAkB,WAChB,EAAK1N,UAAS,SAACe,GACb,MAAO,CACLgM,2BAA2B,EAC3BI,+BAA+B,EAC/BF,6BAA6B,EAE7BQ,8BAA8B,MAE/B,WACD,EAAK5N,MAAM2N,yCA5DG,EAgElBG,cAAgB,WACd,EAAK3N,UAAS,SAACe,GACb,MAAO,CACLgM,2BAA2B,EAC3BI,+BAA+B,EAC/BF,6BAA6B,EAE7BQ,8BAA8B,MAE/B,WACD,EAAK5N,MAAM2N,yCAxEd,EAAKzM,MAAQ,CACX0M,8BAA8B,EAC9BV,2BAA2B,EAC3BI,+BAA+B,EAC/BF,6BAA6B,GANd,E,sEA+ER,IAAD,OAEP,OACE,oCACE,kBAACW,GAAA,EAAKhK,OAAN,KACE,kBAACiK,GAAA,EAAD,CAAY1V,UAAU,QACpB,kBAAC0V,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAW7K,KAAZ,KACE,kBAAC,IAAD,CAAiB5K,KAAO2V,QAI5B,kBAACC,GAAA,EAAD,CAEEjL,SAAW,SAAC1C,GAAO,EAAKR,MAAMoF,aAAa5E,EAAG,CAC5CoN,6BAA8B,EAAK1M,MAAM0M,6BACzCR,4BAA6B,EAAKlM,MAAMkM,4BACxCE,8BAA+B,EAAKpM,MAAMoM,iCAE5CrK,YAAY,iBACZmL,aAAW,SACXC,mBAAiB,WAEnB,kBAACC,GAAA,EAAD,CACEC,KAAO,QACPC,GAAKR,KAAWS,OAChBrW,QAAQ,oBACRiE,MAAQ,oCACN,kBAAC,IAAD,CAAiB9D,KAAOmW,IACtBrS,MAAM,qBAGV,kBAACsS,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAKyR,oCACf9Q,MAAM,4BAEN,kBAAC,IAAD,CAAiB9D,KAAOsW,MAJ1B,YAI8CnT,KAAKwF,MAAMkM,4BACrD,kBAAC,IAAD,CAAiBlF,MAAQ,CAAEqE,MAAM,QAAWhU,KAAOuW,MACjD,IAEN,kBAACH,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAK2R,sCACfhR,MAAM,8BAEN,kBAAC,IAAD,CAAiB9D,KAAOwW,MAJ1B,cAIiDrT,KAAKwF,MAAMoM,8BACxD,kBAAC,IAAD,CAAiBpF,MAAQ,CAAEqE,MAAM,QAAWhU,KAAOuW,MACjD,IAEN,kBAACH,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAKuR,kCACf5Q,MAAM,iCAEN,kBAAC,IAAD,CAAiB9D,KAAOyW,MAJ1B,oBAI8DtT,KAAKwF,MAAMgM,0BACrE,kBAAC,IAAD,CAAiBhF,MAAQ,CAAEqE,MAAM,QAAWhU,KAAOuW,MACjD,IAEN,kBAACH,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAKmS,gBACfxR,MAAM,iCAFR,OAIOX,KAAKwF,MAAMkM,6BAA+B1R,KAAKwF,MAAMoM,+BAAiC5R,KAAKwF,MAAMgM,0BACpG,kBAAC,IAAD,CAAiBhF,MAAQ,CAAEqE,MAAM,QAAWhU,KAAOuW,MACjD,IAEN,kBAACH,GAAA,EAASM,QAAV,MACA,kBAACN,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAKoS,cACfzR,MAAM,4BAFR,kBASFX,KAAKwF,MAAMkM,4BACT,oCACA,kBAACxU,EAAA,EAAD,CAAKN,UAAU,QACb,kBAACO,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIC,GAAK,EAAIC,GAAK,GAC5C,kBAACwC,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAW7K,KAAZ,KACE,kBAAC,IAAD,CAAiB5K,KAAOsW,SAI9B,kBAAChW,EAAA,EAAD,CAAKuN,GAAK,GAAKD,GAAK,GAAKmF,GAAK,GAAKC,GAAK,GAAKC,GAAK,IAChD,kBAAC,KAAD,CACEpL,MAAQ1E,KAAKwF,MAAMwM,0BACnBxK,SAAWxH,KAAK+R,yBAChByB,SAAO,EACPC,cAAY,EACZC,QAAU1T,KAAKsE,MAAMqP,cACrBrD,OAASF,GACT7I,YAAc,0BAKpB,GAEFvH,KAAKwF,MAAMoM,8BACT,oCACA,kBAAC1U,EAAA,EAAD,CAAKN,UAAU,QACb,kBAACO,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIC,GAAK,EAAIC,GAAK,GAC5C,kBAACwC,GAAA,EAAWC,QAAZ,KACE,kBAACD,GAAA,EAAW7K,KAAZ,KACE,kBAAC,IAAD,CAAiB5K,KAAOwW,SAI9B,kBAAClW,EAAA,EAAD,CAAKuN,GAAK,GAAKD,GAAK,GAAKmF,GAAK,GAAKC,GAAK,GAAKC,GAAK,IAChD,kBAAC,KAAD,CACEpL,MAAQ1E,KAAKwF,MAAMsM,4BACnBtK,SAAWxH,KAAK6R,2BAChB2B,SAAO,EACPC,cAAY,EACZC,QAAU1T,KAAKsE,MAAMsP,gBACrBtD,OAASe,GACT9J,YAAc,4BAKpB,GAEFvH,KAAKwF,MAAMgM,0BACR,oCACD,kBAAC1K,EAAA,EAAK+M,MAAN,CACExO,KAAK,WACLyO,QAAU9T,KAAKwF,MAAM0M,6BACrB1K,SAAWxH,KAAKiS,mCAChB1O,MAAQ,oCACN,kBAACuD,EAAA,EAAKW,KAAN,CACE7K,UAAU,aACV+D,MAAM,gCACNgK,QAAU3K,KAAKiS,oCAHjB,qCAUJ,S,GA7NSlK,aCwHTgM,OA9Df,SAA0CC,EAAOC,GAG/C,OAGF,SAAuCD,EAAOC,GAC5C,IAAM5S,EAAU,GACZ6S,EAAsB,EACtBC,EAAuB,EACvBC,EAAY,CAAEJ,MAAO,GAAIrK,KAAM,GAAI0K,QAAS,IAyBhD,OAxBAL,EAAM9R,SAAQ,SAACoS,GACb,IAAMC,EAuCV,SAA4BD,EAAML,GAQhC,OANmBA,EAAS5R,MAAK,SAACmS,GAChC,GAAKF,EAAKG,OAASD,EAAIC,OAAWH,EAAKI,KAAOF,EAAIE,IAChD,OAAOF,KA3CcG,CAAmBL,EAAML,QAEzBhZ,IAAnBsZ,KACFL,EAAsBD,EAASW,QAAQL,MACXJ,GAC1BC,EAAUJ,MAAMa,KAAKP,GACrBF,EAAUzK,MAAQ2K,EAAK3K,KAAO,IAC9ByK,EAAUC,QAAUE,EAAeF,UAGnCF,EAAuBD,EACvBE,EAAUzK,KAAKrK,OACf+B,EAAQwT,KAAKT,IACbA,EAAY,CAAEJ,MAAO,GAAIrK,KAAM,GAAI0K,QAAS,KAClCL,MAAMa,KAAKP,GACrBF,EAAUzK,MAAQ2K,EAAK3K,KAAO,IAC9ByK,EAAUC,QAAUE,EAAeF,aAIzChT,EAAQwT,KAAKT,GAGN/S,EAlCQyT,CAA6Bd,EAAOC,ICqBtCc,GA3BmB,SAACvT,EAAa4S,GAC9C,IAAMY,EAAyBZ,EAAU,GAAGK,MACtCQ,EAAwBb,EAAUA,EAAU7W,OAAS,GAAGmX,IAExDQ,EA5E4B,SAAE1T,EAAawT,EAAwBC,GAQzE,OAPgBzT,EAAYa,MAAK,SAAAgB,GAC/B,OACEA,EAAWoR,OAASO,GACpB3R,EAAWqR,KAAOO,KAwECE,CAA4B3T,EAAawT,EAAwBC,GACxF,GAAIC,EACF,OAAOA,EAGT,IAAME,EAlEiC,SAAE5T,EAAawT,EAAwBC,GAQ9E,OAPgBzT,EAAYa,MAAK,SAAAgB,GAC/B,OACEA,EAAWoR,OAASO,GACpB3R,EAAWoR,OAASQ,KA8DDI,CAAiC7T,EAAawT,EAAwBC,GAC7F,GAAIG,EACF,OAAOA,EAGT,IAAME,EAxD+B,SAAE9T,EAAawT,EAAwBC,GAQ5E,OAPgBzT,EAAYa,MAAK,SAAAgB,GAC/B,OACEA,EAAWqR,KAAOM,GAClB3R,EAAWqR,KAAOO,KAoDDM,CAA+B/T,EAAawT,EAAwBC,GACzF,GAAIK,EACF,OAAOA,EAGT,IAAME,EA9C4B,SAAEhU,EAAawT,EAAwBC,GAQzE,OAPgBzT,EAAYa,MAAK,SAAAgB,GAC/B,OACEA,EAAWoR,OAASO,GACpB3R,EAAWqR,KAAOO,KA0CEQ,CAA4BjU,EAAawT,EAAwBC,GACzF,OAAIO,IAIG,G,+BCzBME,G,iLA5DH,IACAC,EAA+B3V,KAAKsE,MAApCqR,2BAERA,EAA2BC,YAAc,SACzCD,EAA2BE,YAAc,SACzCF,EAA2B5E,YAAc,YACzC4E,EAA2BG,QAAU,QAGrC,IAAIC,EAAiB,GAerB,OAdI/V,KAAKsE,MAAM4N,6BACb6D,EAAiB/V,KAAKsE,MAAMqR,2BAGvBA,EAA2B1L,iBACvB0L,EAA2B1L,QAIlC8L,EAAeC,YAAc,yBAC7BD,EAAejF,WAAa,0BAK9B,kBAAC5T,EAAA,EAAD,CACEsP,MAAK,gBAAQuJ,GACbnZ,UAAU,YACVqZ,sBAAsBjW,KAAKsE,MAAM4R,iCAEjC,kBAAC/Y,EAAA,EAAD,CAAKuN,GAAK,GAAKD,GAAK,GAAKmF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,EAC9CtD,MAAQ,CAAEwE,OAAQ,UAAWoF,MAAO,QACpCxZ,UAAY,gBACZ+D,MAAK,UAAOX,KAAKsE,MAAM+R,YAAYC,cAA9B,eAAoDC,yBAAcvW,KAAKsE,MAAM8P,UAAU,GAAGK,SAC/F,0BACE7X,UAAY,CAAE0T,KAAO+D,QAAS/D,KAAOkG,aAAc,YAAaC,KAAK,KACrEC,aAAa1W,KAAKsE,MAAM8P,UAAU,GAAGK,MACrCkC,SAAS,KACT3W,KAAKsE,MAAM+R,cAef,kBAAClZ,EAAA,EAAD,CAAKuN,GAAK,GAAKD,GAAK,GAAKmF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,IAC7C9P,KAAKsE,MAAMsS,oB,GAxDE7O,aCRT8O,GAJW,SAACC,GACzB,OAAOA,EAAOC,QAAQ,cAAe,IAAIhN,eCuD5BiN,G,2MApDbC,sBAAwB,SAACxC,GAGvB,IAFA,IAAIyC,EAAY,GAEP1Z,EAAI,EAAGA,EAAIiX,EAAOjX,IACzB0Z,GAAS,UAAQ1Z,EAAR,KAGX,GAAIiX,EAAQ,EAAI,EAAG,CAEjB,IAAM0C,EAAMC,KAAKC,MAAO5C,EAAQ,EAAK,GAAO,EAC5CyC,GAAS,WAASE,KAAKC,MAAM5C,GAAS0C,GAGxC,OAAOD,G,wEAEC,IAAD,EACiClX,KAAKsE,MAArCpF,EADD,EACCA,aAAcmV,EADf,EACeA,QAASC,EADxB,EACwBA,KAI/B,OACE,0BACE3T,MAAK,gBAAa2T,EAAKG,MAAlB,kBAAmCH,EAAKI,KAC7C4C,kBAAoBtX,KAAKiX,sBAAuB3C,EAAKG,OACrD7X,UAAY,CAAE,SAEZ6Z,KAAK,KACPC,aAAapC,EAAKG,MAElB8C,YAAYV,GAAkBvC,EAAK3K,MAEnC6N,WAAWlD,EAAKI,IAChB+C,qBAAqBvY,EACrBwY,eAAerD,EACfnI,IAAM,OAASoI,EAAKhU,GAAK,IAAMgU,EAAKI,IAEpCiD,KAAK,SACLC,eAAa,QACbC,UAAY7X,KAAKsE,MAAMwT,oBAEtBxD,EAAK3K,KAAM,S,GAzCD5B,a,oBCqEJgQ,G,2MAzDbC,qBAAuB,WAErB,EAAK1T,MAAM0T,qBAAqB,EAAK1T,MAAM1E,kBADvC+J,I,wEAII,IAGJsO,EAHG,OAKP,GAAIjY,KAAKsE,MAAMqP,cAAe,CAC5B,IAAIpQ,EAAQvD,KAAKsE,MAAMqP,cAActR,MAAK,SAACkB,GAEzC,OAAOA,EAAMjD,KAAO,EAAKgE,MAAM4T,qBAI5B3U,IACHA,EAAQvD,KAAKsE,MAAMqP,cAAc,IAGnCsE,EAAiB,kBAACE,GAAA,EAAD,CAAgBC,WAAY,EAAOC,QAAQ,QAAQC,UAAU,SAC5EC,QACE,kBAACC,GAAA,EAAD,CAASlY,GAAG,iBACV,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKyS,GAAK,EAAIpD,MAAQ,CAAE+D,gBAAiBhN,EAAMsN,MAAO4H,WAAW,SACjE,kBAACtb,EAAA,EAAD,KACE,kBAAC,IAAD,CAAiBN,KAAOsW,MAD1B,KACuC5P,EAAMA,OAE7C,kBAACpG,EAAA,EAAD,CAAKyS,GAAK,EAAIpD,MAAQ,CAAEkM,YAAY,OAClC/N,QAAU,WAAO,EAAKrG,MAAMqU,uBAAuB,EAAKrU,MAAM1E,gBAC9D,kBAAC,IAAD,CAAiB/C,KAAO+b,QAG5B,6BACA,kBAAC,IAAD,CAAiB/b,KAAOgc,IACtBlO,QAAU3K,KAAKgY,uBAbnB,MAcShY,KAAKsE,MAAMwU,eAClB,6BACA,kBAAC,IAAD,CAAiBjc,KAAOkc,IACtBpO,QAAU3K,KAAKgY,yBAKrB,0BAAMxL,MAAQ,CAAEwM,aAAa,SAAD,OAAYzV,EAAMsN,MAAlB,WAAqCjU,UAAY,aAAeoD,KAAKsE,MAAM0P,QAK3G,OAAQ,oCACLiE,O,GArDgClQ,aCQxBkR,OAff,SAA2CC,EAAcC,EAAiBC,GACxE,IAAIC,EAAoB,GAWxB,OAVKH,IACHG,EAAoB,CAAEpP,QAAS,SAE5BkP,IACHE,EAAoB,CAAEpP,QAAS,SAE5BmP,IACHC,EAAoB,CAAEpP,QAAS,SAG1BoP,GCoBMC,GAR2B,SAACC,EAAgC/X,GACzE,OAAO+X,EAA+BxX,KAAI,SAAAqS,GAGxC,OAFAA,EAAUJ,MAnB6B,SAACA,EAAOxS,GACjD,OAAOwS,EAAMjS,KAAI,SAACuS,GAChB,IAAMkF,EAfqB,SAAEhY,EAAaiY,EAAeC,GAU3D,OARgBlY,EAAYa,MAAK,SAAAgB,GAC/B,OACEoW,GAAiBpW,EAAWoR,OAC1BiF,GAAerW,EAAWqR,OAUJiF,CAAuBnY,EAAa8S,EAAKG,MAAOH,EAAKI,KAU/E,OATI8E,EACFlF,EAAKjR,WAAamW,SAKXlF,EAAKjR,WAGPiR,KAOWsF,CAAmCxF,EAAUJ,MAAOxS,GAE/D4S,MCwHIyF,G,2MApIbC,uBAAyB,SAAAhV,GACT,UAAVA,EAAEoH,KACJ,EAAK5H,MAAMyV,oBAAoBjV,I,EAInCgT,mBAAqB,SAAAhT,GACL,UAAVA,EAAEoH,KACJ,EAAK5H,MAAM0V,gBAAgBlV,I,wEAKrB,IACJ8R,EADG,OAEHjB,EAA6B,GAe3B4D,EAAiCxF,GACrC/T,KAAKsE,MAAM6K,eAAe6E,MAC1BhU,KAAKsE,MAAM6K,eAAe8K,YAQtBC,EAJ2CZ,GAAkCC,EAAgCvZ,KAAKsE,MAAM9C,aAIlEO,KAAI,SAACqS,EAAWlJ,GAC1E,IAAMiP,EAA+BpF,GAA0B,EAAKzQ,MAAM9C,YAAa4S,EAAUJ,OAE3FkC,EAAoD9B,EAAUzK,KAtD1DoN,QAAQ,cAAe,IAAIhN,cAuD/BmP,EAAehD,EAAgCtY,SAAS,EAAK0G,MAAM8V,aAAarQ,eAClFoP,GAAkB,EACgC,IAAlD,EAAK7U,MAAMwN,4BAA4BvU,OAGrC,EAAK+G,MAAMwN,4BAA4BzP,MAAK,SAACgY,GAAS,OAAOA,EAAI9W,QAAU6Q,EAAUC,aACvF8E,GAAkB,GAIpBA,GAAkB,EAGpB,IAAIC,GAAgB,EAkDpB,OAjDoD,IAAhD,EAAK9U,MAAM0N,0BAA0BzU,OAEnC,EAAK+G,MAAM0N,0BAA0B3P,MAAK,SAACiY,GAAQ,OAAOA,EAAGha,KAAO6Z,EAA6BtZ,aACnGuY,GAAgB,GAIlBA,GAAgB,EAElBzD,EAA6BsD,GAAkCC,EAAcC,EAAiBC,GAK9FxC,EAAgBxC,EAAUJ,MAAMjS,KAAI,SAACuS,EAAMpJ,GACzC,IACMqP,EAAU,kBAAC,GAAD,CACdrb,aAAe,EAAKoF,MAAMpF,aAC1BmV,QAAUD,EAAUC,QACpBnI,IAAM,QAAUhB,EAChBoJ,KAAOA,EACPwD,mBAAqB,SAAAhT,GACnB,MAAiB,UAAVA,EAAEoH,IAAkB,EAAK5H,MAAM0V,gBAAgBlV,GAAK,QAqB/D,OAjBIwP,EAAKjR,WAEE,kBAAC,GAAD,CACP6I,IAAM,UAAYhB,EAClB8I,MAAQuG,EACR5G,cAAgB,EAAKrP,MAAMqP,cAC3BuE,kBAAoB5D,EAAKjR,WAAWxC,QACpCjB,aAAe0U,EAAKjR,WAAW/C,GAC/BwY,eAAiBxE,EAAKjR,WAAWmX,KACjC7B,uBAAyB,EAAKrU,MAAMqU,uBACpCX,qBAAuB,EAAK1T,MAAM0T,uBAI3BuC,KAUX,kBAAC,GAAD,CACErI,6BAA+B,EAAK5N,MAAM4N,6BAC1CyD,2BAA6BA,EAC7BzJ,IAAM,YAAchB,EACpBgL,gCAAkCA,EAClCG,YAAcjC,EAAUC,QACxBD,UAAYA,EAAUJ,MACtB8F,uBAAyB,SAAAhV,GACvB,MAAiB,UAAVA,EAAEoH,IAAkB,EAAK5H,MAAMyV,oBAAoBjV,GAAK,MAEjE8R,cAAgBA,OAKtB,OACE,oCACGsD,O,GArIgBnS,a,oBCRnB0S,GAAY,CAChB,OAAU,UAEV,YAAe,UACf,YAAe,UACf,SAAY,UAIZ,KAAQ,UAIR,MAAS,UAET,WAAc,UACd,MAAS,UACT,UAAa,UACb,UAAa,UACb,UAAa,UACb,MAAS,UAGT,QAAW,UAEX,SAAY,UACZ,SAAY,UACZ,cAAiB,UACjB,SAAY,UACZ,UAAa,UAEb,UAAa,UACb,YAAe,UACf,eAAkB,UAClB,WAAc,UACd,QAAW,UACX,WAAc,UACd,aAAgB,UAChB,cAAiB,UACjB,cAAiB,UACjB,cAAiB,UACjB,cAAiB,UACjB,WAAc,UACd,KAAQ,UACR,QAAW,UACX,QAAW,UACX,WAAc,UACd,UAAa,UAEb,YAAe,UACf,QAAW,UACX,UAAa,UAEb,UAAa,UACb,KAAQ,UACR,KAAQ,UACR,MAAS,UACT,KAAQ,UACR,SAAY,UACZ,QAAW,UACX,UAAa,UACb,OAAU,UACV,MAAS,UACT,MAAS,UACT,cAAiB,UACjB,SAAY,UACZ,UAAa,UACb,aAAgB,UAChB,UAAa,UACb,WAAc,UAEd,qBAAwB,UACxB,UAAa,UACb,WAAc,UACd,UAAa,UACb,UAAa,UACb,YAAe,UACf,cAAiB,UACjB,aAAgB,UAChB,eAAkB,UAClB,eAAkB,UAClB,eAAkB,UAClB,YAAe,UACf,KAAQ,UACR,WAAc,UACd,UAAa,UACb,MAAS,UACT,QAAW,UACX,OAAU,UACV,WAAc,UACd,aAAgB,UAChB,aAAgB,UAChB,eAAkB,UAClB,gBAAmB,UACnB,kBAAqB,UACrB,gBAAmB,UACnB,gBAAmB,UACnB,aAAgB,UAChB,UAAa,UACb,UAAa,UACb,SAAY,UAEZ,KAAQ,UACR,QAAW,UACX,MAAS,UACT,UAAa,UACb,OAAU,UACV,UAAa,UACb,OAAU,UACV,cAAiB,UACjB,UAAa,UACb,cAAiB,UACjB,cAAiB,UACjB,WAAc,UACd,UAAa,UACb,KAAQ,UACR,KAAQ,UACR,KAAQ,UACR,WAAc,UACd,OAAU,UACV,cAAiB,UACjB,IAAO,UACP,UAAa,UACb,UAAa,UACb,YAAe,UACf,OAAU,UACV,WAAc,UACd,SAAY,UACZ,SAAY,UACZ,OAAU,UACV,OAAU,UACV,QAAW,UACX,UAAa,UACb,UAAa,UACb,UAAa,UACb,KAAQ,UACR,YAAe,UACf,UAAa,UACb,IAAO,UACP,KAAQ,UACR,QAAW,UACX,OAAU,UACV,UAAa,UACb,OAAU,UACV,MAAS,UAGT,YAAe,UACf,WAAc,UACd,iBAAoB,WAMhBC,GAAiB1W,OAAOC,OAAOD,OAAO2W,KAAKF,IAC9CG,OAAO,EAAG,KAQPC,GAAgB,GACtB,IAAK,IAAI3O,MAAOuO,GACdI,GAAchG,KAAK,CACjBnQ,MAAOwH,GACP3I,MAAM2I,GACN2E,MAAO4J,GAAUvO,MAUrB,IAAI4O,IAAW,EACTC,GAAgBL,GAAend,OAC/Byd,GAAc,WAQlB,OAPIF,GAAUC,GACZD,IAAW,EAGXA,GAAU,EAGLJ,GAAeI,K,oBC5CTG,G,YAzIb,WAAY3W,EAAO4K,GAAU,IAAD,8BAC1B,4CAAM5K,EAAO4K,KAUfgM,qBAAsB,WACpB,EAAKzW,SAAS,CAAEoM,MAAOmK,QAZG,EAe5BG,gCAAkC,SAACtK,GACjC,EAAKpM,SAAS,CAAEoM,MAAOuK,KAAOvK,EAAMwK,KAAM5V,UAhBhB,EAmB5B6V,wBAA0B,SAACxW,GACzB,GAAIA,GAAKA,EAAE9H,QAAU8H,EAAE9H,OAAO0H,MAAO,CACnC,IAAM6W,EAAazW,EAAE9H,OAAO0H,MAC5B,EAAKD,SAAS,CAAEoM,MAAOuK,KAAOI,MAAMD,GAAcH,KAAOG,GAAY9V,OAAS8V,SAEvEzW,GAAKA,EAAE9H,QAA6B,KAAnB8H,EAAE9H,OAAO0H,OACjC,EAAKD,SAAS,CAAEoM,MAAO,MAzBC,EA6B5B4K,wBAA0B,SAAA5K,GACxB,EAAKpM,SAAS,CAAEoM,MAAOA,EAAMA,SA9BH,EAiC5BvH,WAAa,WAEP8R,KAAOI,MAAM,EAAKhW,MAAMqL,OAEA,KAArB,EAAKrL,MAAMjC,OACd,EAAKe,MAAMoX,aAAa,CACtBhX,MAAO,EAAKc,MAAMqL,MAClBtN,MAAO,EAAKiC,MAAMjC,MAClBsN,MAAO,EAAKrL,MAAMqL,MAClBjM,YAAa,EAAKY,MAAMZ,YACxBtE,GAAI,EAAKkF,MAAM3E,UAGjB,EAAKyD,MAAM2D,eAGXjF,MAAM,8CAIRA,MAAM,yBAlDR,EAAKwC,MAAQ,CACXqL,MAAO,EAAKvM,MAAMuM,MAClBtN,MAAO,EAAKe,MAAMf,MAClBqB,YAAa,EAAKN,MAAMM,YACxB/D,QAAS,EAAKyD,MAAMzD,SAPI,E,sEAyDlB,IAAD,OACP,OACE,oCACE,kBAACiG,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAYC,UAAU,kBACpB,kBAACL,EAAA,EAAKM,MAAN,oBACA,kBAACN,EAAA,EAAKO,QAAN,CACEhC,KAAK,OACLkC,YAAY,mBACZoU,aAAe3b,KAAKwF,MAAMjC,MAC1BqY,QAAU,SAAC9W,GAAO,EAAKL,SAAS,CAAElB,MAAOuB,EAAE9H,OAAO0H,WAEpD,kBAACoC,EAAA,EAAKW,KAAN,CAAW7K,UAAU,cAArB,wBAIF,kBAACkK,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBACpB,kBAACL,EAAA,EAAKM,MAAN,0BACA,kBAACN,EAAA,EAAKO,QAAN,CACEhC,KAAK,OACLkC,YAAY,0BACZoU,aAAe3b,KAAKwF,MAAMZ,YAC1BkO,GAAG,WAAW+I,KAAK,IACnBD,QAAU,SAAC9W,GAAQ,EAAKL,SAAS,CAAEG,YAAaE,EAAE9H,OAAO0H,WAE3D,kBAACoC,EAAA,EAAKW,KAAN,CAAW7K,UAAU,cAArB,+BAKF,kBAACkK,EAAA,EAAKI,MAAN,CAAYC,UAAU,qBACpB,kBAACL,EAAA,EAAKM,MAAN,cACA,kBAAClK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,GAC5C,kBAAChI,EAAA,EAAD,CAAQ6C,QAAU3K,KAAKkb,qBAAuBxe,QAAQ,QAAQkO,KAAK,MACjE,kBAAC,IAAD,CAAiB/N,KAAOif,QAG5B,kBAAC3e,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,GAC5C,kBAAChJ,EAAA,EAAKO,QAAN,CACE3C,MAAQ1E,KAAKwF,MAAMqL,MACnBxL,KAAK,OACLkC,YAAY,IACZC,SAAWxH,KAAKsb,2BAGpB,kBAACne,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,EAC5CtD,MAAQ,CACN+D,gBAAiBvQ,KAAKwF,MAAMqL,MAC5BK,OAAQ,QACR2E,YAAY,SACZ9E,YAAa,OACb+E,QAAS,QAIf,kBAAC5Y,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKuN,GAAK,GAAKD,GAAK,GAAKmF,GAAK,GAAKuG,GAAK,GAAKrG,GAAK,IAChD,kBAAChJ,EAAA,EAAKW,KAAN,CAAW7K,UAAU,cAArB,kHAGA,kBAAC,gBAAD,CACEwZ,MAAQ,OACRvF,MAAQ7Q,KAAKwF,MAAMqL,MACnBkL,SAAW,OACXC,iBAAmBhc,KAAKmb,gCAExBc,OAASvB,QAKjB,kBAAC5S,EAAA,EAAD,CAAQpL,QAAQ,UAAUiO,QAAU3K,KAAKsJ,YAAzC,c,GAlIcvB,aCgDTmU,G,YAnDb,WAAY5X,EAAO4K,GAAU,IAAD,8BAC1B,4CAAM5K,EAAO4K,KAWfjH,YAAc,WACZ,EAAKxD,SAAS,CACZ0D,MAAM,KAdkB,EAsB5BgU,WAAa,WACX,EAAK1X,SAAS,CAAE0D,MAAM,KApBtB,EAAK3C,MAAQ,CACX2C,MAAM,EACN0I,MAAO,EAAKvM,MAAMuM,MAClBtN,MAAO,EAAKe,MAAMf,MAClBqB,YAAc,EAAKN,MAAMM,YACzB/D,QAAS,EAAKyD,MAAMzD,SARI,E,sEA2B1B,OACE,oCACE,kBAACiH,EAAA,EAAD,CAAQpL,QAAQ,OAAOkO,KAAK,KAAKD,QAAU3K,KAAKmc,WAAatR,OAAK,GAC/D7K,KAAKsE,MAAM8X,SAEd,kBAACxU,EAAA,EAAD,CAAOO,KAAOnI,KAAKwF,MAAM2C,KAAOC,OAASpI,KAAKiI,aAC5C,kBAACL,EAAA,EAAMS,OAAP,CAAcC,aAAW,GACvB,kBAACV,EAAA,EAAMW,MAAP,KAAa,kBAAC,IAAD,CAAiB1L,KAAOsW,MAArC,aAEF,kBAACvL,EAAA,EAAMa,KAAP,KACE,kBAAC,GAAD,CACEiT,aAAe1b,KAAKsE,MAAMoX,aAC1BnY,MAAQvD,KAAKsE,MAAMf,MACnBqB,YAAc5E,KAAKsE,MAAMM,YACzBiM,MAAQ7Q,KAAKsE,MAAMuM,MACnBhQ,QAAUb,KAAKsE,MAAMzD,QACrBoH,YAAcjI,KAAKiI,qB,GA5CRF,aC8JVsU,G,YAnJb,WAAY/X,GAAQ,IAAD,8BACjB,4CAAMA,KAQRgY,YAAc,SAAChc,EAAIwE,IAGA,IADAyX,QAAQ,iEAEvB,EAAKjY,MAAMkY,cAAclc,GAEzB0C,MAAM,+BAfS,EAsBnByZ,UAAY,SAACnc,EAAIwE,GACf,IAAM4X,EAAc,EAAKpY,MAAMqP,cAAcxQ,QAAO,SAACI,GACnD,OAAOA,EAAMjD,KAAOA,KAGtBzE,QAAQC,IAAI,cAAe4gB,IA3BV,EA8BnBhB,aAAe,SAACiB,GAEVA,EAASrc,GACX,EAAKgE,MAAMsY,cAAcD,GAIzB,EAAKrY,MAAMuY,cAAcF,IArCV,EAyCnBG,eAAiB,WACfjhB,QAAQC,IAAI,EAAK0J,MAAMuX,mBACvB,EAAKtY,UAAS,SAACe,GACb,MAAO,CACLuX,mBAAoBvX,EAAMuX,uBA1C9B,EAAKvX,MAAQ,CAEXuX,mBAAmB,GALJ,E,sEAkDT,IAGJC,EAHG,OAKHhd,KAAKsE,MAAMqP,gBAEbqJ,EAAoBhd,KAAKsE,MAAMqP,cAAc5R,KAAI,SAACwB,EAAO2H,GACvD,OAAQ,kBAAC+R,GAAA,EAAU/J,KAAX,CAAgB1G,MAAQ,CAAE4J,MAAO,QAAWlK,IAAM,SAAWhB,GACnE,kBAAChO,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,EAC5CtD,MAAQ,CAAE+D,gBAAiBhN,EAAMsN,OACjClQ,MAAQ4C,EAAMA,QAGhB,kBAACpG,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,EAE5CnP,MAAQ4C,EAAMA,OAEbA,EAAMA,OAGT,kBAACpG,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,GAGb,YAA9BvM,EAAMA,MAAMwG,cACX,kBAAC,GAAD,CACE8G,MAAQtN,EAAMsN,MACdtN,MAAQA,EAAMA,MACdqB,YAAcrB,EAAMqB,YACpB/D,QAAU0C,EAAMjD,GAChB6H,KAAO,EAAK3C,MAAMuX,kBAClBrB,aAAe,EAAKA,aACpBU,QAAU,kCAAO,kBAAC,IAAD,CAAiBvf,KAAOkc,SACtC,kBAACjR,EAAA,EAAD,CAAQnH,MAAQ,aAAejE,QAAQ,OAAOkO,KAAK,KAAKsS,UAAQ,GACnE,kBAAC,IAAD,CAAiBrgB,KAAOkc,MADrB,MAGT,kBAAC5b,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,GAC5C,kBAAChI,EAAA,EAAD,CAAQnH,MAAQ,eAAiBjE,QAAQ,OAAOkO,KAAK,KACnDD,QAAU,SAAC7F,GAAO,EAAKwX,YAAY/Y,EAAMjD,GAAIwE,IAC7CoY,SAAyC,YAA9B3Z,EAAMA,MAAMwG,eACvB,kBAAC,IAAD,CAAiBlN,KAAOsgB,SAK9B,kBAACjgB,EAAA,EAAD,KAEE,kBAACC,EAAA,EAAD,CAAKuN,GAAK,EAAID,GAAK,EAAImF,GAAK,EAAIuG,GAAK,EAAIrG,GAAK,EAC5ClT,UAAU,gBACV+D,MAAQ4C,EAAMA,QAEhB,kBAACpG,EAAA,EAAD,CAAKuN,GAAK,GAAKD,GAAK,GAAKmF,GAAK,GAAKuG,GAAK,GAAKrG,GAAK,IAChD,kBAAChJ,EAAA,EAAKW,KAAN,CAEE9G,MAAQ4C,EAAMqB,aACbrB,EAAMqB,oBAQnB,IAAMwY,EAAc,kBAACH,GAAA,EAAD,CAAWzQ,MAAQ,CAAE6Q,OAAQ,OAAQjH,MAAO,OAAQkH,UAAW,SAAUC,UAAW,WAAcP,GAItH,OAAQ,oCAELhd,KAAKsE,MAAMkZ,iBAAmB,oCAE7B,kBAACnL,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKhK,OAAN,KACE,kBAAC,IAAD,CAAiBxL,KAAO4gB,MAD1B,IACsC,kBAAC,IAAD,CAAiB5gB,KAAO6gB,MAD9D,WAGEN,EACF,kBAAC/K,GAAA,EAAKxK,OAAN,CAAajL,UAAU,cACrB,kBAAC,GAAD,CACEiU,MAAQmK,KACRzX,MAAQ,GACRqB,YAAc,GACd/D,QAAU,KACVsH,KAAOnI,KAAKwF,MAAMuX,kBAClBrB,aAAe1b,KAAK0b,aACpBU,QAAU,kBAACtU,EAAA,EAAD,CAAQpL,QAAQ,oBAAoBmO,OAAK,GAAC,kBAAC,IAAD,CAAiBhO,KAAOsW,MAAlE,0BAIZ,Q,GA7IapL,aCEV4V,GAZM,SAACC,EAAIC,GACxB,IAAIC,EAEJ,OAAO,WACL,IAAMC,EAAOC,UACbC,aAAaH,GACbA,EAAQ5Q,YAAW,WACjB0Q,EAAGM,MAAM,KAAMH,KACdF,KC8BQM,OAnCf,SAAuCrZ,GAGrC,IAAK5J,OAAOkjB,eAAeC,YAAa,CACtC,IAIMrK,EAJgB9Y,OAAOkjB,eAAeE,WAAW,GAAGC,gBAI9BC,iBAAiB,UAC7C,GAAqB,IAAjBxK,EAAMzW,OAER,MAAO,CACLkX,MAAOgK,WAAWzK,EAAM,GAAG0K,QAAQjK,OACnCC,IAAK+J,WAAWzK,EAAMA,EAAMzW,OAAS,GAAGmhB,QAAQhK,MAOlD,IAAMJ,EAAOpZ,OAAOkjB,eAAeO,WAAWC,cAC9C,MAAuB,UAAnBtK,EAAK1X,WACA,CACL6X,MAAOgK,WAAWnK,EAAKoK,QAAQjK,OAC/BC,IAAK+J,WAAWnK,EAAKoK,QAAQhK,MAQrC,OAAO,GCVT,SAASmK,GAAyBC,GAChC,IAAM7S,EAAS,GACTlK,EAAM,IAAIgd,IAFuB,uBAGvC,YAAmBD,EAAnB,+CAA0B,CAAC,IAAhBzV,EAAe,QACnBtH,EAAIid,IAAI3V,EAAKgL,WAChBtS,EAAIkd,IAAI5V,EAAKgL,SAAS,GACtBpI,EAAO4I,KAAK,CACVnQ,MAAO2E,EAAKgL,QACZ9Q,MAAO8F,EAAKgL,YARqB,kFAavC,OAAOpI,E,IAGHiT,G,YAEJ,WAAY5a,GAAQ,IAAD,8BACjB,4CAAMA,KAiBR2K,kBAAoB,WACN,EAAKC,QACb/N,kBAAkB,EAAKmD,MAAMxF,UAAW,EAAKwF,MAAMpF,cACpD4G,MAAK,SAAA1F,GAEJ,EAAKqE,SAAS,CACZjD,YAAapB,EAAKoB,kBAxBP,EA6BnBqb,cAAgB,SAACF,GACH,EAAKzN,QACbiQ,YAAY,EAAK7a,MAAMxF,UAAW6d,GAEnC7W,MAAK,SAAA1F,GACJ,EAAKqE,SAAS,CACZkP,cAAevT,EAAKkB,aAnCT,EAwCnBsb,cAAgB,SAACwC,GACf,IAAM1T,EAAM,EAAKwD,QACjBrT,QAAQC,IAAI,eAAgBsjB,GAE5B1T,EAAI2T,YAAY,EAAK/a,MAAMxF,UAAWsgB,EAAa9e,GAAI8e,GAEpDtZ,MAAK,SAAA1F,GACJ,EAAKqE,SAAS,CACZkP,cAAevT,EAAKkB,aAhDT,EAqDnBkb,cAAgB,SAAC8C,GACH,EAAKpQ,QACbqQ,YAAY,EAAKjb,MAAMxF,UAAWwgB,GAEnCxZ,MAAK,SAAA1F,GACJ,EAAKqE,SAAS,CACZkP,cAAevT,EAAKkB,aA3DT,EAiEnByY,oBAAqB,SAAAjV,GACnB,GAAIA,EAAE9H,OAAOwiB,UAAUC,SAAS,YAAa,CAC3C,IAAMlF,EAASzV,EAAE9H,OACjB,EAAK0iB,SAASlQ,QAAQmQ,YAAcpF,EAAOmE,QAAQjK,MACnD,EAAKiL,SAASlQ,QAAQoQ,SArEP,EAyEnB5F,gBAAkB,SAAAlV,GAChB,GAA2B,UAAvBA,EAAE9H,OAAOJ,UAAwB,CACnC,IAAM2d,EAASzV,EAAE9H,OACjB,EAAK0iB,SAASlQ,QAAQmQ,YAAcpF,EAAOmE,QAAQjK,MACnD,EAAKiL,SAASlQ,QAAQoQ,SA7EP,EAiFnB3N,mCAAqC,WACnC,EAAKxN,UAAS,SAACe,GACb,MAAO,CAAE0M,8BAA+B1M,EAAM0M,kCAnF/B,EAuFnBH,yBAA2B,SAACC,GAC1B,EAAKvN,SAAS,CACZuN,+BAzFe,EA6FnBH,2BAA6B,SAACC,GAC5B,EAAKrN,SAAS,CACZqN,iCA/Fe,EAmGnBpI,aAAe,SAAC5E,EAAG+a,GAEjB,GAAuB,KAAnB/a,EAAE9H,OAAO0H,MAAc,CACzB,IAAM0V,EAAetV,EAAE9H,OAAO0H,MAC9B,EAAKD,SAAS,CAAE2V,aAAcA,EAAarQ,gBAE3C4T,GAAa,EAAKmC,eAAgB1F,GAAe,SAGvB,KAAnBtV,EAAE9H,OAAO0H,OAChB,EAAKD,SAAS,CACZsb,oBAAqB,GACrB3F,aAAc,MA/GD,EAoHnB0F,eAAiB,SAAA1F,GACf,IAAM4F,EAAoB5F,EAAarQ,cAAczK,OAAO2gB,MAAM,KAC5DC,EAAI,2CAAwCF,EAAkBvJ,KAAK,KAA/D,MAEJ0J,EAAmBH,EAAkBje,KAAI,SAACqe,EAAYlV,GAC1D,IAAI/K,EAAG,UAAO+f,EAAP,0CAA+CE,EACnDrW,cACAzK,OAFI,MAOP,OAJI4L,EAAQ8U,EAAkBziB,OAAS,IACrC4C,GAAO,MAGFA,KAIHkgB,EAA+BL,EAAkBje,KAAI,SAACqe,EAAYlV,GACtE,IAAI/K,EAAG,UAAO+f,EAAP,iDAAsDE,EAC1DrW,cACAzK,OAFI,MAOP,OAJI4L,EAAQ8U,EAAkBziB,OAAS,IACrC4C,GAAO,MAGFA,KAET,EAAKsE,SAAS,CACZsb,oBAAqBI,EAAiB1J,KAAK,KAC3C6J,gCAAiCD,EAA6B5J,KAAK,QAhJpD,EAoJnB8J,uBAAyB,SAACzb,GACxB,IAAM4G,EAAM,EAAKwD,QACXsR,EAAU1b,EAAE9H,OAEZyjB,EAAYtC,KAClB,GAAIsC,EAAW,CAAC,IACNjf,EAAgB,EAAKgE,MAArBhE,YACRif,EAAU5f,QAAU2f,EAAQ9B,QAAQ7d,QACpC4f,EAAUjG,KAAO,GACjB,IAAMkG,EAAgBD,EACtB5kB,QAAQC,IAAI,gBAAiB4kB,GAC7BhV,EAAIiV,iBAAiB,EAAKrc,MAAMxF,UAAW,EAAKwF,MAAMpF,aAAcwhB,GACjE5a,MAAK,SAAA1F,GACJ,IAAMwgB,EAA0BxgB,EAAKiD,WACrCxH,QAAQC,IAAI,0BAA2B8kB,GAKvC,IAAMC,EAAoBziB,KAAK0iB,MAAM1iB,KAAKC,UAAUmD,IAGpDqf,EAAkBhM,KAAK+L,GAEvB,EAAKnc,SAAU,CAAEjD,YAAaqf,YAKlC7d,MAAM,qDAjLS,EAqLnB2V,uBAAyB,SAAC/Y,GACxB,IAAM8L,EAAM,EAAKwD,QAEX2R,EADkB,EAAKrb,MAArBhE,YAC8B2B,QAAO,SAACE,GAC5C,OAAOA,EAAW/C,KAAOV,KAGrBmhB,EAA2C3iB,KAAK0iB,MAAM1iB,KAAKC,UAAUwiB,IAC3EnV,EAAIsV,iBAAiB,EAAK1c,MAAMxF,UAAW,EAAKwF,MAAMpF,aAAcU,GACjEkG,MAAK,SAAA1F,GACJ,EAAKqE,SAAU,CAAEjD,YAAauf,QA/LjB,EAqMnB/I,qBAAuB,SAACpY,GACtB,IAAM8L,EAAM,EAAKwD,QACT1N,EAAgB,EAAKgE,MAArBhE,YACFyf,EAAsBzf,EAAYa,MAAK,SAACgB,GAC5C,OAAOA,EAAW/C,KAAOV,KAErBshB,EAAUC,OAAO,uCAAwCF,EAAoBzG,MAC/E0G,GACFD,EAAoBzG,KAAO0G,EAC3BxV,EAAI0V,iBAAiB,EAAK5b,MAAM1G,UAAW,EAAKwF,MAAMpF,aAAcU,EAAcqhB,GAC/Enb,MAAK,SAAA1F,GACJ,IAAMsgB,EAAgBtgB,EAAKiD,WAIrBwd,EAAoBrf,EAAY2B,QAAO,SAACE,GAC5C,OAAOA,EAAW/C,KAAOV,KAE3BihB,EAAkBhM,KAAK6L,GACvB,EAAKjc,SAAU,CAAEjD,YAAaqf,QAIlC7d,MAAM,6BA5NS,EAgOnBqe,oBAAsB,aAhOH,EA+OnBC,mBAAqB,WAAO,IAClBtN,EAAU,EAAK1P,MAAM/C,WAArByS,MAEF2L,EAAc,EAAKna,MAAMma,YAIzB4B,EAAkBvN,EAAM3R,MAAK,SAACiS,GAClC,GAAIqL,GAAerL,EAAKG,OAASkL,GAAerL,EAAKI,IACnD,OAAOJ,EAAKG,SAGhB,YAAwBxZ,IAApBsmB,EACKA,EAAgB,GAGlB,GA7PP,EAAK7B,SAAWhX,IAAMgH,YACtB,EAAKlK,MAAQ,CAEX4U,aAAc,GACdlI,8BAA8B,EAC9BF,2BAA2B,EAC3BF,4BAA6B,GAC7BiO,oBAAqB,GACrBO,gCAAiC,GACjC9e,YAAa,GACbgc,kBAAkB,EAClB7J,cAAe,EAAKrP,MAAMqP,cAC1BgM,YAAa,GAdE,E,sEAmQT,IAcJ6B,EAdG,OACDD,EAAkBvhB,KAAKwF,MAAMma,YAI7B8B,EAAOrK,KAAKsK,MAAwB,EAAlBH,GAAyB,EAC3CI,EACJ,2BAAOC,QAAM,GAAb,uCACoCxK,KAAKC,MAAMoK,GAD/C,kCACgFzhB,KAAKsE,MAAMpF,aAD3F,uBALoB,OAKpB,OAKI2iB,EAA0C,UAAzB7hB,KAAKsE,MAAM+K,UAAwB,QAAU,OAqCpE,OAhCEmS,EAD2B,UAAzBxhB,KAAKsE,MAAM+K,UAEX,kBAACgD,GAAA,EAAKhK,OAAN,KACE,2BACEyZ,IAAM9hB,KAAKsE,MAAM9F,IACjB0R,IAAMlQ,KAAK0f,SACXqC,aAAe,SAACjd,GAAO,EAAKL,SAAS,CAAEkb,YAAa7a,EAAE9H,OAAO2iB,eAC7DnT,MAAQ,CACN4J,MAAO,OACPiH,OAAQ,QACR9M,gBAAiB,SAEnByR,UAAQ,KAKZ,kBAAC3P,GAAA,EAAKhK,OAAN,KACE,2BACEyZ,IAAM9hB,KAAKsE,MAAM9F,IACjB0R,IAAMlQ,KAAK0f,SACXqC,aAAe,SAACjd,GAAO,EAAKL,SAAS,CAAEkb,YAAa7a,EAAE9H,OAAO2iB,eAC7DnT,MAAQ,CACNE,UAAW,IACX0J,MAAO,OACPiH,OAAQ,QACR9M,gBAAiB,SAEnByR,UAAQ,KAMd,oCACE,2BAAOJ,QAAM,GAAb,UAEO5hB,KAAKwF,MAAMua,oBAFlB,wBAE+D,SAF/D,+CAGO/f,KAAKwF,MAAM8a,gCAHlB,wBAG2E,SAH3E,sCAMA,wBACE1jB,UAAY,CAAE,gBAAiB,cAAe6Z,KAAK,KACnD9V,MAAK,4BAAyBX,KAAKsE,MAAM3D,QAGxCX,KAAKsE,MAAM3D,OAGd,kBAAC0R,GAAA,EAAD,KACGmP,EACD,kBAACnP,GAAA,EAAKhK,OAAN,KACE,kBAACnL,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKuN,GAAK,IACR,kBAACuX,GAAA,EAAD,CAAazV,MAAQ,CAAE4J,MAAO,SAC5B,kBAACnD,GAAA,EAAD,CAAUH,GAAKmP,KAAczV,MAAQ,CAAE4J,MAAO,SAC5C,kBAACtO,EAAA,EAAD,CAAQpL,QAAQ,oBAAoBwlB,gBAAgB,UAAYvX,QAAU3K,KAAKugB,wBAC7E,kBAAC,IAAD,CAAiB1jB,KAAOslB,IAAgBC,KAAK,eAD/C,cAIA,kBAACnP,GAAA,EAASoP,OAAV,CAAiBpC,OAAK,EAACvjB,QAAQ,oBAAoB4lB,gBAAgB,IACnE,kBAACrP,GAAA,EAASsP,KAAV,CAAe5X,QAAU3K,KAAKugB,wBAC3BvgB,KAAKwF,MAAMmO,eAAiB3T,KAAKwF,MAAMmO,cAAc5R,KAAI,SAACwB,GACzD,OACE,kBAAC0P,GAAA,EAASC,KAAV,CAAehH,IAAG,mBAAgB3I,EAAMjD,IAAQ4hB,gBAAgB3e,EAAMjD,IACpE,kBAACpD,EAAA,EAAD,CAAKglB,gBAAgB3e,EAAMjD,IACzB,kBAACnD,EAAA,EAAD,CAAKuN,GAAK,EAAI8B,MAAQ,CAAE+D,gBAAiBhN,EAAMsN,OAAUqR,gBAAgB3e,EAAMjD,KAC/E,kBAACnD,EAAA,EAAD,CAAKuN,GAAK,EAAIwX,gBAAgB3e,EAAMjD,IAAMiD,EAAMA,cAQ5D,kBAACqP,GAAA,EAAD,CACEC,KAAO,QACPC,GAAKmP,KACLthB,MAAQ,kBAAC,IAAD,CAAiB9D,KAAO6gB,MAChCpd,GAAG,qBACH5D,QAAQ,qBAER,kBAAC,GAAD,CACE8gB,iBAAmBxd,KAAKwF,MAAMgY,iBAC9B7J,cAAgB3T,KAAKwF,MAAMmO,eAAiB3T,KAAKwF,MAAMmO,cACvDiJ,cAAgB5c,KAAK4c,cACrBC,cAAgB7c,KAAK6c,cACrBL,cAAgBxc,KAAKwc,qBAOjC,kBAAC,GAAD,CACE7I,cAAgB3T,KAAKwF,MAAMmO,cAC3BC,gBAAkB5T,KAAKsE,MAAM/C,WAAasd,GAAyB7e,KAAKsE,MAAM/C,WAAW0Y,YAAc,KACvGvQ,aAAe1J,KAAK0J,aACpBqI,yBAA2B/R,KAAK+R,yBAChCF,2BAA6B7R,KAAK6R,2BAClCI,mCAAqCjS,KAAKiS,qCAG5C,kBAACI,GAAA,EAAK5J,KAAN,CACE+Z,cAAgBxiB,KAAKga,gBACrBrP,QAAU3K,KAAK+Z,oBACfvN,MAAQ,CAAE6Q,OAAQwE,EAAgBY,SAAU,WAG3Cd,EAEA3hB,KAAKsE,MAAM/C,YACZ,kBAAC,GAAD,CACEoS,cAAgB3T,KAAKwF,MAAMmO,eAAiB3T,KAAKwF,MAAMmO,cACvDnS,YAAcxB,KAAKwF,MAAMhE,YAAcxB,KAAKwF,MAAMhE,YAAc,GAChE2N,eAAiBnP,KAAKsE,MAAM/C,WAC5B6Y,aAAepa,KAAKwF,MAAM4U,aAAepa,KAAKwF,MAAM4U,aAAe,GACnElI,6BAA+BlS,KAAKwF,MAAM0M,6BAC1CF,0BAA4BhS,KAAKwF,MAAMwM,0BAA4BhS,KAAKwF,MAAMwM,0BAA4B,GAC1GF,4BAA8B9R,KAAKwF,MAAMsM,4BAA8B9R,KAAKwF,MAAMsM,4BAA8B,GAChH5S,aAAec,KAAKsE,MAAMpF,aAC1B6a,oBAAsB/Z,KAAK+Z,oBAC3BC,gBAAkBha,KAAKga,gBACvBrB,uBAAyB3Y,KAAK2Y,uBAC9BX,qBAAuBhY,KAAKgY,8B,GAjZjBjQ,aAAnBmX,GACG/O,YAAcjU,EA0ZRgjB,U,oBC5XArS,G,iLAhEH,IAAD,OACD6V,EAAmB1iB,KAAKsE,MAAMxC,YAAYC,KAAI,SAACR,EAAY2J,GAC/D,OACE,kBAACyX,GAAA,EAAIzP,KAAL,CAAUhH,IAAM0W,QACd,kBAACD,GAAA,EAAIE,KAAL,CACE3F,SAAiC,SAAtB3b,EAAWwB,OAEtBgM,SAAWxN,EAAWjB,IAGE,gBAAtBiB,EAAWwB,OAA2B,kBAAC,IAAD,CAAiBlG,KAAOimB,MAAc,GACtD,UAAtBvhB,EAAWwB,OAAqB,kBAAC,IAAD,CAAiBlG,KAAOkmB,MAA4B,GAPxF,YAQUxhB,EAAWX,sBAKrBoiB,EAAmBhjB,KAAKsE,MAAMxC,YAAYC,KAAI,SAACR,EAAY2J,GAC/D,OACE,kBAAC4D,GAAA,EAAImU,KAAL,CAAU/W,IAAM0W,OAAS7T,SAAWxN,EAAWjB,IAC7C,kBAAC,GAAD,CACExB,UAAY,EAAKwF,MAAMxF,UACvBI,aAAeqC,EAAWjB,GAC1BqT,cAAgB,EAAKrP,MAAMqP,cAC3BhT,MAAQY,EAAWX,gBACnBW,WAAaA,EAAWA,WACxB8N,UAAY9N,EAAW8N,UACvB7Q,IAAM+C,EAAW/C,UAMzB,OACE,oCACE,kBAACsQ,GAAA,EAAIxC,UAAL,CACE4W,iBAAmBljB,KAAKsE,MAAMxC,YAAY,GAAK9B,KAAKsE,MAAMxC,YAAY,GAAGxB,GAAK,SAE9E,kBAACpD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsN,GAAK,GACR,wBACE7N,UAAY,CAAE,gBAAiB,cAAe6Z,KAAK,KAEnD9V,MAAQ,eAHV,eAMA,6BACA,kBAACgiB,GAAA,EAAD,CAAKjmB,QAAQ,QAAQE,UAAU,eAC3B8lB,IAGN,kBAACvlB,EAAA,EAAD,CAAKsN,GAAK,GACR,kBAACqE,GAAA,EAAIqU,QAAL,KACIH,W,GAxDQjb,a,kJCP1B,SAASqb,GAAmB7I,GAE1B,MAAO,CACL9F,MAAO8F,EAAOmE,QAAQjK,MACtBC,IAAK6F,EAAOmE,QAAQhK,IAKpB/K,KAAM4Q,EAAO8I,UACbhP,QAASkG,EAAOmE,QAAQrK,QACxBnV,aAAcqb,EAAOmE,QAAQxf,cAoDlBokB,OA3Cf,SAAuCxe,GAGrC,IAAK5J,OAAOkjB,eAAeC,YAAa,CACtC,IAIMrK,EAJgB9Y,OAAOkjB,eAAeE,WAAW,GAAGC,gBAI9BC,iBAAiB,UAE7C,GAAqB,IAAjBxK,EAAMzW,OAER,MAAO,CACLkX,MAAOgK,WAAWzK,EAAM,GAAG0K,QAAQjK,OACnCC,IAAK+J,WAAWzK,EAAMA,EAAMzW,OAAS,GAAGmhB,QAAQhK,KAChDxV,aAAc8U,EAAM,GAAG0K,QAAQxf,aAC/BmV,QAASL,EAAM,GAAG0K,QAAQrK,QAE1BL,MAAOhP,MAAMC,KAAK+O,GAAOjS,KAAI,SAACwhB,GAAO,OAAOH,GAAmBG,OAOjE,IAAMjP,EAAOpZ,OAAOkjB,eAAeO,WAAWC,cAC9C,MAAuB,UAAnBtK,EAAK1X,WACA,CACL6X,MAAOgK,WAAWnK,EAAKoK,QAAQjK,OAC/BC,IAAK+J,WAAWnK,EAAKoK,QAAQhK,KAC7BxV,aAAcoV,EAAKoK,QAAQxf,aAC3BmV,QAASC,EAAKoK,QAAQrK,QACtBL,MAAO,CAAEoP,GAAmB9O,KAQpC,OAAO,GClEHkP,GAAiB,SAAAxP,GACrB,IAAMyP,EAAYzP,EAAM,GAMxB,OAAyB,IAJVA,EAAM7Q,QAAO,SAAAmR,GAC1B,OAAOA,EAAKD,UAAYoP,EAAUpP,WAGtB9W,QC2BVmmB,G,YAEJ,WAAYpf,GAAQ,IAAD,8BACjB,4CAAMA,KAiBRqf,wBAA0B,WACxB,IACMC,EAAY,EAAKC,KAAKC,YAAc,GACpCC,EAAkCH,GAFF,QAE8EA,EACpH,EAAKnf,SAAS,CACZ2R,MAAM2N,KAvBS,EA2BnBhjB,cAAgB,SAAC7B,GACf,OAAO,EAAKoF,MAAMxC,YAAYO,MAAK,SAACF,GAAD,OAAQA,EAAG7B,KAAOpB,MA5BpC,EA+BnB8kB,YAAc,WACZ,IAAIC,EAAY,EAEhB,OAAO,EAAKze,MAAM/C,gBAAgByhB,SAAS/gB,QAAO,SAACqd,GAAD,MAA8B,cAAjBA,EAAQnb,QACpEtD,KAAI,SAACye,GAEJ,IAAMjf,EAAa,EAAKR,cAAcyf,EAAQthB,cACxC+M,EAAS,CACb5G,KAAK,QACLoP,MAAOwP,EACPE,YAAa3D,EAAQ/L,MACrBoJ,SAAU2C,EAAQ9L,IAAM8L,EAAQ/L,MAChCqN,IAAKvgB,EAAW/C,KAKlB,OAFAylB,GAAahY,EAAO4R,SAEb5R,MAhDM,EAoDnBgD,kBAAoB,WACN,EAAKC,QACb5M,aAAa,EAAKgC,MAAMxF,UAAW,EAAKwF,MAAM7C,aAC/CqE,MAAK,SAAC1F,GACL,IAAMqC,EAAkBrC,EAAKqC,gBAE7BA,EAAgByhB,SAASrP,KAAK,CAAExP,KAAM,SAAUsE,KAAM,kCACtD,EAAKlF,SAAS,CACZhC,gBAAiBA,EACjB2hB,cAAc,OAIpB,EAAKT,0BACLzoB,OAAOmpB,iBAAiB,SAAU,EAAKV,0BAlEtB,EAgFnBW,cAAgB,SAACC,GACf,EAAK9f,UAAS,YAA0B,IAAvBhC,EAAsB,EAAtBA,gBAGf,OAFAA,EAAgByhB,SAAWK,EAEpB,CACL9hB,gBAAiBA,EACjB2hB,cAAc,OAtFD,EA4FnB/Z,aAAe,SAAC7M,GAGd,EAAKiH,UAAS,YAA0B,IAAvBhC,EAAsB,EAAtBA,gBACTyI,EAAQ1N,EACR+mB,EAAO9hB,EAAgByhB,SAI7B,OAHAK,EAAK3J,OAAO1P,EAAO,GACnBzI,EAAgByhB,SAAWK,EAEpB,CACL9hB,gBAAiBA,EACjB2hB,cAAc,OAvGD,EA4GnBI,WAAa,SAAChnB,GAAO,IACXiF,EAAoB,EAAK+C,MAAzB/C,gBACFyhB,EAAWzhB,EAAgByhB,SAC3BO,EAAiBP,EAAS1mB,GAC1BknB,EAAUvD,OAAO,OAAQsD,EAAe9a,MAC1C+a,IACFD,EAAe9a,KAAO+a,EACtBR,EAAS1mB,GAAKinB,EACdhiB,EAAgByhB,SAAWA,EAE3B,EAAKzf,SAAS,CACZhC,gBAAiBA,EACjB2hB,cAAc,MAxHD,EAmInBO,4CAA8C,SAACC,GAAiB,IACtDniB,EAAoB,EAAK+C,MAAzB/C,gBACFyhB,EAAW,EAAK1e,MAAM/C,gBAAgByhB,SAE5C,GAAoB,UAAhBU,GACiB,SAAhBA,GACgB,eAAhBA,EAA8B,CACjC,IAAMjb,EAAOwX,OAAO,oCAAqC,0BAEnD0D,EAAqB,EAAKC,gCAC1BC,EAAa,CACjBzkB,GAAIsiB,OACJ1X,MAAOgZ,EAAS3mB,OAChB8H,KAAMuf,EACNjb,KAAMA,GAERua,EAAStJ,OAAOiK,EAAoB,EAAGE,GACvCtiB,EAAgByhB,SAAWA,EAE3B,EAAKzf,SAAS,CACZhC,gBAAiBA,EACjB2hB,cAAc,MAxJD,EA8JnBU,8BAAgC,WAAO,IAE/BZ,EADsB,EAAK1e,MAAzB/C,gBACyByhB,SAE3Bc,EAAqBd,EAAS7hB,MAAK,SAAC4iB,GACxC,MAAmB,WAAZA,EAAG5f,QAKZ,OAF2B6e,EAAStP,QAAQoQ,IAtK3B,EA6KnBE,8CAAgD,WAC9C,IAAMjZ,EAASqX,KACf,GAAIrX,EAAQ,KAUN8Y,EALItiB,EAAoB,EAAK+C,MAAzB/C,gBACFyhB,EAAWzhB,EAAgByhB,SAG3BW,EAAqB,EAAKC,gCAEhC,GAAItB,GAAevX,EAAO+H,OAGxB+Q,EAAa,CACXzkB,GAAIsiB,OACJ1X,MAAOgZ,EAAS3mB,OAChB8H,KAAM,YACNoP,MAAMxI,EAAOwI,MACbC,IAAKzI,EAAOyI,IACZL,QAASpI,EAAOoI,QAChBL,MAAO/H,EAAO+H,MACd9U,aAAc+M,EAAO/M,aACrB2B,QAAS,SDzNyB,SAAAmT,GAC1C,GAAIwP,GAAexP,GACjB,OAAOA,EAGT,IAAImR,EAAsBnR,EAAM,GAAGK,QAC/B+Q,EAAmB,GACjBC,EAAmB,GAsBzB,OApBArR,EAAM9R,SAAQ,SAACoS,EAAMpJ,GACfoJ,EAAKD,UAAY8Q,EACnBC,EAAiBvQ,KAAKP,IAEtB+Q,EAAiBxQ,KAAKuQ,IACtBA,EAAmB,IAEFvQ,KAAKP,GAGtB6Q,EAAsB7Q,EAAKD,SAIXnJ,IAAO8I,EAzBGzW,OAAS,GA2BnC8nB,EAAiBxQ,KAAKuQ,MAInBC,GC+LkBC,CAAoCrZ,EAAO+H,OACnDuR,UAAUrjB,SAAQ,SAACkS,GAC5B2Q,EAAa,CACXzkB,GAAIsiB,OACJ1X,MAAOgZ,EAAS3mB,OAChB8H,KAAM,YACNoP,MAAML,EAAU,GAAGK,MACnBC,IAAKN,EAAUA,EAAU7W,OAAS,GAAGmX,IACrCL,QAASD,EAAU,GAAGC,QACtBL,MAAOI,EACPlV,aAAckV,EAAU,GAAGlV,aAE3B2B,QAAS,OAKfqjB,EAAStJ,OAAOiK,EAAoB,EAAGE,GACvCtiB,EAAgByhB,SAAWA,EAE3B,EAAKzf,SAAS,CACZhC,gBAAiBA,EACjB2hB,cAAc,SAIhBphB,MAAM,qEACNnH,QAAQC,IAAI,qBApOG,EA2OnB0pB,mBAAqB,WAAO,IAAD,EACnBC,EAAQ,CACZ,MAAS,EAAKjgB,MAAM/C,gBAAgB9B,MACpC,OAAU,IA8BN+kB,EA3B2B,EAAKlgB,MAAM/C,gBAAgByhB,SAASniB,KAAI,SAACye,GACxE,GAAqB,cAAjBA,EAAQnb,KAAsB,CAEhC,IAAMsgB,EAAoB,EAAKrhB,MAAMxC,YAAYO,MAAK,SAACF,GACrD,OAAOA,EAAG7B,KAAOkgB,EAAQthB,gBAiB3B,MAde,CACb+kB,UAAWzD,EAAQ/L,MACnBmR,QAASpF,EAAQ9L,IACjBmR,SAAWF,EAAkBG,SAAWH,EAAkBG,SAASD,SAlQrD,KAmQdE,SAAS,GAAD,OAAMJ,EAAkBI,UAIhCC,IAAKL,EAAkBG,SAAWH,EAAkBG,SAASE,IAtQpD,GAwQTC,OAASN,EAAkBG,SAAWH,EAAkBG,SAASI,SAvQ7C,cAwQpBC,WAAaR,EAAkBG,SAAWH,EAAkBG,SAASK,WAvQrD,SA6QpB,OAAO,QACNhjB,QAAO,SAAC8hB,GAAQ,OAAc,OAAPA,KAEsCljB,KAAI,SAACkjB,EAAI/Z,GAGvE,OAFA+Z,EAAG3kB,GAAK4K,EAAQ,EAET+Z,KAIT,OAFA,EAAAQ,EAAMW,QAAOvR,KAAb,qBAAqB6Q,IAEdD,GAnRU,EAwRnBY,gBAAkB,WAChB,IAAMZ,EAAQ,EAAKD,qBACbc,EAAM,IAAIC,KAAId,GACpB5pB,QAAQC,IAAIwqB,EAAIE,WAChBC,KAAWH,EAAIE,UAAL,UAAoB,EAAKhhB,MAAM/C,gBAAgB9B,MAA/C,QAA6D,eA5RtD,EA+RnB+lB,gBAAkB,WAEhB,IAAMjB,EAAQ,EAAKD,qBACbmB,EAAelB,EAAMW,OAAO,GAE5Bna,EAAS2a,KAAY,CACzBC,kBAAmB,qBAGnBC,MAAOrB,EAAMW,OAAOrkB,KAAI,SAACyC,GACvB,MAAO,CACLiQ,MAAOjQ,EAAMyf,UACbvP,IAAKlQ,EAAMohB,QACXG,SAAUvhB,EAAMuhB,SAEhBxiB,MAAO,OAGX4iB,WAAYQ,EAAaR,WACzBY,UAAWJ,EAAaX,IACxBgB,YAAavB,EAAM9kB,QAErB8lB,KAAWxa,EAAD,UAAa,EAAKzG,MAAM/C,gBAAgB9B,MAAxC,QAAsD,eArT/C,EAwTnBsmB,iBAAmB,WAEjB,IAAMxB,EAAQ,EAAKD,qBACnB3pB,QAAQC,IAAI2pB,GACZ,IAAMxZ,EAASib,KAAWzB,GAC1BgB,KAAWxa,EAAD,UAAa,EAAKzG,MAAM/C,gBAAgB9B,MAAxC,WAAyD,eA7TlD,EAgUnBwmB,uBAAyB,WAAO,IAAD,EAEvB1B,EAAQ,CACZ,MAAS,EAAKjgB,MAAM/C,gBAAgB9B,MACpC,OAAU,IAiCN+kB,EA9B2B,EAAKlgB,MAAM/C,gBAAgByhB,SAASniB,KAAI,SAACye,GACxE,GAAqB,cAAjBA,EAAQnb,KAAsB,CAChCxJ,QAAQC,IAAI,cAAe0kB,GAE3B,IAAMmF,EAAoB,EAAKrhB,MAAMxC,YAAYO,MAAK,SAACF,GACrD,OAAOA,EAAG7B,KAAOkgB,EAAQthB,gBAiB3B,OAdY,gBACPshB,EADO,CAEVyD,UAAWzD,EAAQ/L,MACnBmR,QAASpF,EAAQ9L,IACjBmR,SAAWF,EAAkBG,SAAWH,EAAkBG,SAASD,SA1VrD,KA2VdE,SAAS,GAAD,OAAMJ,EAAkBI,UAIhCC,IAAKL,EAAkBG,SAAWH,EAAkBG,SAASE,IA9VpD,GA+VTG,WAAaR,EAAkBG,SAAWH,EAAkBG,SAASK,WA7VrD,QA8VhBF,OAASN,EAAkBG,SAAWH,EAAkBG,SAASI,SA/V7C,gBAqWtB,OAAO1F,KAGRrd,QAAO,SAAC8hB,GAAQ,OAAc,OAAPA,KAEsCljB,KAAI,SAACkjB,EAAI/Z,GAGvE,OAFA+Z,EAAG3kB,GAAK4K,EAAQ,EAET+Z,KAKT,OAHA,EAAAQ,EAAMW,QAAOvR,KAAb,qBAAqB6Q,IACrB7pB,QAAQC,IAAI2pB,GAELA,GA7WU,EAgXnB2B,0BAA4B,SAACC,GAC3B,IAAM1mB,EAAK,YAAS0mB,EAAU1mB,MAAnB,QACLxC,EAAOkpB,EAAUjB,OAAOrkB,KAAI,SAACyC,GACjC,MAAmB,UAAfA,EAAMa,KACF,MAAN,OAAcb,EAAMmF,MAEE,eAAfnF,EAAMa,KACP,IAAN,OAAYb,EAAMmF,KAAlB,KAGsB,SAAfnF,EAAMa,KACP,KAAN,OAAab,EAAMmF,KAAnB,KAEsB,cAAfnF,EAAMa,KACP,GAAN,OAAWiiB,KAAUC,YAAY/iB,EAAMyf,WAAvC,aAAwDqD,KAAUC,YAAY/iB,EAAMohB,SAApF,aAAmGphB,EAAM6P,QAAzG,gBAA0H7P,EAAMuhB,SAAhI,kBAAoJvhB,EAAMwP,MAAMjS,KAAI,SAACuS,GAAU,OAAOA,EAAK3K,QAAQ8M,KAAK,MAGnM,QAGT,MAAM,GAAN,OAAW9V,GAAX,OAAqBxC,EAAKsY,KAAK,UApYd,EAuYnB+Q,iBAAmB,WACjB,IAAMC,EAAsB,EAAKN,yBAC3BO,EAAsBtpB,KAAKC,UAAUopB,EAAqB,KAAM,GACtEhB,KAAWiB,EAAD,UAA0B,EAAKliB,MAAM/C,gBAAgB9B,MAArD,SAAoE,eA1Y7D,EA6YnBgnB,gBAAkB,WAChB,IAAMF,EAAsB,EAAKN,yBAC3BO,EAAsB,EAAKN,0BAA0BK,GAC3DhB,KAAWiB,EAAD,UAA0B,EAAKliB,MAAM/C,gBAAgB9B,MAArD,QAAmE,eAhZ5D,EAmZnBinB,oBAAsB,WACpB,IAAMC,EAAW,EAAK7D,cAGtB,EAAKvf,SAAS,CACZ2f,cAAc,IACb,WACD,EAAK3f,SAAS,CACZ2f,cAAc,EACdyD,SAAUA,OAGd,EAAKpjB,SAAS,CACZojB,SAAUA,KAhaK,EAoanBC,mCAAqC,SAAChjB,GAEpC,GAA2B,UAAvBA,EAAE9H,OAAOJ,UAAuB,CAClC,IAAMmrB,EAAkBjjB,EAAE9H,OAAO0hB,QAAQjK,MAIzC5Y,QAAQC,IAAI,oBAAqBisB,KA3alB,EA+anBC,0BAA4B,WAC1B,IAAMtc,EAAM,EAAKwD,QACTzM,EAAoB,EAAK+C,MAAzB/C,gBACR,GAAIA,EAAiB,CACnB,IAAMyhB,EAAWzhB,EAAgByhB,SAG3Bc,EAAqBd,EAAS7hB,MAAK,SAAC4iB,GACxC,MAAmB,WAAZA,EAAG5f,QAEZ,GAAI2f,EAAoB,CAEtB,IAAMH,EAAqBX,EAAStP,QAAQoQ,GAC5Cd,EAAStJ,OAAOiK,EAAoB,GAGtCpiB,EAAgByhB,SAAWA,EAC3BxY,EAAImC,gBAAgB,EAAKvJ,MAAMxF,UAAW,EAAKwF,MAAM7C,YAAagB,GAC/DqD,MAAK,SAAC1F,GACe,OAAhBA,EAAK2C,QACPC,MAAM,+BAjcd,EAAKwC,MAAQ,CACX/C,gBAAiB,KACjB2hB,cAAc,EACdhO,MAAO,IAEPyR,SAAS,IAPM,E,oFAsEjB3sB,OAAO+sB,oBAAoB,SAAUjoB,KAAK2jB,2B,2CAItC3jB,KAAKwF,MAAM4e,cACbpkB,KAAK4nB,wB,+BA0YC,IAAD,OACP,OACE,oCACE,wBACEhrB,UAAY,CAAE,gBAAiB,cAAe6Z,KAAK,KACnD9V,MAAK,kCAA+BX,KAAKwF,MAAM/C,gBAAkBzC,KAAKwF,MAAM/C,gBAAgB9B,MAAQ,KACnGX,KAAKwF,MAAM/C,gBAAkBzC,KAAKwF,MAAM/C,gBAAgB9B,MAAQ,IAEnE,kBAAC0R,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKhK,OAAN,CAAa6H,IAAM,SAAA+U,GAAE,OAAK,EAAKpB,KAAOoB,IACjCjlB,KAAKwF,MAAM4e,aAEV,KADF,kBAAC,KAAD,CAAehO,MAAQpW,KAAKwF,MAAM4Q,MAAQyR,SAAW7nB,KAAKwF,MAAMqiB,YAIpE,kBAACxV,GAAA,EAAKhK,OAAN,KACE,kBAACnL,EAAA,EAAD,CAAKgrB,WAAS,GACZ,kBAAC/qB,EAAA,EAAD,CAAKsN,GAAK,GAAKmF,GAAK,GAClB,kBAAC9H,EAAA,EAAD,CAEEpL,QAAQ,oBACRiO,QAAU3K,KAAKklB,8CACfvkB,MAAM,iHAEN,kBAAC,IAAD,CAAiB9D,KAAOsrB,MAN1B,eASF,kBAAChrB,EAAA,EAAD,CAAKsN,GAAK,GAAKmF,GAAK,GAClB,kBAACqD,GAAA,EAAD,KACE,kBAACA,GAAA,EAASoP,OAAV,CAAiB3lB,QAAQ,qBACvB,kBAAC,IAAD,CAAiBG,KAAOsrB,OAE1B,kBAAClV,GAAA,EAASsP,KAAV,KACE,kBAACtP,GAAA,EAASC,KAAV,CACEvI,QAAU,WAAO,EAAKga,4CAA4C,UAClEhkB,MAAM,sDAEN,kBAAC,IAAD,CAAiB9D,KAAOurB,MAJ1B,YAMA,kBAACnV,GAAA,EAASC,KAAV,CACEvI,QAAU,WAAO,EAAKga,4CAA4C,eAClEhkB,MAAM,0DAEN,kBAAC,IAAD,CAAiB9D,KAAOwrB,MAJ1B,eAMA,kBAACpV,GAAA,EAASC,KAAV,CACEvI,QAAU,WAAO,EAAKga,4CAA4C,SAClEhkB,MAAM,8CAEN,kBAAC,IAAD,CAAiB9D,KAAOgc,MAJ1B,YASN,kBAAC1b,EAAA,EAAD,CAAKsN,GAAK,GAAKmF,GAAK,GAClB,kBAACqD,GAAA,EAAD,KACE,kBAACA,GAAA,EAASoP,OAAV,CAAiB3lB,QAAQ,qBACvB,kBAAC,IAAD,CAAiBG,KAAOyrB,MAD1B,WAGA,kBAACrV,GAAA,EAASsP,KAAV,KACE,kBAACtP,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAKqmB,gBACf1lB,MAAM,sKAFR,eAIY,kBAAC,IAAD,CAAiB9D,KAAO0rB,OAEpC,kBAACtV,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAK0mB,gBACf/lB,MAAM,yHAFR,gBAKW,kBAAC,IAAD,CAAiB9D,KAAO0rB,OAEnC,kBAACtV,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAKinB,iBACftmB,MAAM,4GAFR,QAIG,kBAAC,IAAD,CAAiB9D,KAAO0rB,OAE3B,kBAACtV,GAAA,EAASM,QAAV,MACA,kBAACN,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAK2nB,gBACfhnB,MAAM,8DAFR,aAIQ,kBAAC,IAAD,CAAiB9D,KAAO0rB,OAEhC,kBAACtV,GAAA,EAASC,KAAV,CACEvI,QAAU,WAAO3H,MAAM,wCACvBrC,MAAM,+DAFR,iBAIY,kBAAC,IAAD,CAAiB9D,KAAO0rB,OAEpC,kBAACtV,GAAA,EAASM,QAAV,MACA,kBAACN,GAAA,EAASC,KAAV,CACEvI,QAAU3K,KAAKwnB,iBACf7mB,MAAM,2DAFR,QAIG,kBAAC,IAAD,CAAiB9D,KAAO0rB,UAKjC,kBAACprB,EAAA,EAAD,CAAKsN,GAAK,GAAKmF,GAAK,GAClB,kBAAC9H,EAAA,EAAD,CAAQpL,QAAQ,oBACdiO,QAAU3K,KAAKgoB,0BAEfrnB,MAAM,wBACNkK,OAAK,GAEL,kBAAC,IAAD,CAAiBhO,KAAO2rB,UAOhC,kBAACnW,GAAA,EAAK5J,KAAN,KACE,6BACE+D,MAAQ,CAAE6Q,OAAQ,OAAQoF,SAAU,UACpCD,cAAgBxiB,KAAK8nB,oCAEnB9nB,KAAKwF,MAAM/C,gBAAkB,kBAAC,KAAD,CAC7BuG,MAAQhJ,KAAKwF,MAAM/C,gBAAgByhB,SACnCI,cAAgBtkB,KAAKskB,cACrBja,aAAerK,KAAKqK,aACpBma,WAAaxkB,KAAKwkB,aAGhB,a,GAvlBYzc,aAAxB2b,GACGvT,YAAcjU,EAqmBRwnB,UCvnBT+E,G,YAEJ,WAAYnkB,GAAQ,IAAD,8BACjB,4CAAMA,KAcR2K,kBAAoB,oBAAAxQ,EAAAC,OAAA,gDACN,EAAKwQ,QAEbwZ,iCAAiC,EAAKljB,MAAM1G,UAAW,EAAK0G,MAAM/D,aACnEqE,MAAK,SAAC1F,GACL,EAAKqE,SAAS,CACZkkB,eAAgBvoB,EAAKqC,gBAAgB9B,MACrCF,aAAcL,EAAKM,QAAQC,MAC3BmB,YAAa1B,EAAK0B,YAClB6R,cAAevT,EAAKkB,YATR,sCAfD,EA6BnBsnB,kBAAmB,WACb,EAAKpjB,MAAMqjB,sBACb,EAAKpkB,UAAS,SAACe,GACb,MAAO,CACLsjB,oBAAqBtjB,EAAMsjB,wBAjChB,EAuCnBC,oBAAsB,WAChB,EAAKvjB,MAAMsjB,oBACb,EAAKrkB,UAAS,SAACe,GACb,MAAO,CACLqjB,sBAAuBrjB,EAAMqjB,0BAzCnC,EAAKrjB,MAAQ,CACX1G,UAAY,EAAKwF,MAAM8J,MAAMC,OAAOvP,UACpC2C,YAAc,EAAK6C,MAAM8J,MAAMC,OAAO5M,YACtChB,aAAc,GACdkoB,eAAgB,GAChB7mB,YAAa,KACb6R,cAAe,GACfmV,oBAAoB,EACpBD,sBAAsB,EACtBG,YAAc,QAXC,E,sEAmDjB,OACE,kBAAC1c,EAAA,EAAD,CAAWE,MAAQ,CAAEC,aAAc,OAAUkD,OAAK,GAChD,6BACA,kBAACzS,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKsN,GAAK,IACR,kBAAC,IAAD,CACEzB,MAAQ,CAAE,CACRvD,KAAM,WACN4G,KAAM,aAER,CACE5G,KAAK,YAAD,OAAezF,KAAKwF,MAAM/E,cAC9B4L,KAAK,aAAD,OAAgBrM,KAAKwF,MAAM1G,YAEjC,CACE2G,KAAM,cAER,CACEA,KAAK,GAAD,OAAMzF,KAAKwF,MAAMmjB,sBAO7B,kBAACrc,EAAA,EAAD,CAAWqD,OAAQ,GACjB,yBAAK/S,UAAU,sBACb,kBAACqlB,GAAA,EAAD,CACErX,KAAK,KAAKhO,UAAU,SAEpB,kBAACkL,EAAA,EAAD,CACE6C,QAAU3K,KAAK4oB,kBACflsB,QAAUsD,KAAKwF,MAAMsjB,mBAAqB,YAAc,qBAF1D,eAIa,kBAAC,IAAD,CAAiBjsB,KAAOmD,KAAKwF,MAAMsjB,mBAAqBG,IAAcC,MAJnF,IAIoGlpB,KAAKwF,MAAMsjB,mBAAqB,OAAS,QAE7I,kBAAChhB,EAAA,EAAD,CACE6C,QAAU3K,KAAK+oB,oBACfrsB,QAAUsD,KAAKwF,MAAMqjB,qBAAuB,YAAc,qBAF5D,mBAImB,kBAAC,IAAD,CAAiBhsB,KAAOmD,KAAKwF,MAAMqjB,qBAAuBI,IAAcC,MAJ3F,KAI6GlpB,KAAKwF,MAAMqjB,qBAAuB,OAAS,UAK5J,kBAAC3rB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEuN,GAAK,CAAEye,KAAM,GAAIlD,OAAO,GACxBxb,GAAK,CACH0e,KAAMnpB,KAAKwF,MAAMqjB,qBAAuB,EAAI,GAC5C5C,QAAQjmB,KAAKwF,MAAMqjB,qBAAuB,IAE5CjZ,GAAK,CACHuZ,KAAMnpB,KAAKwF,MAAMqjB,qBAAuB,EAAI,GAC5C5C,QAAQjmB,KAAKwF,MAAMqjB,qBAAuB,IAE5C1S,GAAK,CACHgT,KAAMnpB,KAAKwF,MAAMqjB,qBAAuB,EAAI,GAC5C5C,OAAQjmB,KAAKwF,MAAMqjB,qBAAuB,EAAI,GAEhD/Y,GAAK,CACHqZ,KAAMnpB,KAAKwF,MAAMqjB,qBAAuB,EAAI,GAC5C5C,OAAQjmB,KAAKwF,MAAMqjB,qBAAuB,EAAI,GAEhDrc,MAAQ,CAAEvC,QAASjK,KAAKwF,MAAMsjB,mBAAqB,QAAU,SAE3D9oB,KAAKwF,MAAM1D,YACX,kBAAC,GAAD,CACEhD,UAAYkB,KAAKwF,MAAM1G,UACvBgD,YAAc9B,KAAKwF,MAAM1D,YACzB6R,cAAgB3T,KAAKwF,MAAMmO,gBAE3B,oCAAE,6BAAK,6BAAK,mFAElB,kBAACxW,EAAA,EAAD,CACEuN,GAAK,CAAEye,KAAM,GAAIlD,OAAO,GACxBxb,GAAK,CACH0e,KAAMnpB,KAAKwF,MAAMsjB,mBAAqB,EAAI,GAC1C7C,QAAQjmB,KAAKwF,MAAMsjB,mBAAqB,IAE1ClZ,GAAK,CACHuZ,KAAMnpB,KAAKwF,MAAMsjB,mBAAqB,EAAI,GAC1C7C,QAAQjmB,KAAKwF,MAAMsjB,mBAAqB,IAE1C3S,GAAK,CACHgT,KAAMnpB,KAAKwF,MAAMsjB,mBAAqB,EAAI,GAC1C7C,OAAQjmB,KAAKwF,MAAMsjB,mBAAqB,EAAI,GAE9ChZ,GAAK,CACHqZ,KAAMnpB,KAAKwF,MAAMsjB,mBAAqB,EAAI,EAC1C7C,OAAQjmB,KAAKwF,MAAMsjB,mBAAqB,EAAI,GAE9Ctc,MAAQ,CAAEvC,QAASjK,KAAKwF,MAAMqjB,qBAAuB,QAAU,SAE7D7oB,KAAKwF,MAAM1D,YACX,kBAAC,GAAD,CACEhD,UAAYkB,KAAKwF,MAAM1G,UACvB2C,YAAczB,KAAKwF,MAAM/D,YACzBK,YAAc9B,KAAKwF,MAAM1D,YACzBknB,YAAchpB,KAAKsE,MAAM0kB,cACtB,a,GAzJKjhB,aAApB0gB,GACGtY,YAAcjU,EAuKRusB,U,kBCtKTW,GAAe,WACnB,OAAQ,6BACN,kDACA,mFA+BWC,GA1BA,WACb,OACE,kBAAC,cAAD,CAAYC,SAAS,KACnB,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOC,OAAK,EAACjkB,KAAK,IAAIkkB,UAAYje,KAClC,kBAAC,KAAD,CAAOge,OAAK,EAACjkB,KAAK,YAAYkkB,UAAYje,KAC1C,kBAAC,KAAD,CAAOge,OAAK,EAACjkB,KAAK,uBAAuBkkB,UAAYC,KAErD,kBAAC,KAAD,CACEF,OAAK,EACLjkB,KAAK,+CACLkkB,UAAYf,KAGd,kBAAC,KAAD,CACEc,OAAK,EACLjkB,KAAK,yDACLkkB,UAAYxa,KAGd,kBAAC,KAAD,CAAOwa,UAAYJ,QCvCrBM,GACJ,oCACE,iEAAsC,kBAACC,EAAA,EAAM9G,KAAP,CAAY9lB,KAAK,mDAAmDC,OAAO,SAASC,IAAI,uBAAxF,+CAAtC,KAGA,yGA6CW2sB,GAzCH,WAGV,IAAIC,EAAa,KACbC,EAAiB,KA0BrB,OAvBED,EACE,kBAACvd,EAAA,EAAD,KACE,kBAAC,IAAD,CACE5P,QAAU,UACV4J,QAAU,YACVC,QAAUmjB,MAKbK,UAAUC,SACbF,EACE,oCACE,6BACA,kBAACxd,EAAA,EAAD,KACE,kBAAC,IAAD,CACE5P,QAAU,UACV4J,QAAU,kBACVC,QAAU,uDAMlB,oCACGsjB,EACAC,EACD,kBAAC,EAAWG,SAAZ,CAAqBvlB,MAAQ9F,GAC3B,kBAAC,GAAD,SCzCYsrB,QACW,cAA7BhvB,OAAOivB,SAASC,UAEe,UAA7BlvB,OAAOivB,SAASC,UAEhBlvB,OAAOivB,SAASC,SAAShc,MACvB,2DCZNic,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBT,WACrBA,UAAUU,cAAcC,MAAM5kB,MAAK,SAAA6kB,GACjCA,EAAaC,kB","file":"static/js/main.2005fcb8.chunk.js","sourcesContent":["/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n  // Is browser Eg client side app or locally testing (Node)\n  if ( window.process === undefined || (window.process.versions === undefined || window.process.versions.node === undefined) ) {\n    if ( window.process !== undefined && window.process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  }\n\n  if (window.process.versions.electron && window.process.versions.electron !== undefined) {\n    return 'electron';\n  }\n\n  if (window.process.versions.cep !== undefined) {\n    //   console.debug('In Adobe CEP Environment');\n    //   console.info('In Chromium v: ', window.process.versions.chromium);\n    //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n    //   console.info('adjusting current working directory for Adobe CEP');\n    //   console.log('Starting directory: ' + process.cwd());\n    try {\n      process.chdir(__dirname);\n      // process.chdir('..');\n      // console.log('New directory: ' + process.cwd());\n    } catch (err) {\n      console.log('chdir: ' + err);\n    }\n\n    return 'cep';\n  }\n\n  console.error(\"couldn't determine the js environment\");\n\n  return undefined;\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__2hb7q\",\"unselectable\":\"Paragraphs_unselectable__-gkJp\",\"highlightedWord\":\"Paragraphs_highlightedWord__2R7lz\"};","import { createContext } from 'react';\n\nconst ApiContext = createContext(); // initialised by App.js\n\nexport default ApiContext;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","const arraysMatch = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) return false;\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n\n  return true;\n};\n\nexport default arraysMatch;","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n    // return await res.json();\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  constructor() {\n    this.url = 'db/'; // when serving statically\n    this.projects = this.url + 'projects.json';\n    this.paperEdits = this.url + 'paperedits.json';\n    this.transcripts = this.url + 'transcripts.json';\n    this.labels = this.url + 'labels.json';\n    this.annotations = this.url + 'annotations.json';\n  }\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const response = await fetch(this.projects);\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  async getProject(id) {\n    const response = await fetch(this.projects);\n    const projects = await response.json();\n    const project = projects.find((p) => {\n      return p._id === id;\n    });\n\n    return { status: 'ok', project: project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n    console.log(data);\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n    console.log(id, data);\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n    console.log(id);\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n\n  async getTranscripts(projectId) {\n    const response = await fetch(this.transcripts);\n    const transcriptsData = await response.json();\n\n    const transcripts = transcriptsData.filter((transcript) => {\n      return transcript.projectId === projectId;\n    }).map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    console.log(projectId, formData, data);\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch(this.transcripts);\n    const transcripts = await response.json();\n    const transcript = transcripts.find((tr) => {\n      return tr._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, queryParamsOptions, data);\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId);\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch(this.annotations);\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch(this.annotations);\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, data);\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, annotationId);\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n\n  async getAllLabels(projectId) {\n    const response = await fetch(this.labels);\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch(this.labels);\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, data);\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, labelId, data);\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, labelId);\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n\n  async getAllPaperEdits(projectId) {\n    const response = await fetch(this.paperEdits);\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((pe) => {\n      return pe.projectId === projectId;\n    });\n\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((pe) => {\n          pe.id = pe._id;\n\n          return pe;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch(this.paperEdits);\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((pe) => {\n      return pe.id === paperEditId;\n    });\n\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, data);\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, id, data);\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, id);\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\nconst dynamicApiWrapper = () => {\n  // await async dependencies\n  // export the module\n  console.debug(jsENV)\n\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n};\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default dynamicApiWrapper();\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n// import CustomAlert from '../lib/CustomAlert/index.js';\nimport CustomAlert from '@pietrop/digital-paper-edit-storybook/CustomAlert';\n// import './index.module.css';\nimport whichJsEnv from '../../../Util/which-js-env';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    console.log(\"formData.get('path')\", formData.get('path'));\n\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript !!!!!\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n        Select an audio or video file to upload\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n        Please chose a audio or video file to upload\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;","// Not in use in this repo \nimport React from 'react';\nimport Modal from 'react-bootstrap/Modal';\n// import TranscriptForm from '@pietrop/digital-paper-edit-storybook/TranscriptForm';\nimport TranscriptForm from './TranscriptForm.js';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n            type={'transcript'}\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, {useState, useEffect, useReducer} from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nimport {anyInText} from '../../../Util/in-text';\nimport arrayMatch from '../../../Util/array-match';\nimport List from '@pietrop/digital-paper-edit-storybook/List';\nimport SearchBar from '@pietrop/digital-paper-edit-storybook/SearchBar';\nimport FormModal from '@pietrop/digital-paper-edit-storybook/FormModal';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\n\nconst initialFormState = {\n    title: '',\n    description: '',\n    id: null\n};\n\nconst ItemsContainer = (props) => {\n    const type = props.type;\n    const [items, setItems] = useState([]);\n\n    const [showModal, setShowModal] = useState(false);\n    const [formData, setFormData] = useState(initialFormState);\n\n    // The form works both for new/create and edit/update\n    const handleSaveForm = (item) => {\n        props.handleSave(item);\n        setShowModal(false);\n        setFormData(initialFormState)\n    };\n\n    const handleEditItem = (id) => {\n        const item = items.find((i) => i.id === id);\n        setFormData(item)\n\n        setShowModal(true);\n    };\n\n    const handleDeleteItem = (id) => {\n        props.handleDelete(id);\n    };\n\n    const handleFilterDisplay = (item, text) => {\n        if (anyInText([\n            item.title, item.description\n        ], text)) {\n            item.display = true;\n        } else {\n            item.display = false;\n        }\n\n        return item;\n    };\n\n    const handleSearch = text => {\n        const results = items.map(item => handleFilterDisplay(item, text));\n        setItems(results);\n    };\n\n    const toggleShowModal = () => {\n        console.log('toggle', !showModal);\n        setShowModal(!showModal);\n        // if form modal is closed then reset content\n        if (!showModal) {\n            setFormData(initialFormState)\n        }\n    };\n\n    useEffect(() => {\n        if (!arrayMatch(props.items, items)) {\n            setItems(props.items);\n        }\n\n        return() => {};\n\n    }, [items, props.items]);\n\n    let searchEl;\n    let showItems;\n\n    if (items.length > 0) {\n        searchEl = <SearchBar handleSearch={handleSearch}/>;\n        showItems = (\n            <List type={\n                    props.type\n                }\n                items={items}\n                handleEditItem={handleEditItem}\n                handleDeleteItem={handleDeleteItem}/>\n        );\n\n    } else {\n        showItems = (\n            <i>There are no {type}s, create a new one to get started.</i>\n        );\n    }\n    let formModal = (\n        <FormModal { ...formData }\n            modalTitle={\n                formData.id ? `Edit ${type}` : `New ${type}`\n            }\n            showModal={showModal}\n            handleOnHide={toggleShowModal}\n            handleSaveForm={handleSaveForm}\n            itemType={\n                type.toLowerCase\n            }/>\n    )\n\n    if (props.type === 'transcript') {\n        if (formData.id === null) {\n            formModal = (\n                <NewTranscriptFormModal modalTitle={\n                        `New ${type}`\n                    }\n                    handleCloseModal={toggleShowModal}\n                    show={showModal}\n                    handleSaveForm={handleSaveForm}\n                    itemType={\n                      type.toLowerCase\n                  }/>\n            )\n        }\n    }\n\n    return (\n        <>\n            <Row>\n                <Col sm={9}>\n                    {searchEl} </Col>\n                <Col xs={12}\n                    sm={3}>\n                    <Button onClick={toggleShowModal}\n                        variant=\"outline-secondary\"\n                        size=\"sm\"\n                        block>\n                        New {type} </Button>\n                </Col>\n            </Row>\n            {showItems}\n            {formModal} </>\n    );\n};\nItemsContainer.propTypes = {\n    handleSave: PropTypes.any,\n    handleDelete: PropTypes.any,\n    items: PropTypes.array.isRequired,\n    type: PropTypes.string\n};\nItemsContainer.defaultProps = {\n    type: 'Project'\n};\nexport default ItemsContainer;\n","const inText = (findText, sourceText) => {\n  return findText.toLowerCase().trim().includes(sourceText.toLowerCase().trim());\n};\n\nconst anyInText = (arr, sourceText) => {\n  return arr.find(findText => {\n    return inText(findText, sourceText);\n  });\n};\n\nexport { inText, anyInText } ;","const updateItem = (id, newItem, items) => {\n  const newItems = items;\n  const index = items.findIndex(item => item.id === id);\n  Object.assign(newItems[index], newItem);\n\n  return newItems;\n};\n\nconst deleteItem = (id, items) => {\n  const newItems = items.filter(item => item.id !== id);\n\n  return newItems;\n};\n\nconst addItem = (item, items) => {\n  return [ ...items, item ];\n};\n\nconst itemsReducer = (state, action) => {\n  switch (action.type) {\n  case 'update':\n    return {\n      ...state,\n      items: action.items\n    };\n  case 'updateItem':\n    return {\n      ...state,\n      items: updateItem(action.id, action.item, state.items)\n    };\n  case 'add':\n    return {\n      ...state,\n      items: [ ...state.items, action.newItem ]\n    };\n  case 'delete':\n    return {\n      ...state,\n      items: deleteItem(action.id, state.items)\n    };\n  default:\n    return state;\n  }\n};\n\nconst reducers = ({ projects }, action) => {\n  return {\n    projects: itemsReducer(projects, action)\n  };\n};\n\nexport { reducers, updateItem, deleteItem, addItem };","import React, { useEffect, useState, useContext } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ItemsContainer from '../lib/ItemsContainer';\nimport ApiContext from '../../Context/ApiContext';\nimport { deleteItem, updateItem, addItem } from '../../Context/reducers';\n\nconst Projects = () => {\n  const [ isFetch, setIsFetch ] = useState(false);\n  const [ items, setItems ] = useState([]);\n\n  const type = 'Project';\n  const api = useContext(ApiContext);\n\n  const createProject = async (item) => {\n    const response = await api.createProject(item);\n    if (response.status === 'ok') {\n      const newProject = response.project;\n      newProject.display = true;\n      const newItems = addItem(newProject, items);\n      setItems(newItems);\n    } else {\n      console.error('Failed to add project', item);\n    }\n  };\n\n  const updateProject = async (id, item) => {\n    const response = await api.updateProject(id, item);\n\n    if (response.status === 'ok') {\n      const project = response.project;\n      project.display = true;\n      const newItems = updateItem(id, project, items);\n      setItems(newItems);\n    }\n  };\n\n  const handleSave = async (item) => {\n    if (item.id) {\n      return await updateProject(item.id, item);\n    } else {\n      return await createProject(item);\n    }\n  };\n\n  const deleteProject = async (id) => {\n    let response;\n    try {\n      response = await api.deleteProject(id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deleteProject', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    console.log('handle delete');\n    const response = deleteProject(id);\n    if (response.status === 'ok') {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  useEffect(() => {\n    const getProjects = async () => {\n      let allProjects = [];\n\n      try {\n        const result = await api.getAllProjects();\n        allProjects = result.map(project => {\n          const id = project.id;\n          project.key = id;\n          project.url = `/projects/${ id }`;\n          project.display = true;\n\n          return project;\n        });\n\n      } catch (e) {\n        console.log('Failed to get projects');\n      }\n\n      setItems(allProjects);\n    };\n\n    if (!isFetch) {\n      getProjects();\n      setIsFetch(true);\n    }\n\n    return () => {\n    };\n\n  }, [ api, isFetch, items ]);\n\n  const breadcrumbItems = [\n    {\n      name: `${ type }s`,\n      link: `/${ type }s`,\n    }\n  ];\n\n  return (\n    <>\n      <Container\n        data-testid='projectsContainer'\n        style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 }>\n            <Breadcrumb\n              data-testid='projectsBreadcrumb'\n              items={ breadcrumbItems } />\n          </Col>\n        </Row>\n        <ItemsContainer\n          key={ type }\n          model={ type }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      </Container>\n      <CustomFooter />\n    </>\n  );\n};\nexport default Projects;\n","import React, { useEffect, useState, useContext } from 'react';\nimport ItemsContainer from '../../lib/ItemsContainer';\nimport PropTypes from 'prop-types';\nimport { deleteItem, updateItem, addItem } from '../../../Context/reducers';\nimport ApiContext from '../../../Context/ApiContext';\nconst intervalInMs = 30000;\n\nconst Transcripts = (props) => {\n  const api = useContext(ApiContext);\n  const [ isFetch, setIsFetch ] = useState(false);\n  const [ items, setItems ] = useState([]);\n  const [ isInProgress, setIsInProgress ] = useState(false);\n  const [ interval, setInterval ] = useState();\n  \n\n  const isTranscriptionInProgress = (transcripts) => {\n    if (transcripts.length !== 0) {\n      const result = transcripts.find((transcript) => {\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    const genUrl = (id) => {\n      return `#/projects/${ props.projectId }/transcripts/${ id }/correct`;\n    };\n\n    const getTranscripts = async () => {\n      const response = await api.getTranscripts(props.projectId);\n\n      const newItems = response.transcripts.map((transcript) => {\n        transcript.display = true;\n        transcript.url = genUrl(transcript.id);\n        transcript.projectId = props.projectId;\n\n        return transcript;\n      });\n      setItems(newItems);\n    };\n\n    if (!isFetch) {\n      getTranscripts();\n      setIsFetch(true);\n    }\n\n    // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly,\n    // and only if there are items in progress in the list, it checks the backed for updates\n    if (isInProgress && !interval) {\n      setInterval(setTimeout(() => {\n        getTranscripts();\n      }, intervalInMs));\n    }\n\n    if (items.length > 0) {\n      setIsInProgress(isTranscriptionInProgress(items));\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [ api, interval, isFetch, isInProgress, items, props.projectId ]);\n\n  const updateTranscript = async (id, item) => {\n    const queryParamsOptions = false;\n    const response = await api.updateTranscript(\n      props.projectId,\n      id,\n      queryParamsOptions,\n      item\n    );\n\n    if (response.status === 'ok') {\n      console.log(' response', response)\n      const editedTranscript = response.transcript;\n      const index = items.findIndex(pe => pe.id === id);\n      const originalTranscript = items[index];\n\n      editedTranscript.display = true;\n      editedTranscript.status = originalTranscript.status;\n      const newItems = updateItem(id, editedTranscript, items);\n      setItems(newItems);\n    } else {\n      console.log('api.updateTranscript', response);\n    }\n  };\n\n  const createTranscript = async (item) => {\n    const response = await api.createTranscript(item);\n    if (response.status === 'ok') {\n      const newTranscript = response.transcript;\n\n      newTranscript.display = true;\n      newTranscript.status = 'in-progress';\n\n      const newItems = addItem(newTranscript, items);\n      setItems(newItems);\n    } else {\n      console.log('api.updateTranscript', response);\n    }\n  };\n\n  const handleSave = (item) => {\n    if (item.id) {\n      return updateTranscript(item.id, item);\n    } else {\n      return createTranscript(item);\n    }\n  };\n\n  const deleteTranscript = async (id) => {\n    console.log(api);\n    let response;\n    try {\n      response = await api.deleteTranscript(props.projectId, id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deleteTranscript', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    const response = deleteTranscript(id);\n    if (response.status === 'ok') {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  return (\n    <ApiContext.Consumer>\n      {() => (\n        <ItemsContainer\n          type={ 'transcript' }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      )}\n    </ApiContext.Consumer>\n  );\n};\n\nTranscripts.propTypes = {\n  projectId: PropTypes.any\n};\n\nexport default Transcripts;\n","import React, { useEffect, useState, useContext } from 'react';\nimport ItemsContainer from '../../lib/ItemsContainer';\nimport PropTypes from 'prop-types';\nimport { deleteItem, updateItem, addItem } from '../../../Context/reducers';\nimport ApiContext from '../../../Context/ApiContext';\n\nconst PaperEdits = (props) => {\n  const api = useContext(ApiContext);\n  const [ items, setItems ] = useState([]);\n  const type = 'Paper Edit';\n  const [ isFetch, setIsFetch ] = useState(false);\n\n  useEffect(() => {\n    const genUrl = (id) => {\n      return `/projects/${ props.projectId }/paperedits/${ id }`;\n    };\n\n    const getAllPaperEdits = async () => {\n      const allPaperEdits = await api.getAllPaperEdits(props.projectId);\n\n      const paperEdits = allPaperEdits.map(paperEdit => {\n        paperEdit.display = true;\n        paperEdit.url = genUrl(paperEdit.id);\n        paperEdit.projectId = props.projectId;\n\n        return paperEdit;\n      });\n      setItems(paperEdits);\n\n    };\n    // TODO: some error handling\n    if (!isFetch) {\n      getAllPaperEdits();\n      setIsFetch(true);\n    }\n\n    return () => {\n    };\n  }, [ api, isFetch, items, props.projectId ]);\n\n  const createPaperEdit = async (item) => {\n    const response = await api.createPaperEdit(props.projectId, item);\n    if (response.status === 'ok') {\n      const newPaperEdit = response.paperedit;\n      newPaperEdit.display = true;\n      // newPaperEdit.url = genUrl(newPaperEdit.id);\n\n      const newItems = addItem(newPaperEdit, items);\n      setItems(newItems);\n    } else {\n      console.log('api.createPaperEdit', response);\n    }\n  };\n\n  const updatePaperEdit = async (id, item) => {\n    const response = await api.updatePaperEdit(props.projectId, id, item);\n    const paperEdit = response.paperedit;\n\n    if (response.status === 'ok' && paperEdit) {\n      paperEdit.display = true;\n\n      const newItems = updateItem(id, paperEdit, items);\n      setItems(newItems);\n    } else {\n      console.log('api.createPaperEdit', response);\n    }\n  };\n\n  const handleSave = (item) => {\n    if (item.id) {\n      return updatePaperEdit(item.id, item);\n    } else {\n      return createPaperEdit(item);\n    }\n  };\n\n  const deletePaperEdit = async (id) => {\n    let response;\n    try {\n      response = await api.deletePaperEdit(props.projectId, id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deletePaperEdit', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    console.log('handle delete');\n    const response = deletePaperEdit(id);\n    if (response.status === 'ok') {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  return (\n    <ApiContext.Consumer>\n      {() => (\n        <ItemsContainer\n          type={ type }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      )}\n    </ApiContext.Consumer>\n\n  );\n};\n\nPaperEdits.propTypes = {\n  projectId: PropTypes.any\n};\n\nexport default PaperEdits;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport Transcripts from './Transcripts';\nimport PaperEdits from './PaperEdits';\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\n\nimport ApiContext from '../../Context/ApiContext';\n\nconst genBreadcrumb = (name) => [\n  {\n    name: 'Projects',\n    link: '/projects'\n  },\n  {\n    name: name\n  }\n];\n\nconst WorkspaceView = (props) => {\n  const api = useContext(ApiContext);\n  const id = props.match.params.projectId;\n\n  const [ active, setActive ] = useState('transcripts');\n  const [ name, setName ] = useState('Project Name');\n\n  useEffect(() => {\n\n    const getProjectName = async () => {\n      try {\n        const response = await api.getProject(id);\n        setName(response.project.title);\n      } catch (e) {\n        console.error('Could not get Project Id: ', id, e );\n      }\n    };\n\n    getProjectName();\n\n    return () => {\n    };\n\n  }, [ api, id, name ]);\n\n  return (\n    <ApiContext.Consumer>\n      { () => (\n        <>\n          <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n            <Row>\n              <Col sm={ 12 }>\n                <Breadcrumb items={ genBreadcrumb(name) } />\n              </Col>\n            </Row>\n\n            <Tabs\n              id=\"controlled-tab-example\"\n              activeKey={ active }\n              onSelect={ tab => setActive(tab) }\n            >\n              <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n                <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n                  <Transcripts projectId={ id }/>\n                </Container>\n              </Tab>\n\n              <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n                <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n                  <PaperEdits projectId={ id } />\n                </Container>\n              </Tab>\n            </Tabs>\n\n          </Container>\n          <CustomFooter />\n        </>\n      ) }\n\n    </ApiContext.Consumer>\n  );\n};\n\nexport default WorkspaceView;","import React, { Component } from 'react';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor as ReactTranscriptEditor } from '@pietrop/react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n// import { Redirect } from 'react-router-dom';\nimport ApiContext from '../../../Context/ApiContext';\n\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\nimport CustomAlert from '@pietrop/digital-paper-edit-storybook/CustomAlert';\n\nclass TranscriptEditor extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      mediaUrl: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null,\n      mediaType: 'video'\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          mediaUrl: json.url,\n          mediaType: json.mediaType\n        });\n      });\n  }\n\n  saveToServer = () => {\n    const api = this.context;\n    // TODO: add Api call to save content of\n    alert('save to server');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    api.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      if (response.status === 'ok') {\n      // show message or redirect\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  // redirectToAnnotatePage = () => {\n  //   // this.state.projectId this.state.transcriptId\n  //   this.setState({\n  //     redirect: true\n  //   });\n  // }\n\n  // renderRedirect = () => {\n  //   if (this.state.redirect) {\n  //     return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n  //   }\n  // }\n\n  render() {\n    return (\n      <>\n        {/* {this.renderRedirect()} */}\n        <Container style={ { marginBottom: '5em' } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <Breadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson &&\n          <ReactTranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.mediaUrl }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            title={ this.state.transcriptTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n            mediaType={ this.state.mediaType }\n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptEditor;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n  // console.log('results', results);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@pietrop/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\nimport removePunctuation from '../../../../Util/remove-punctuation';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiContext from '../../../Context/ApiContext';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' api.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations\n        });\n      });\n  }\n\n  onLabelCreate = (newLabel) => {\n    const api = this.context;\n    api.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    const api = this.context;\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    api.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    const api = this.context;\n    api.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const api = this.context;\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      api.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const api = this.context;\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    api.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via api\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const api = this.context;\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      api.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    const cardBodyHeight = this.props.mediaType === 'audio' ? '100vh' : '60vh';\n\n    let transcriptMediaCard;\n\n    if (this.props.mediaType === 'audio') {\n      transcriptMediaCard = (\n        <Card.Header>\n          <audio\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              width: '100%',\n              height: '200px',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    } else {\n      transcriptMediaCard = (\n        <Card.Header>\n          <video\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              marginTop: '0',\n              width: '100%',\n              height: '200px',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    }\n\n    return (\n      <>\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        <Card>\n          {transcriptMediaCard}\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } >\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: cardBodyHeight, overflow: 'scroll' } }\n          >\n\n            {highlights}\n\n            {this.props.transcript &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\nimport cuid from 'cuid';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ cuid() }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ cuid() } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            mediaType={ transcript.mediaType }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n   * TODO: at the moment only works for selections within a paragraph\n   * @param {*} e - browser event\n   * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n   */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport cuid from 'cuid';\nimport PreviewCanvas from '@pietrop/digital-paper-edit-storybook/PreviewCanvas';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@pietrop/aes31-adl-composer';\nimport jsonToFCPX from '@pietrop/fcpx-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScriptContainer from '@pietrop/digital-paper-edit-storybook/ProgrammeScriptContainer';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs';\nimport ApiContext from '../../../Context/ApiContext';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\n\nclass ProgrammeScript extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      width: 150,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ],\n    };\n  }\n\n  updateVideoContextWidth = () => {\n    const maxScreenSizeForResponsivness = 350;\n    const newOffset = this.card.offsetWidth - 10;\n    const newOffsetAdjustedForLargeScreen = newOffset >= maxScreenSizeForResponsivness? maxScreenSizeForResponsivness : newOffset;\n    this.setState({\n      width:newOffsetAdjustedForLargeScreen\n    });\n  }\n\n  getTranscript = (transcriptId) => {\n    return this.props.transcripts.find((tr) => tr.id === transcriptId );\n  }\n\n  getPlayList = () => {\n    let startTime = 0;\n\n    return this.state.programmeScript.elements.filter((element) => element.type === 'paper-cut')\n      .map((element) => {\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const transcript = this.getTranscript(element.transcriptId);\n        const result = {\n          type:'video',\n          start: startTime,\n          sourceStart: element.start,\n          duration: element.end - element.start,\n          src: transcript.url\n        };\n\n        startTime += result.duration;\n\n        return result;\n      });\n  };\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript,\n          resetPreview: true\n        });\n\n      });\n    this.updateVideoContextWidth();\n    window.addEventListener('resize', this.updateVideoContextWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateVideoContextWidth);\n  }\n\n  componentDidUpdate() {\n    if (this.state.resetPreview) {\n      this.handleUpdatePreview();\n    }\n  }\n\n  // TODO: save to server\n  handleReorder = (list) => {\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript,\n        resetPreview: true\n      };\n    });\n  }\n\n  // TODO: save to server\n  handleDelete = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript,\n        resetPreview: true\n      };\n    });\n  }\n\n  handleEdit = (i) => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript,\n        resetPreview: true\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript,\n        resetPreview: true\n      });\n\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    if (result) {\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      let newElement;\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n      } else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n        });\n      }\n      // add element just above of insert point\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript,\n        resetPreview: true\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    // const result = generateADL(edlSq);\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: firstElement.fps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          ...element,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log(edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text;}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleUpdatePreview = () => {\n    const playlist = this.getPlayList();\n    // Workaround to mound and unmount the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const api = this.context;\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      api.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  // information around progressbar in the playlist object\n  render() {\n    return (\n      <>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n        </h2>\n        <Card>\n          <Card.Header ref={ el => (this.card = el) }>\n            { !this.state.resetPreview ?\n              <PreviewCanvas width={ this.state.width } playlist={ this.state.playlist } />\n              : null }\n          </Card.Header>\n\n          <Card.Header>\n            <Row noGutters>\n              <Col sm={ 12 } md={ 3 } >\n                <Button\n                  // block\n                  variant=\"outline-secondary\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                  title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 2 } >\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faPlus } />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faHeading } /> Heading\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faStickyNote } /> Note\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 3 } >\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faShare } /> Export\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ this.handleExportEDL }\n                      title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                    >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                    >\n                      {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportFCPX }\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                    >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                    >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {alert('export word doc not implemented yet');} }\n                      title=\"export docx, export the programme script as a word document\"\n                    >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                    >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 1 } >\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleSaveProgrammeScript }\n                  // size=\"sm\"\n                  title=\"save programme script\"\n                  block\n                >\n                  <FontAwesomeIcon icon={ faSave } />\n                  {/* Save */}\n                </Button>\n              </Col>\n            </Row>\n          </Card.Header>\n\n          <Card.Body>\n            <article\n              style={ { height: '60vh', overflow: 'scroll' } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScriptContainer\n                items={ this.state.programmeScript.elements }\n                handleReorder={ this.handleReorder }\n                handleDelete={ this.handleDelete }\n                handleEdit={ this.handleEdit }\n\n              />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nProgrammeScript.propTypes = {\n  papereditId: PropTypes.any,\n  projectId: PropTypes.any,\n  transcripts: PropTypes.any\n};\n\nexport default ProgrammeScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgrammeScript from './ProgrammeScript';\nimport ApiContext from '../../Context/ApiContext';\nimport PropTypes from 'prop-types';\n\nclass PaperEditor extends Component {\n  static contextType = ApiContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: null,\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      videoHeight : '10em',\n    };\n  }\n\n  componentDidMount = async () => {\n    const api = this.context;\n\n    api.getProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <br/>\n        <Row>\n          <Col sm={ 12 } >\n            <Breadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts ?\n                <ProgrammeScript\n                  projectId={ this.state.projectId }\n                  papereditId={ this.state.papereditId }\n                  transcripts={ this.state.transcripts }\n                  videoHeight={ this.props.videoHeight }\n                /> : null\n              }\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nPaperEditor.propTypes = {\n  match: PropTypes.any,\n  videoHeight: PropTypes.any\n};\n\nexport default PaperEditor;\n","import React from 'react';\nimport Projects from './Components/Projects/index.js';\nimport Workspace from './Components/Workspace';\nimport TranscriptEditor from './Components/Workspace/Transcripts/TranscriptEditor.js';\nimport PaperEditor from './Components/PaperEditor';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\n// class DebugRouter extends HashRouter {\n//   constructor(props) {\n//     super(props);\n//     console.log('initial history is: ', JSON.stringify(this.history, null, 2));\n//     this.history.listen((location, action) => {\n//       console.log(\n//         `The current URL is ${ location.pathname }${ location.search }${ location.hash }`\n//       );\n//       console.log(`The last navigation action was ${ action }`, JSON.stringify(this.history, null, 2));\n//     });\n//   }\n// }\n\nconst PageNotFound = () => {\n  return (<div>\n    <h1>404 Page Not Found</h1>\n    <p>There was an error loading the page you requested!</p>\n  </div>\n  );\n};\n\nconst Routes = () => {\n  return (\n    <HashRouter basename='/'>\n      <Switch>\n        <Route exact path=\"/\" component={ Projects } />\n        <Route exact path=\"/projects\" component={ Projects } />\n        <Route exact path=\"/projects/:projectId\" component={ Workspace } />\n\n        <Route\n          exact\n          path=\"/projects/:projectId/paperedits/:papereditId\"\n          component={ PaperEditor }\n        />\n\n        <Route\n          exact\n          path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n          component={ TranscriptEditor }\n        />\n\n        <Route component={ PageNotFound } />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport 'bootstrap-css-only/css/bootstrap.css';\nimport ApiContext from './Context/ApiContext';\nimport CustomAlert from '@pietrop/digital-paper-edit-storybook/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\nimport Routes from './Routes';\nimport ApiWrapper from './ApiWrapper';\n\nconst demoWarningMessage = (\n  <>\n    <p> This is a demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n    >see project Github repository for more info</Alert.Link>.\n    </p>\n    <p>This is a read-only demo you can only play around with existing projects!</p>\n  </>\n);\n\nconst App = () => {\n\n  // TODO: remove unused rootes\n  let envWarning = null;\n  let offlineWarning = null;\n\n  if (process.env.REACT_APP_NODE_ENV === 'demo') {\n    envWarning = (\n      <Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Demo mode' }\n          message={ demoWarningMessage }/>\n      </Container>\n    );\n  }\n\n  if (!navigator.onLine) {\n    offlineWarning = (\n      <>\n        <br/>\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Offline warning' }\n            message={ 'You don\\'t seem to be connected to the internet ' }/>\n        </Container>\n      </>);\n  }\n\n  return (\n    <>\n      {envWarning}\n      {offlineWarning}\n      <ApiContext.Provider value={ ApiWrapper }>\n        <Routes />\n      </ApiContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}