{"version":3,"sources":["Components/PaperEditor/Transcripts/Paragraphs/index.module.css","Util/which-js-env/index.js","Context/ApiContext.js","Components/lib/CustomFooter/index.js","Util/array-match/index.js","Components/lib/ItemsContainer/index.js","Util/in-text/index.js","Context/reducers.js","Components/Projects/index.js","Components/Workspace/Transcripts/index.js","Components/Workspace/PaperEdits/index.js","Components/Workspace/index.js","Components/Workspace/Transcripts/TranscriptEditor.js","Components/PaperEditor/Transcripts/LabelsList/select-color-styles.js","Components/PaperEditor/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEditor/Transcripts/SearchBar/index.js","Components/PaperEditor/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEditor/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEditor/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEditor/Transcripts/Paragraphs/Word.js","Components/PaperEditor/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEditor/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEditor/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEditor/Transcripts/Paragraphs/index.js","Components/PaperEditor/Transcripts/LabelsList/css-color-names.js","Components/PaperEditor/Transcripts/LabelsList/LabelForm.js","Components/PaperEditor/Transcripts/LabelsList/LabelModal.js","Components/PaperEditor/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEditor/Transcripts/get-user-selection.js","Components/PaperEditor/Transcripts/Transcript.js","Components/PaperEditor/Transcripts/index.js","Components/PaperEditor/ProgrammeScript/get-data-from-user-selection.js","Components/PaperEditor/ProgrammeScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEditor/ProgrammeScript/index.js","Components/PaperEditor/index.js","Routes.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","whichJsEnv","undefined","window","process","versions","node","env","REACT_APP_NODE_ENV","electron","cep","chdir","__dirname","err","console","log","error","ApiContext","createContext","CustomFooter","footer","Navbar","collapseOnSelect","expand","bg","variant","fixed","className","icon","faFlask","href","target","rel","Row","Col","arraysMatch","arr1","arr2","length","i","initialFormState","title","description","id","formReducer","state","type","payload","ItemsContainer","props","searchEl","showItems","useState","items","setItems","showModal","setShowModal","useReducer","formData","dispatchForm","toggleShowModal","useEffect","arrayMatch","handleSearch","text","results","map","item","arr","sourceText","find","findText","toLowerCase","trim","includes","inText","display","handleFilterDisplay","handleEditItem","handleDeleteItem","handleDelete","sm","xs","Button","onClick","size","block","modalTitle","handleOnHide","handleSaveForm","handleSave","itemType","defaultProps","updateItem","newItem","newItems","index","findIndex","Object","assign","deleteItem","filter","addItem","Projects","isFetch","setIsFetch","api","useContext","createProject","a","async","response","ok","newProject","project","updateProject","allProjects","getAllProjects","result","key","url","getProjects","breadcrumbItems","name","link","Container","data-testid","style","marginBottom","marginTop","model","deleteProject","Transcripts","isInProgress","setIsInProgress","interval","setInterval","transcripts","getTranscripts","projectId","transcript","setTimeout","status","clearInterval","updateTranscript","editedTranscript","pe","originalTranscript","createTranscript","newTranscript","deleteTranscript","Consumer","PaperEdits","getAllPaperEdits","allPaperEdits","paperEdits","paperEdit","updatePaperEdit","paperedit","createPaperEdit","newPaperEdit","deletePaperEdit","genBreadcrumb","WorkspaceView","match","params","active","setActive","setName","getProject","getProjectName","Tabs","activeKey","onSelect","tab","Tab","eventKey","TranscriptEditor","componentDidMount","context","getTranscript","transcriptId","then","json","setState","projectTitle","transcriptTitle","transcriptJson","mediaUrl","mediaType","saveToServer","alert","data","transcriptEditorRef","current","getEditorContent","savedNotification","dismissable","heading","message","catch","e","React","createRef","fluid","md","ld","xl","this","transcriptData","isEditable","sttJsonType","ref","Component","contextType","colourStyles","control","styles","backgroundColor","option","isDisabled","tmpColor","isFocused","isSelected","color","borderLeft","borderColor","cursor","multiValue","border","multiValueLabel","multiValueRemove","speakersColorStyles","SearchBar","handleToggleSearchTextPreferences","showTextSearchPreferences","handleToggleSearchLabelsPreferences","showLabelsSearchPreferences","handleToggleSearchSpeakersPreferences","showSpeakersSearchPreferences","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleToggleAll","handleHideAll","Card","Header","InputGroup","Prepend","Text","faSearch","FormControl","onChange","placeholder","aria-label","aria-describedby","DropdownButton","drop","as","Append","faFilter","Dropdown","Item","faTag","faCheck","faUser","faAlignJustify","Divider","value","isMulti","isSearchable","options","labelsOptions","speakersOptions","Form","Check","checked","label","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","speaker","forEach","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","push","addWordsToSpeakersParagraphs","findAnnotationInParagraph","annotations","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","annotation","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","data-paragraph-text","paragraphTextWithoutPunctuation","lg","width","speakerName","toUpperCase","shortTimecode","unselectable","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","dec","Math","floor","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","role","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","annotationId","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","faPen","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","labelId","wordEl","note","csscolors","colorNamesList","freeze","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","onLabelSaved","handleClose","Group","controlId","Label","Control","defaultValue","onInput","rows","faSyncAlt","triangle","onChangeComplete","colors","LabelModal","show","handleShow","openBtn","Modal","onHide","closeButton","Title","Body","LabelsList","removeLabel","confirm","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup","disabled","faTimes","labelsList","height","overflowY","overflowX","isLabelsListOpen","faTags","faCog","Footer","onlyCallOnce","cb","duration","timer","args","arguments","clearTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","has","set","Transcript","getAllAnnotations","createLabel","labels","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","currentTime","play","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","res","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","element","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","JSON","parse","stringify","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","showLabelsReference","getCurrentWordTime","currentWordTime","transcriptMediaCard","time","round","highlights","scoped","cardBodyHeight","src","onTimeUpdate","controls","ButtonGroup","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","onDoubleClick","overflow","transcriptsElNav","Nav","cuid","Link","faClock","faExclamationTriangle","transcriptsElTab","Pane","defaultActiveKey","Content","parseWordElDataset","innerText","getDataFromUserWordsSelection","Array","from","w","isOneParagraph","firstword","ProgrammeScript","updateVideoContextWidth","newOffset","card","offsetWidth","newOffsetAdjustedForLargeScreen","tr","getPlayList","startTime","programmeScript","elements","sourceStart","getPaperEdit","papereditId","resetPreview","addEventListener","handleReorder","list","handleEdit","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","insertPointElement","el","handleAddTranscriptSelectionToProgrammeScript","previousWordSpeaker","currentParagraph","paragraphsResult","divideWordsSelectionsIntoParagraphs","reverse","getSequenceJsonEDL","edlSq","programmeScriptPaperCutsWithId","currentTranscript","endTime","reelName","metadata","clipName","fps","offset","timecode","sampleRate","events","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","firstElement","generateADL","projectOriginator","edits","event","frameRate","projectName","handleExportFCPX","jsonToFCPX","getProgrammeScriptJson","programmeScriptJsonToText","edlsqJson","body","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleExportTxt","handleUpdatePreview","playlist","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","removeEventListener","noGutters","faPlus","faHeading","faMicrophoneAlt","faShare","faInfoCircle","faSave","PaperEditor","getProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","videoHeight","faAngleDown","faAngleUp","span","PageNotFound","Routes","basename","exact","path","component","Workspace","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","applicationType","mode","headers","corsFetch","fetch","ApiWrapper","projectsIdUrl","projectsUrl","transcriptsUrl","transcriptsIdUrl","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","labelsUrl","labelsIdUrl","labelsId","baseUrl","API_URL","projects","resProject","paperedits","transcriptResult","getAllLabels","labelsResults","annotationsResult","transcriptsResult","Promise","all","transcriptsJson","annotationsJson","currentAnnotationsSet","paperEditResult","projectResult","DemoApiWrapper","_id","p","transcriptsData","defaultLabel","unshift","statusCode","jsENV","dynamicApiWrapper","debug","demoApiWrapper","apiWrapper","electronWrapper","ElectronWrapper","demoWarningMessage","Alert","App","envWarning","offlineWarning","navigator","onLine","Provider","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f73dccf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__2hb7q\",\"unselectable\":\"Paragraphs_unselectable__-gkJp\",\"highlightedWord\":\"Paragraphs_highlightedWord__2R7lz\"};","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n  // Is browser Eg client side app or locally testing (Node)\n  if ( window.process === undefined || (window.process.versions === undefined || window.process.versions.node === undefined) ) {\n    if ( window.process !== undefined && window.process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  }\n\n  if (window.process.versions.electron && window.process.versions.electron !== undefined) {\n    return 'electron';\n  }\n\n  if (window.process.versions.cep !== undefined) {\n    //   console.debug('In Adobe CEP Environment');\n    //   console.info('In Chromium v: ', window.process.versions.chromium);\n    //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n    //   console.info('adjusting current working directory for Adobe CEP');\n    //   console.log('Starting directory: ' + process.cwd());\n    try {\n      process.chdir(__dirname);\n      // process.chdir('..');\n      // console.log('New directory: ' + process.cwd());\n    } catch (err) {\n      console.log('chdir: ' + err);\n    }\n\n    return 'cep';\n  }\n\n  console.error(\"couldn't determine the js environment\");\n\n  return undefined;\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import { createContext } from 'react';\n\nconst ApiContext = createContext(); // initialised by App.js\n\nexport default ApiContext;","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","const arraysMatch = (arr1, arr2) => {\n  if (arr1.length !== arr2.length) return false;\n  for (var i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) return false;\n  }\n\n  return true;\n};\n\nexport default arraysMatch;","import React, { useState, useEffect, useReducer } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\n\nimport { anyInText } from '../../../Util/in-text';\nimport arrayMatch from '../../../Util/array-match';\nimport List from '@pietrop/digital-paper-edit-storybook/List';\nimport SearchBar from '@pietrop/digital-paper-edit-storybook/SearchBar';\nimport FormModal from '@pietrop/digital-paper-edit-storybook/FormModal';\n\nconst initialFormState = {\n  title: '',\n  description: '',\n  id: null\n};\n\nconst formReducer = (state = initialFormState, { type, payload }) => {\n  switch (type) {\n  case 'update':\n    return { ...state, ...payload };\n  case 'reset': {\n    return { initialFormState };\n  }\n  default:\n    return state;\n  }\n};\n\nconst ItemsContainer = (props) => {\n  const type = props.type;\n  const [ items, setItems ] = useState([]);\n\n  const [ showModal, setShowModal ] = useState(false);\n  const [ formData, dispatchForm ] = useReducer(formReducer, initialFormState);\n\n  // The form works both for new/create and edit/update\n  const handleSaveForm = (item) => {\n    props.handleSave(item);\n    setShowModal(false);\n    dispatchForm({ type: 'reset' });\n  };\n\n  const handleEditItem = (id) => {\n    const item = items.find((i) => i.id === id);\n    dispatchForm({\n      type: 'update',\n      payload: item\n    });\n    setShowModal(true);\n  };\n\n  const handleDeleteItem = (id) => {\n    props.handleDelete(id);\n  };\n\n  const handleFilterDisplay = (item, text) => {\n    if (anyInText([ item.title, item.description ], text)) {\n      item.display = true;\n    } else {\n      item.display = false;\n    }\n\n    return item;\n  };\n\n  const handleSearch = text => {\n    const results = items.map(item => handleFilterDisplay(item, text));\n    setItems(results);\n  };\n\n  const toggleShowModal = () => {\n    console.log('toggle', !showModal);\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    if (!arrayMatch(props.items, items)) {\n      setItems(props.items);\n    }\n\n    return () => {\n\n    };\n\n  }, [ items, props.items ]);\n\n  let searchEl;\n  let showItems;\n\n  if (items.length > 0) {\n    searchEl = <SearchBar handleSearch={ handleSearch } />;\n    showItems = (\n      <List\n        type={ props.type }\n        items={ items }\n        handleEditItem={ handleEditItem }\n        handleDeleteItem={ handleDeleteItem }\n      />\n    );\n\n  } else {\n    showItems = (<i>There are no {type}s, create a new one to get started.</i>);\n  }\n\n  return (\n    <>\n      <Row>\n        <Col sm={ 9 } >\n          {searchEl}\n        </Col>\n        <Col xs={ 12 } sm={ 3 } >\n          <Button onClick={ toggleShowModal }\n            variant=\"outline-secondary\"\n            size=\"sm\" block>\n                New {type}\n          </Button>\n        </Col>\n      </Row>\n      {showItems}\n      <FormModal\n        { ...formData }\n        modalTitle={ formData.id ? `Edit ${ type }` : `New ${ type }` }\n        showModal={ showModal }\n        handleOnHide={toggleShowModal}\n        handleSaveForm={ handleSaveForm }\n        itemType={ type.toLowerCase }\n      />\n    </>\n  );\n};\n\nItemsContainer.propTypes = {\n  handleSave: PropTypes.any,\n  handleDelete: PropTypes.any,\n  items: PropTypes.array.isRequired,\n  type: PropTypes.string\n};\n\nItemsContainer.defaultProps = {\n  type: 'Project'\n};\n\nexport default ItemsContainer;\n","const inText = (findText, sourceText) => {\n  return findText.toLowerCase().trim().includes(sourceText.toLowerCase().trim());\n};\n\nconst anyInText = (arr, sourceText) => {\n  return arr.find(findText => {\n    return inText(findText, sourceText);\n  });\n};\n\nexport { inText, anyInText } ;","const updateItem = (id, newItem, items) => {\n  const newItems = items;\n  const index = items.findIndex(item => item.id === id);\n  Object.assign(newItems[index], newItem);\n\n  return newItems;\n};\n\nconst deleteItem = (id, items) => {\n  const newItems = items.filter(item => item.id !== id);\n\n  return newItems;\n};\n\nconst addItem = (item, items) => {\n  return [ ...items, item ];\n};\n\nconst itemsReducer = (state, action) => {\n  switch (action.type) {\n  case 'update':\n    return {\n      ...state,\n      items: action.items\n    };\n  case 'updateItem':\n    return {\n      ...state,\n      items: updateItem(action.id, action.item, state.items)\n    };\n  case 'add':\n    return {\n      ...state,\n      items: [ ...state.items, action.newItem ]\n    };\n  case 'delete':\n    return {\n      ...state,\n      items: deleteItem(action.id, state.items)\n    };\n  default:\n    return state;\n  }\n};\n\nconst reducers = ({ projects }, action) => {\n  return {\n    projects: itemsReducer(projects, action)\n  };\n};\n\nexport { reducers, updateItem, deleteItem, addItem };","import React, { useEffect, useState, useContext } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ItemsContainer from '../lib/ItemsContainer';\nimport ApiContext from '../../Context/ApiContext';\nimport { deleteItem, updateItem, addItem } from '../../Context/reducers';\n\nconst Projects = () => {\n  const [ isFetch, setIsFetch ] = useState(false);\n  const [ items, setItems ] = useState([]);\n\n  const type = 'Project';\n  const api = useContext(ApiContext);\n\n  const createProject = async (item) => {\n    const response = await api.createProject(item);\n    if (response.ok) {\n      const newProject = response.project;\n      newProject.display = true;\n      const newItems = addItem(newProject, items);\n      setItems(newItems);\n    } else {\n      console.error('Failed to add project', item);\n    }\n  };\n\n  const updateProject = async (id, item) => {\n    const response = await api.updateProject(id, item);\n\n    if (response.ok) {\n      const project = response.project;\n      project.display = true;\n      const newItems = updateItem(id, project, items);\n      setItems(newItems);\n    }\n  };\n\n  const handleSave = async (item) => {\n    if (item.id) {\n      return await updateProject(item.id, item);\n    } else {\n      return await createProject(item);\n    }\n  };\n\n  const deleteProject = async (id) => {\n    let response;\n    try {\n      response = await api.deleteProject(id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deleteProject', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    console.log('handle delete');\n    const response = deleteProject(id);\n    if (response.ok) {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  useEffect(() => {\n    const getProjects = async () => {\n      let allProjects = [];\n\n      try {\n        const result = await api.getAllProjects();\n        allProjects = result.map(project => {\n          const id = project.id;\n          project.key = id;\n          project.url = `/projects/${ id }`;\n          project.display = true;\n\n          return project;\n        });\n\n      } catch (e) {\n        console.log('Failed to get projects');\n      }\n\n      setItems(allProjects);\n    };\n\n    if (!isFetch) {\n      getProjects();\n      setIsFetch(true);\n    }\n\n    return () => {\n    };\n\n  }, [ api, isFetch, items ]);\n\n  const breadcrumbItems = [\n    {\n      name: `${ type }s`,\n      link: `/${ type }s`,\n    }\n  ];\n\n  return (\n    <>\n      <Container\n        data-testid='projectsContainer'\n        style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 }>\n            <Breadcrumb\n              data-testid='projectsBreadcrumb'\n              items={ breadcrumbItems } />\n          </Col>\n        </Row>\n        <ItemsContainer\n          key={ type }\n          model={ type }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      </Container>\n      <CustomFooter />\n    </>\n  );\n};\nexport default Projects;\n","import React, { useEffect, useState, useContext } from 'react';\nimport ItemsContainer from '../../lib/ItemsContainer';\nimport PropTypes from 'prop-types';\nimport { deleteItem, updateItem, addItem } from '../../../Context/reducers';\nimport ApiContext from '../../../Context/ApiContext';\nconst intervalInMs = 30000;\n\nconst Transcripts = (props) => {\n  const api = useContext(ApiContext);\n  const [ isFetch, setIsFetch ] = useState(false);\n  const [ items, setItems ] = useState([]);\n  const [ isInProgress, setIsInProgress ] = useState(false);\n  const [ interval, setInterval ] = useState();\n  \n\n  const isTranscriptionInProgress = (transcripts) => {\n    if (transcripts.length !== 0) {\n      const result = transcripts.find((transcript) => {\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  };\n\n  useEffect(() => {\n    const genUrl = (id) => {\n      return `#/projects/${ props.projectId }/transcripts/${ id }/correct`;\n    };\n\n    const getTranscripts = async () => {\n      const response = await api.getTranscripts(props.projectId);\n\n      const newItems = response.transcripts.map((transcript) => {\n        transcript.display = true;\n        transcript.url = genUrl(transcript.id);\n        transcript.projectId = props.projectId;\n\n        return transcript;\n      });\n      setItems(newItems);\n    };\n\n    if (!isFetch) {\n      getTranscripts();\n      setIsFetch(true);\n    }\n\n    // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly,\n    // and only if there are items in progress in the list, it checks the backed for updates\n    if (isInProgress && !interval) {\n      setInterval(setTimeout(() => {\n        getTranscripts();\n      }, intervalInMs));\n    }\n\n    if (items.length > 0) {\n      setIsInProgress(isTranscriptionInProgress(items));\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [ api, interval, isFetch, isInProgress, items, props.projectId ]);\n\n  const updateTranscript = async (id, item) => {\n    const queryParamsOptions = false;\n    const response = await api.updateTranscript(\n      props.projectId,\n      id,\n      queryParamsOptions,\n      item\n    );\n\n    if (response.ok) {\n      const editedTranscript = response.transcript;\n      const index = items.findIndex(pe => pe.id === id);\n      const originalTranscript = items[index];\n\n      editedTranscript.display = true;\n      editedTranscript.status = originalTranscript.status;\n      const newItems = updateItem(id, editedTranscript, items);\n      setItems(newItems);\n    } else {\n      console.log('api.updateTranscript', response);\n    }\n  };\n\n  const createTranscript = async (item) => {\n    const response = await api.createTranscript(item);\n    if (response.ok) {\n      const newTranscript = response.transcript;\n\n      newTranscript.display = true;\n      newTranscript.status = 'in-progress';\n\n      const newItems = addItem(newTranscript, items);\n      setItems(newItems);\n    } else {\n      console.log('api.updateTranscript', response);\n    }\n  };\n\n  const handleSave = (item) => {\n    if (item.id) {\n      return updateTranscript(item.id, item);\n    } else {\n      return createTranscript(item);\n    }\n  };\n\n  const deleteTranscript = async (id) => {\n    console.log(api);\n    let response;\n    try {\n      response = await api.deleteTranscript(props.projectId, id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deleteTranscript', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    const response = deleteTranscript(id);\n    if (response.ok) {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  return (\n    <ApiContext.Consumer>\n      {() => (\n        <ItemsContainer\n          type={ 'transcript' }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      )}\n    </ApiContext.Consumer>\n  );\n};\n\nTranscripts.propTypes = {\n  projectId: PropTypes.any\n};\n\nexport default Transcripts;\n","import React, { useEffect, useState, useContext } from 'react';\nimport ItemsContainer from '../../lib/ItemsContainer';\nimport PropTypes from 'prop-types';\nimport { deleteItem, updateItem, addItem } from '../../../Context/reducers';\nimport ApiContext from '../../../Context/ApiContext';\n\nconst PaperEdits = (props) => {\n  const api = useContext(ApiContext);\n  const [ items, setItems ] = useState([]);\n  const type = 'Paper Edit';\n  const [ isFetch, setIsFetch ] = useState(false);\n\n  useEffect(() => {\n    const genUrl = (id) => {\n      return `/projects/${ props.projectId }/paperedits/${ id }`;\n    };\n\n    const getAllPaperEdits = async () => {\n      const allPaperEdits = await api.getAllPaperEdits(props.projectId);\n\n      const paperEdits = allPaperEdits.map(paperEdit => {\n        paperEdit.display = true;\n        paperEdit.url = genUrl(paperEdit.id);\n        paperEdit.projectId = props.projectId;\n\n        return paperEdit;\n      });\n      setItems(paperEdits);\n\n    };\n    // TODO: some error handling\n    if (!isFetch) {\n      getAllPaperEdits();\n      setIsFetch(true);\n    }\n\n    return () => {\n    };\n  }, [ api, isFetch, items, props.projectId ]);\n\n  const createPaperEdit = async (item) => {\n    const response = await api.createPaperEdit(props.projectId, item);\n    if (response.ok) {\n      const newPaperEdit = response.paperedit;\n      newPaperEdit.display = true;\n      // newPaperEdit.url = genUrl(newPaperEdit.id);\n\n      const newItems = addItem(newPaperEdit, items);\n      setItems(newItems);\n    } else {\n      console.log('api.createPaperEdit', response);\n    }\n  };\n\n  const updatePaperEdit = async (id, item) => {\n    const response = await api.updatePaperEdit(props.projectId, id, item);\n    const paperEdit = response.paperedit;\n\n    if (response.ok && paperEdit) {\n      paperEdit.display = true;\n\n      const newItems = updateItem(id, paperEdit, items);\n      setItems(newItems);\n    } else {\n      console.log('api.createPaperEdit', response);\n    }\n  };\n\n  const handleSave = (item) => {\n    if (item.id) {\n      return updatePaperEdit(item.id, item);\n    } else {\n      return createPaperEdit(item);\n    }\n  };\n\n  const deletePaperEdit = async (id) => {\n    let response;\n    try {\n      response = await api.deletePaperEdit(props.projectId, id);\n    } catch (e) {\n      console.log(e);\n    }\n    console.log('api.deletePaperEdit', response);\n\n    return response;\n  };\n\n  const handleDelete = (id) => {\n    console.log('handle delete');\n    const response = deletePaperEdit(id);\n    if (response.ok) {\n      const newItems = deleteItem(id, items);\n      setItems(newItems);\n    }\n  };\n\n  return (\n    <ApiContext.Consumer>\n      {() => (\n        <ItemsContainer\n          type={ type }\n          items={ items }\n          handleSave={ handleSave }\n          handleDelete={ handleDelete }\n        />\n      )}\n    </ApiContext.Consumer>\n\n  );\n};\n\nPaperEdits.propTypes = {\n  projectId: PropTypes.any\n};\n\nexport default PaperEdits;\n","import React, { useState, useEffect, useContext } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport Transcripts from './Transcripts';\nimport PaperEdits from './PaperEdits';\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\n\nimport ApiContext from '../../Context/ApiContext';\n\nconst genBreadcrumb = (name) => [\n  {\n    name: 'Projects',\n    link: '/projects'\n  },\n  {\n    name: name\n  }\n];\n\nconst WorkspaceView = (props) => {\n  const api = useContext(ApiContext);\n  const id = props.match.params.projectId;\n\n  const [ active, setActive ] = useState('transcripts');\n  const [ name, setName ] = useState('Project Name');\n\n  useEffect(() => {\n\n    const getProjectName = async () => {\n      try {\n        const response = await api.getProject(id);\n        setName(response.project.title);\n      } catch (e) {\n        console.error('Could not get Project Id: ', id, e );\n      }\n    };\n\n    getProjectName();\n\n    return () => {\n    };\n\n  }, [ api, id, name ]);\n\n  return (\n    <ApiContext.Consumer>\n      { () => (\n        <>\n          <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n            <Row>\n              <Col sm={ 12 }>\n                <Breadcrumb items={ genBreadcrumb(name) } />\n              </Col>\n            </Row>\n\n            <Tabs\n              id=\"controlled-tab-example\"\n              activeKey={ active }\n              onSelect={ tab => setActive(tab) }\n            >\n              <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n                <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n                  <Transcripts projectId={ id }/>\n                </Container>\n              </Tab>\n\n              <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n                <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n                  <PaperEdits projectId={ id } />\n                </Container>\n              </Tab>\n            </Tabs>\n\n          </Container>\n          <CustomFooter />\n        </>\n      ) }\n\n    </ApiContext.Consumer>\n  );\n};\n\nexport default WorkspaceView;","import React, { Component } from 'react';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor as ReactTranscriptEditor } from '@pietrop/react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n// import { Redirect } from 'react-router-dom';\nimport ApiContext from '../../../Context/ApiContext';\n\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\nimport CustomAlert from '@pietrop/digital-paper-edit-storybook/CustomAlert';\n\nclass TranscriptEditor extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      mediaUrl: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null,\n      mediaType: 'video'\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          mediaUrl: json.url,\n          mediaType: json.mediaType\n        });\n      });\n  }\n\n  saveToServer = () => {\n    const api = this.context;\n    // TODO: add Api call to save content of\n    alert('save to server');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    api.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      if (response.ok) {\n      // show message or redirect\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  // redirectToAnnotatePage = () => {\n  //   // this.state.projectId this.state.transcriptId\n  //   this.setState({\n  //     redirect: true\n  //   });\n  // }\n\n  // renderRedirect = () => {\n  //   if (this.state.redirect) {\n  //     return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n  //   }\n  // }\n\n  render() {\n    return (\n      <>\n        {/* {this.renderRedirect()} */}\n        <Container style={ { marginBottom: '5em' } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <Breadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson &&\n          <ReactTranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.mediaUrl }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            title={ this.state.transcriptTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n            mediaType={ this.state.mediaType }\n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptEditor;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n  // console.log('results', results);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from '@pietrop/react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\nimport removePunctuation from '../../../../Util/remove-punctuation';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiContext from '../../../Context/ApiContext';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' api.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations\n        });\n      });\n  }\n\n  onLabelCreate = (newLabel) => {\n    const api = this.context;\n    api.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    const api = this.context;\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    api.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    const api = this.context;\n    api.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const api = this.context;\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      api.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const api = this.context;\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    api.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via api\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const api = this.context;\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      api.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    const cardBodyHeight = this.props.mediaType === 'audio' ? '100vh' : '60vh';\n\n    let transcriptMediaCard;\n\n    if (this.props.mediaType === 'audio') {\n      transcriptMediaCard = (\n        <Card.Header>\n          <audio\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              width: '100%',\n              height: '200px',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    } else {\n      transcriptMediaCard = (\n        <Card.Header>\n          <video\n            src={ this.props.url }\n            ref={ this.videoRef }\n            onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n            style={ {\n              marginTop: '0',\n              width: '100%',\n              height: '200px',\n              backgroundColor: 'black'\n            } }\n            controls/>\n        </Card.Header>\n      );\n    }\n\n    return (\n      <>\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        <Card>\n          {transcriptMediaCard}\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } >\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: cardBodyHeight, overflow: 'scroll' } }\n          >\n\n            {highlights}\n\n            {this.props.transcript &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\nimport cuid from 'cuid';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ cuid() }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ cuid() } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            mediaType={ transcript.mediaType }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n   * TODO: at the moment only works for selections within a paragraph\n   * @param {*} e - browser event\n   * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n   */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Card from 'react-bootstrap/Card';\nimport cuid from 'cuid';\nimport PreviewCanvas from '@pietrop/digital-paper-edit-storybook/PreviewCanvas';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@pietrop/aes31-adl-composer';\nimport jsonToFCPX from '@pietrop/fcpx-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScriptContainer from '@pietrop/digital-paper-edit-storybook/ProgrammeScriptContainer';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs';\nimport ApiContext from '../../../Context/ApiContext';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\n\nclass ProgrammeScript extends Component {\n  static contextType = ApiContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      width: 150,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ],\n    };\n  }\n\n  updateVideoContextWidth = () => {\n    const maxScreenSizeForResponsivness = 350;\n    const newOffset = this.card.offsetWidth - 10;\n    const newOffsetAdjustedForLargeScreen = newOffset >= maxScreenSizeForResponsivness? maxScreenSizeForResponsivness : newOffset;\n    this.setState({\n      width:newOffsetAdjustedForLargeScreen\n    });\n  }\n\n  getTranscript = (transcriptId) => {\n    return this.props.transcripts.find((tr) => tr.id === transcriptId );\n  }\n\n  getPlayList = () => {\n    let startTime = 0;\n\n    return this.state.programmeScript.elements.filter((element) => element.type === 'paper-cut')\n      .map((element) => {\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const transcript = this.getTranscript(element.transcriptId);\n        const result = {\n          type:'video',\n          start: startTime,\n          sourceStart: element.start,\n          duration: element.end - element.start,\n          src: transcript.url\n        };\n\n        startTime += result.duration;\n\n        return result;\n      });\n  };\n\n  componentDidMount = () => {\n    const api = this.context;\n    api.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript,\n          resetPreview: true\n        });\n\n      });\n    this.updateVideoContextWidth();\n    window.addEventListener('resize', this.updateVideoContextWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateVideoContextWidth);\n  }\n\n  componentDidUpdate() {\n    if (this.state.resetPreview) {\n      this.handleUpdatePreview();\n    }\n  }\n\n  // TODO: save to server\n  handleReorder = (list) => {\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript,\n        resetPreview: true\n      };\n    });\n  }\n\n  // TODO: save to server\n  handleDelete = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript,\n        resetPreview: true\n      };\n    });\n  }\n\n  handleEdit = (i) => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript,\n        resetPreview: true\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript,\n        resetPreview: true\n      });\n\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    if (result) {\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      let newElement;\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n      } else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n        });\n      }\n      // add element just above of insert point\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript,\n        resetPreview: true\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    // const result = generateADL(edlSq);\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: firstElement.fps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          ...element,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log(edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text;}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleUpdatePreview = () => {\n    const playlist = this.getPlayList();\n    // Workaround to mound and unmount the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const api = this.context;\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      api.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  // information around progressbar in the playlist object\n  render() {\n    return (\n      <>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n        </h2>\n        <Card>\n          <Card.Header ref={ el => (this.card = el) }>\n            { !this.state.resetPreview ?\n              <PreviewCanvas width={ this.state.width } playlist={ this.state.playlist } />\n              : null }\n          </Card.Header>\n\n          <Card.Header>\n            <Row noGutters>\n              <Col sm={ 12 } md={ 3 } >\n                <Button\n                  // block\n                  variant=\"outline-secondary\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                  title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 2 } >\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faPlus } />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faHeading } /> Heading\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faStickyNote } /> Note\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 3 } >\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faShare } /> Export\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ this.handleExportEDL }\n                      title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                    >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                    >\n                      {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportFCPX }\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                    >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                    >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {alert('export word doc not implemented yet');} }\n                      title=\"export docx, export the programme script as a word document\"\n                    >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                    >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 1 } >\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleSaveProgrammeScript }\n                  // size=\"sm\"\n                  title=\"save programme script\"\n                  block\n                >\n                  <FontAwesomeIcon icon={ faSave } />\n                  {/* Save */}\n                </Button>\n              </Col>\n            </Row>\n          </Card.Header>\n\n          <Card.Body>\n            <article\n              style={ { height: '60vh', overflow: 'scroll' } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScriptContainer\n                items={ this.state.programmeScript.elements }\n                handleReorder={ this.handleReorder }\n                handleDelete={ this.handleDelete }\n                handleEdit={ this.handleEdit }\n\n              />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nProgrammeScript.propTypes = {\n  papereditId: PropTypes.any,\n  projectId: PropTypes.any,\n  transcripts: PropTypes.any\n};\n\nexport default ProgrammeScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport Breadcrumb from '@pietrop/digital-paper-edit-storybook/Breadcrumb';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgrammeScript from './ProgrammeScript';\nimport ApiContext from '../../Context/ApiContext';\nimport PropTypes from 'prop-types';\n\nclass PaperEditor extends Component {\n  static contextType = ApiContext;\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: null,\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      videoHeight : '10em',\n    };\n  }\n\n  componentDidMount = async () => {\n    const api = this.context;\n\n    api.getProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <br/>\n        <Row>\n          <Col sm={ 12 } >\n            <Breadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts ?\n                <ProgrammeScript\n                  projectId={ this.state.projectId }\n                  papereditId={ this.state.papereditId }\n                  transcripts={ this.state.transcripts }\n                  videoHeight={ this.props.videoHeight }\n                /> : null\n              }\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nPaperEditor.propTypes = {\n  match: PropTypes.any,\n  videoHeight: PropTypes.any\n};\n\nexport default PaperEditor;\n","import React from 'react';\nimport Projects from './Components/Projects/index.js';\nimport Workspace from './Components/Workspace';\nimport TranscriptEditor from './Components/Workspace/Transcripts/TranscriptEditor.js';\nimport PaperEditor from './Components/PaperEditor';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\n\n// class DebugRouter extends HashRouter {\n//   constructor(props) {\n//     super(props);\n//     console.log('initial history is: ', JSON.stringify(this.history, null, 2));\n//     this.history.listen((location, action) => {\n//       console.log(\n//         `The current URL is ${ location.pathname }${ location.search }${ location.hash }`\n//       );\n//       console.log(`The last navigation action was ${ action }`, JSON.stringify(this.history, null, 2));\n//     });\n//   }\n// }\n\nconst PageNotFound = () => {\n  return (<div>\n    <h1>404 Page Not Found</h1>\n    <p>There was an error loading the page you requested!</p>\n  </div>\n  );\n};\n\nconst Routes = () => {\n  return (\n    <HashRouter basename='/'>\n      <Switch>\n        <Route exact path=\"/\" component={ Projects } />\n        <Route exact path=\"/projects\" component={ Projects } />\n        <Route exact path=\"/projects/:projectId\" component={ Workspace } />\n\n        <Route\n          exact\n          path=\"/projects/:projectId/paperedits/:papereditId\"\n          component={ PaperEditor }\n        />\n\n        <Route\n          exact\n          path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n          component={ TranscriptEditor }\n        />\n\n        <Route component={ PageNotFound } />\n      </Switch>\n    </HashRouter>\n  );\n};\n\nexport default Routes;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  constructor() {\n    this.url = 'db/'; // when serving statically\n    this.projects = this.url + 'projects.json';\n    this.paperEdits = this.url + 'paperedits.json';\n    this.transcripts = this.url + 'transcripts.json';\n    this.labels = this.url + 'labels.json';\n    this.annotations = this.url + 'annotations.json';\n  }\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const response = await fetch(this.projects);\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  async getProject(id) {\n    const response = await fetch(this.projects);\n    const projects = await response.json();\n    const project = projects.find((p) => {\n      return p._id === id;\n    });\n\n    return { status: 'ok', project: project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n    console.log(data);\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n    console.log(id, data);\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n    console.log(id);\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n\n  async getTranscripts(projectId) {\n    const response = await fetch(this.transcripts);\n    const transcriptsData = await response.json();\n\n    const transcripts = transcriptsData.filter((transcript) => {\n      return transcript.projectId === projectId;\n    }).map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    console.log(projectId, formData, data);\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch(this.transcripts);\n    const transcripts = await response.json();\n    const transcript = transcripts.find((tr) => {\n      return tr._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, queryParamsOptions, data);\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId);\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch(this.annotations);\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch(this.annotations);\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, data);\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, transcriptId, annotationId);\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n\n  async getAllLabels(projectId) {\n    const response = await fetch(this.labels);\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch(this.labels);\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, data);\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, labelId, data);\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, labelId);\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n\n  async getAllPaperEdits(projectId) {\n    const response = await fetch(this.paperEdits);\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((pe) => {\n      return pe.projectId === projectId;\n    });\n\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((pe) => {\n          pe.id = pe._id;\n\n          return pe;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch(this.paperEdits);\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((pe) => {\n      return pe.id === paperEditId;\n    });\n\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, data);\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, id, data);\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n    console.log(projectId, id);\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\nconst dynamicApiWrapper = () => {\n  // await async dependencies\n  // export the module\n  console.debug(jsENV)\n\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n};\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default dynamicApiWrapper();\n","import React from 'react';\nimport 'bootstrap-css-only/css/bootstrap.css';\nimport ApiContext from './Context/ApiContext';\nimport CustomAlert from '@pietrop/digital-paper-edit-storybook/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\nimport Routes from './Routes';\nimport ApiWrapper from './ApiWrapper';\n\nconst demoWarningMessage = (\n  <>\n    <p> This is a demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n    >see project Github repository for more info</Alert.Link>.\n    </p>\n    <p>This is a read-only demo you can only play around with existing projects!</p>\n  </>\n);\n\nconst App = () => {\n\n  // TODO: remove unused rootes\n  let envWarning = null;\n  let offlineWarning = null;\n\n  if (process.env.REACT_APP_NODE_ENV === 'demo') {\n    envWarning = (\n      <Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Demo mode' }\n          message={ demoWarningMessage }/>\n      </Container>\n    );\n  }\n\n  if (!navigator.onLine) {\n    offlineWarning = (\n      <>\n        <br/>\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Offline warning' }\n            message={ 'You don\\'t seem to be connected to the internet ' }/>\n        </Container>\n      </>);\n  }\n\n  return (\n    <>\n      {envWarning}\n      {offlineWarning}\n      <ApiContext.Provider value={ ApiWrapper }>\n        <Routes />\n      </ApiContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}