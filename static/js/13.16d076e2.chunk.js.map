{"version":3,"sources":["Util/which-js-env/index.js","Components/lib/CustomBreadcrumb/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Components/lib/ListPage/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/NoNeedToConvertNotice/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/BatchTranscriptForm.js","Components/Transcripts/NewBatchTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js"],"names":["whichJsEnv","undefined","window","process","versions","electron","console","debug","cep","error","CustomBreadcrumb","breadcrumbs","this","props","items","map","item","index","link","key","to","Item","name","active","scoped","backgroundColor","Component","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","className","Prepend","onClick","Text","id","icon","faSearch","style","display","onChange","placeholder","aria-label","aria-describedby","React","ItemForm","handleTitleChange","event","title","handleDescriptionChange","description","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal","Footer","Button","variant","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","Title","modalTitle","Body","SimpleCard","handleDelete","confirm","alert","handleEdit","showLinkPath","ListGroup","Row","cursor","Col","xs","sm","md","ld","xl","Card","href","Link","size","faPen","faTrash","Subtitle","List","listItems","filter","height","overflow","Page","results","project","handleUpdateList","searchEl","length","handleShowCreateNewItemForm","block","model","CustomTranscriptCard","status","errorMessageAlert","showLink","Alert","faExclamationTriangle","errorMessage","Badge","disabled","Spinner","as","animation","role","aria-hidden","faCheck","subtitle","sttEngine","clipName","Accordion","Toggle","eventKey","Collapse","ListPageTranscript","transcript","log","itemsCards","content","projectId","lg","handleShowCreateNewBatchForm","NoNeedToConvertNotice","CustomAlert","dismissable","heading","message","rel","TranscriptForm","handleAdobeCepSetFilePath","__adobe_cep__","evalScript","response","path","basename","adobeCepFilePath","handleFileUpload","file","Array","from","files","formData","FormData","append","mediaFileSelected","sendRequest","uploading","get","data","ApiWrapper","createTranscript","then","uploadCompleted","redirect","newTranscriptId","transcriptId","catch","savedNotification","label","accept","NewTranscriptFormModal","BatchTranscriptForm","forEach","listOfFilesPath","getAll","filePath","listOfFiles","listOfFileTypes","individualFile","individualFileFormData","multiple","NewBatchTranscriptFormModal","Transcripts","componentWillUnmount","interval","clearInterval","getTranscripts","a","async","result","tmpList","transcripts","projectTitle","areThereTranscriptsInProgress","find","handleSaveItem","newItem","newitems","push","itemId","isNewItemModalShow","handleSaveBatch","itemsProps","isNewBatchModalShow","newItems","itemsList","newItemsList","handleSaveEditedItem","newEditedItem","itemIdex","findIndex","updateTranscript","ok","isEditItemModalShow","findItemById","list","p","handleEditItem","showLinkPathToItem","handleCloseBatchModal","handleCloseModalEdit","isServerError","bind","setInterval","deleteTranscript","findId","tmpNewList","Container","marginBottom","marginTop","faFileAlt","color","PaperEdits","updatePaperEdit","paperedit","createPaperEdit","handleDeleteItem","getAllPaperEdits","paperEdit","deletePaperEdit","ListPage","faColumns","Project","context","match","params","projectName","getProject","Tabs","activeKey","onSelect","Tab","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","fetch","projectsIdUrl","projectsUrl","transcriptsUrl","transcriptsIdUrl","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","env","API_URL","res","json","projects","resProject","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","annotations","papereditId","transcriptsResult","Promise","all","transcriptsJson","annotationsJson","tr","currentAnnotationsSet","getPaperEdit","paperEditResult","projectResult","programmeScript","fileName","resolve","reject","input","output","ffmpegPath","waveForm","waveFormMode","waveFormColor","DemoApiWrapper","_id","annotation","defaultLabel","unshift","statusCode","jsENV","demoApiWrapper","Object","freeze","apiWrapper","electronWrapper","ElectronWrapper","adobeCEPWrapper","AdobeCEPWrapper"],"mappings":"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","file":"static/js/13.16d076e2.chunk.js","sourcesContent":["/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n        console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n        console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      // try {\n      //   // commenting out because of error \"chdir: Error: process.chdir is not supported\"\n      //   // process.chdir(__dirname);\n      //   // process.chdir('..');\n      //   // console.log('New directory: ' + process.cwd());\n      // }\n      // catch (err) {\n      //   console.log('chdir: ' + err);\n      // }\n      return 'cep';\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <>\n      <style scoped>\n        {`\n        .breadcrumb{ \n          background-color: ${this.props.backgroundColor};\n          ${this.props.backgroundColor? ' margin: 0px':''} \n          }\n        `}\n      </style>\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <ListGroup.Item>\n        {/* <Card.Body> */}\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                {this.props.icon} <a href={ `#${ this.showLinkPath() }` } >\n                  {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        {/* </Card.Body> */}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          icon={ this.props.icon }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <ListGroup \n      style={ { height: '75vh', overflow: 'scroll' } } \n      // variant=\"flush\"\n      >\n        {listItems}\n      </ListGroup>\n    </>\n    );\n  }\n}\n\nexport default List;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          icon={this.props.icon}\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCheck, faExclamationTriangle, faPen } from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\"Click OK if you wish to delete, cancel if you don't\");\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  };\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let errorMessageAlert;\n    // let statusBadge;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      // statusBadge = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      // statusBadge = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    // let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={`#${this.props.showLink()}`}> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      // borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      errorMessageAlert = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={faExclamationTriangle} /> {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <ListGroup.Item>\n        <Row>\n          <Col xs={12} sm={9} md={9} ld={9} xl={9}>\n            <Card.Title>\n              {this.props.icon ? this.props.icon : ''} {title}\n            </Card.Title>\n          </Col>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleEdit} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faPen} />\n              </Button>\n            </Card.Link>\n          </Col>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleDelete} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </Card.Link>\n          </Col>\n          <Col xs={1} sm={1} md={1} ld={1} xl={1}>\n            {status && status === 'info' ? (\n              <Button variant=\"info\" size=\"sm\" disabled>\n                <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\n              </Button>\n            ) : (\n              ''\n            )}\n            {status && status === 'danger' ? (\n              <Button variant=\"danger\" size=\"sm\" disabled>\n                <FontAwesomeIcon icon={faExclamationTriangle} />\n              </Button>\n            ) : (\n              ''\n            )}\n            {status && status === 'success' ? (\n              <Button variant=\"success\" size=\"sm\" disabled>\n                <FontAwesomeIcon icon={faCheck} />\n              </Button>\n            ) : (\n              ''\n            )}\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} sm={12} md={12} ld={12} xl={12}>\n            <Card.Subtitle className=\"mb-2 text-muted\">{this.props.subtitle}</Card.Subtitle>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} ld={12} xl={12}>\n            {this.props.sttEngine && this.props.clipName && (\n              <Accordion>\n                <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                  <Badge variant=\"light\">Info</Badge>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                  <>\n                    {this.props.sttEngine ? (\n                      <>\n                        STT Engine: <Badge variant=\"light\">{this.props.sttEngine}</Badge>\n                      </>\n                    ) : null}\n                    <br />\n                    {this.props.clipName ? (\n                      <>\n                        File Name: <Badge variant=\"light\">{this.props.clipName}</Badge>\n                      </>\n                    ) : null}\n                  </>\n                </Accordion.Collapse>\n              </Accordion>\n            )}\n          </Col>\n        </Row>\n\n        {errorMessageAlert ? (\n          <>\n            <Row>\n              <Col xs={12} sm={12} md={12} ld={12} xl={12}>\n                {errorMessageAlert}\n              </Col>\n            </Row>\n          </>\n        ) : null}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\nimport whichJsEnv from '../../../Util/which-js-env';\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(transcript => {\n      console.log('transcript', transcript)\n      if (\n        includesText(transcript.title, searchText) ||\n        includesText(transcript.description, searchText) ||\n        includesText(transcript.clipName, searchText) || \n        includesText(transcript.sttEngine, searchText) \n      ) {\n        transcript.display = true;\n\n        return transcript;\n      } else {\n        transcript.display = false;\n\n        return transcript;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                sttEngine={item.sttEngine}\n                clipName={item.clipName}\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <ListGroup \n          style={ { height: '75vh', overflow: 'scroll' } }\n          //  variant=\"flush\"\n           >\n            {itemsCards}\n          </ListGroup>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col xs={ 12 } sm={ 6 } md={ 7 } lg={ 7 } xl={ 7 }>\n            {searchEl}\n          </Col>\n          { (whichJsEnv() !== 'cep')?(\n            <>\n            <Col xs={ 12 } sm={ 3 } md={ 2 } lg={ 2 } xl={ 2 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n            <Col xs={ 12 } sm={ 3 } md={ 3 } lg={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewBatchForm } variant=\"secondary\" size=\"sm\" block>\n                New Batch {this.props.model}s\n            </Button>\n            </Col>\n            </>\n          ): (\n            <Col xs={ 12 } sm={ 6 } md={ 5 } lg={ 5 } xl={ 5 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n          )}\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Form from 'react-bootstrap/Form';\nimport CustomAlert from '../CustomAlert/index.js';\n\nfunction NoNeedToConvertNotice(props) {\n  return (\n    <CustomAlert dismissable={true} variant={'info'} heading={''} message={''}>\n      <b> You don't need to convert your media before adding it to the app.</b>\n      <Form.Text>\n        <a\n          href=\"https://autoedit.gitbook.io/autoedit-3-user-manual/transcriptions/create-a-new-transcription\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          see user manual for more details\n        </a>\n      </Form.Text>\n    </CustomAlert>\n  );\n}\n\nexport default NoNeedToConvertNotice;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path';\nimport NoNeedToConvertNotice from '../lib/NoNeedToConvertNotice/index.js';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null,\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only\n  handleAdobeCepSetFilePath = () => {\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`, response => {\n      console.log('handleAdobeCepSetFilePath');\n      if (response !== '') {\n        console.log('handleAdobeCepSetFilePath', response);\n        //  const newFilePath = response;\n        //  fileName = path.basename(newFilePath);\n        // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n        this.setState({\n          title: path.basename(response),\n          adobeCepFilePath: response,\n        });\n      } else {\n        // TODO: review logic for edge case\n        alert('select a clip');\n      }\n    });\n  };\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n    if (whichJsEnv() !== 'cep') {\n      formData.append('title', this.state.title);\n      formData.append('description', this.state.description);\n      console.log(\"formData.get('path')\", formData.get('path'));\n    }\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path'),\n      };\n    }\n\n    if (whichJsEnv() === 'cep') {\n      data = {\n        title: this.state.title,\n        description: this.state.description,\n        path: this.state.adobeCepFilePath,\n      };\n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId,\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n        })\n        .catch(e => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: (\n              <CustomAlert\n                dismissable={true}\n                variant={'danger'}\n                heading={'Error could not contact the server'}\n                message={<p>There was an error trying to create this transcript on the server</p>}\n              />\n            ),\n          });\n        });\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        {whichJsEnv() !== 'electron' && <NoNeedToConvertNotice />}\n\n        <Form noValidate validated={this.state.validated} onSubmit={e => this.handleSubmit(e)}>\n          {whichJsEnv() === 'cep' ? (\n            <>\n              <Button variant=\"light\" onClick={this.handleAdobeCepSetFilePath} block>\n                Pick a file\n              </Button>\n              <Form.Text className=\"text-muted\">\n                Select an audio or video file to transcribe. Click on a file in the Adobe Premiere project browser window, and the click{' '}\n                <code>pick a file</code> to select a file to transcribe. Then click <code>save</code> when you are ready to start the transcriptiion.\n              </Form.Text>\n            </>\n          ) : (\n            <Form.Group controlId=\"formTranscriptMediaFile\">\n              <Form.Control required type=\"file\" label=\"Upload\" accept=\"audio/*,video/*,.mxf\" onChange={this.handleFileUpload} />\n              <Form.Text className=\"text-muted\">Select an audio or video file to transcribe</Form.Text>\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n              <Form.Control.Feedback type=\"invalid\">Please chose a audio or video file to transcribe</Form.Control.Feedback>\n            </Form.Group>\n          )}\n\n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control required type=\"text\" placeholder=\"Enter a transcript title\" value={this.state.title} onChange={this.handleTitleChange} />\n            <Form.Text className=\"text-muted\">Chose a title for your Transcript</Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Please chose a title for your transcript</Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={this.state.description}\n              onChange={this.handleDescriptionChange}\n            />\n            <Form.Text className=\"text-muted\">Chose an optional description for your Transcript</Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Please chose a description for your transcript</Form.Control.Feedback>\n          </Form.Group>\n\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport NoNeedToConvertNotice from '../lib/NoNeedToConvertNotice/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\n\nimport path from 'path';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass BatchTranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null,\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only\n  handleAdobeCepSetFilePath = () => {\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`, response => {\n      console.log('handleAdobeCepSetFilePath');\n      if (response !== '') {\n        console.log('handleAdobeCepSetFilePath', response);\n        //  const newFilePath = response;\n        //  fileName = path.basename(newFilePath);\n        // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n        this.setState({\n          title: path.basename(response),\n          adobeCepFilePath: response,\n        });\n      } else {\n        // TODO: review logic for edge case\n        alert('select a clip');\n      }\n    });\n  };\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    console.log('files', files);\n    const formData = new FormData();\n    files.forEach((file, index) => {\n      formData.append(`file`, file);\n      formData.append(`type`, file.type);\n      if (file.path) {\n        formData.append(`path`, file.path);\n      }\n    });\n    // const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n\n    // formData.append('file', file);\n    // formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    // if (file.path) {\n    //   formData.append('path', file.path);\n    // }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    // if (this.state.title === '') {\n    //   this.setState({ title: file.name });\n    // }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n    const formData = this.state.formData;\n    const listOfFilesPath = formData.getAll('path');\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      listOfFilesPath.forEach(filePath => {\n        data = {\n          title: path.basename(filePath),\n          description: `${path.basename(filePath)}`,\n          path: filePath,\n        };\n\n        // if client run inside of electron\n        // is easier to pass another object with title, description\n        // as well as the additional path to the file\n        // rather then parsing a formData object in node etc..\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId,\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n            })\n            .catch(e => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: (\n                  <CustomAlert\n                    dismissable={true}\n                    variant={'danger'}\n                    heading={'Error could not contact the server'}\n                    message={<p>There was an error trying to create this transcript on the server</p>}\n                  />\n                ),\n              });\n            });\n        } catch (e) {\n          console.error('error submitting:::', e);\n        }\n      });\n    }\n    if (whichJsEnv() === 'browser') {\n      const formData = this.state.formData;\n      const listOfFiles = formData.getAll('file');\n      const listOfFileTypes = formData.getAll('type');\n      listOfFiles.forEach((individualFile, index) => {\n        const individualFileFormData = new FormData();\n        individualFileFormData.append('file', individualFile);\n        individualFileFormData.append('type', listOfFileTypes[index]);\n        individualFileFormData.append('title', individualFile.name);\n        individualFileFormData.append('description', '');\n        // individualFileFormData.append('type', file.type);\n        const data = {\n          title: individualFile.name,\n          description: '',\n          // path:\n        };\n\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, individualFileFormData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId,\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n            })\n            .catch(e => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: (\n                  <CustomAlert\n                    dismissable={true}\n                    variant={'danger'}\n                    heading={'Error could not contact the server'}\n                    message={<p>There was an error trying to create this transcript on the server</p>}\n                  />\n                ),\n              });\n            });\n        } catch (e) {\n          console.error('error submitting:::', e);\n        }\n      });\n    }\n    if (whichJsEnv() === 'cep') {\n      alert('not implemented in adobe CEP');\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        {whichJsEnv() !== 'electron' && <NoNeedToConvertNotice />}\n\n        <Form noValidate validated={this.state.validated} onSubmit={e => this.handleSubmit(e)}>\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Label>Select Files </Form.Label>\n            <Form.Control required type=\"file\" label=\"Upload\" accept=\"audio/*,video/*,.mxf\" multiple=\"multiple\" onChange={this.handleFileUpload} />\n            <Form.Text className=\"text-muted\">Select multiple audio or video file to transcribe.</Form.Text>\n            <Form.Text className=\"text-muted\">\n              This allows you to batch transcribe multiple files, the transcript name will default to the clip name.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">You can change the default transcript name after you've clicked save.</Form.Text>\n            <Form.Text className=\"text-muted\">\n              Use command <code>⌘</code> + click or shift <code>⇧</code> + click to select multiple files.\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">Please chose a audio or video file to transcribe</Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default BatchTranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport BatchTranscriptForm from './BatchTranscriptForm';\n\nclass NewBatchTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <BatchTranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewBatchTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport NewBatchTranscriptFormModal from './NewBatchTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      isNewBatchModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n      this.getTranscripts();\n      // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly, \n      // and only if there are items in progress in the list, it checks the backed for updates\n      this.interval = setInterval(() => {\n        console.log('Running interval to check for transcripts');\n        if(this.areThereTranscriptsInProgress(this.state.items)){\n            console.log('interval: checking transcirpt update');\n            this.getTranscripts();\n        }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount =() => {\n    if (this.interval) {\n       clearInterval(this.interval);\n    }\n  }\n\n  getTranscripts = async () =>{\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n      // TODO: add error handling\n      if (result) {\n        const tmpList = result.transcripts.map((item) => {\n          item.display = true;\n\n          return item;\n        });\n        this.setState({\n          projectTitle: result.projectTitle,\n          items: tmpList\n        });\n      }\n  }\n\n  areThereTranscriptsInProgress = (items) => {\n    if (items.length !== 0) {\n      const result = items.find((transcript) => {\n\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  }\n\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState');\n    });\n  }\n\n  // TODO: adjust for multiuple\n  handleSaveBatch = (itemsProps) => {\n    console.log('handleSaveBatch', itemsProps);\n\n    this.setState({\n      isNewBatchModalShow: false\n    })\n\n    if(itemsProps.length){\n      const newItems = itemsProps.map((item)=>{\n        item.display = true;\n        return item;\n      })\n      const { items } = this.state;\n      const itemsList = [ ...items ];\n      const newItemsList = [...itemsList, ...newItems]\n      this.setState({\n        items: newItemsList,\n        title:'',\n        itemId: null,\n        description: '',\n        isNewBatchModalShow: false\n      }, () => {\n        console.log('setState - itemsProps.length', this.state.isNewBatchModalShow);\n      });\n    }else{\n    const newItem = itemsProps;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState - single',  this.state.isNewBatchModalShow);\n    });\n    }\n   \n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      }, () => {\n        console.log('deleted')\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleShowCreateNewBatchForm = ()=>{\n    console.log('handleShowCreateNewBatchForm')\n    this.setState({ isNewBatchModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseBatchModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewBatchModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleShowCreateNewBatchForm={ this.handleShowCreateNewBatchForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            handleCloseBatchModal={ this.handleCloseBatchModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } color=\"#007bff\" /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n\n        <NewBatchTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Batch Transcripts' }\n            show={ this.state.isNewBatchModalShow }\n            handleCloseModal={ this.handleCloseBatchModal }\n            handleSaveForm={ this.handleSaveBatch }\n          />\n          \n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faColumns } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            icon={ <FontAwesomeIcon icon={ faColumns } color=\"#007bff\"/> }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name',\n    };\n  }\n\n  async componentDidMount() {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={{ marginBottom: '5em', marginTop: '1em' }}>\n          <Row>\n            <Col sm={12} md={12} ld={12} xl={12}>\n              <CustomBreadcrumb\n                items={[\n                  {\n                    name: 'Projects',\n                    link: '/projects',\n                  },\n                  {\n                    name: this.state.projectName,\n                  },\n                ]}\n              />\n            </Col>\n          </Row>\n          <Tabs id=\"controlled-tab-example\" activeKey={this.state.key} onSelect={key => this.setState({ key })}>\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={this.state.projectId} />\n            </Tab>\n            <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n              <PaperEdits projectId={this.state.projectId} />\n            </Tab>\n          </Tabs>\n        </Container>\n        {/* <CustomFooter/> */}\n      </>\n    );\n  }\n}\n\nexport default Project;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n\n  async exportVideo(data, fileName){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n\n  async exportAudio(data, fileName,waveForm, waveFormMode, waveFormColor){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default (() => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    // try {\n    //   const { ipcRenderer } = require('electron');\n    //   const appPath = ipcRenderer.sendSync('synchronous-message-get-app-path', 'ping');\n    // const path = require('path');\n    // console.log(window.appPath, 'window.AppPath', 'process.cwd()', process.cwd());\n    //   window.process.chdir(appPath);\n    // const ElectronWrapper = require(path.join(window.appPath, 'src', 'ElectronWrapper', 'index.js'));\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n    return electronWrapper;\n    // } catch (e) {\n    //   console.error('api wrapper electron', e);\n    // }\n  }\n  if (jsENV === 'cep') {\n    // TODO: not sure if this will work\n    // try {\n    // console.log('__dirname', __dirname);\n    // console.log('process.cwd()', process.cwd());\n    // /////////////////////////\n    // console.log('  process.chdir(__dirname);');\n    // process.chdir(__dirname);\n    // /////////////////////////\n    // console.log('__dirname', __dirname);\n    // console.log('process.cwd()', process.cwd());\n\n    // const path = require('path');\n    // const AdobeCEPWrapper = require(path.join(__dirname, 'src', 'AdobeCEPWrapper', 'index.js'));\n    // window.AdobeCEPWrapper = AdobeCEPWrapper;\n\n    const AdobeCEPWrapper = window.AdobeCEPWrapper;\n    const adobeCEPWrapper = new AdobeCEPWrapper();\n    Object.freeze(adobeCEPWrapper);\n\n    return adobeCEPWrapper;\n    // } catch (err) {\n    //   console.log('chdir: ' + err);\n    // }\n  }\n})();\n"],"sourceRoot":""}