{"version":3,"sources":["ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","Util/which-js-env/index.js","ApiWrapper/index.js","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Components/lib/SimpleListItem/index.js","Components/Playlist/Playlist.js","Components/Transcripts/TranscriptView.js"],"names":["METHODS","validateRESTMethod","method","includes","Error","getCorsConfig","corsConfig","data","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","a","async","fetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","trim","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","this","baseUrl","window","env","API_URL","res","json","projects","id","getProject","resProject","projectTitle","project","title","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","results","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","map","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","fileName","resolve","reject","input","output","ffmpegPath","waveForm","waveFormMode","waveFormColor","DemoApiWrapper","response","length","_id","status","alert","ok","response00","response01","transcripts00","transcripts01","concat","filter","formData","playlistItem","items","item","slug","presentation","proposal","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","whichJsEnv","undefined","process","versions","electron","console","debug","cep","error","jsENV","log","demoApiWrapper","Object","freeze","apiWrapper","electronWrapper","ElectronWrapper","adobeCEPWrapper","AdobeCEPWrapper","SimpleCard","handleDelete","confirm","props","handleEdit","showLinkPath","ListGroup","Item","Row","to","style","cursor","Col","xs","sm","md","ld","xl","Card","Title","icon","href","Link","Button","onClick","variant","size","faPen","faTrash","Subtitle","className","description","Component","React","SimpleItem","openPresentation","open","openProposal","openAgenda","agenda","openOriginal","original","action","references","name","Playlist","state","isNewItemModalShow","itemId","height","overflowY","collection","key","TranscriptViewer","lazy","playlistItems","TranscriptView","componentDidMount","updateTranscript","componentDidUpdate","match","params","setState","setFilter","then","transcriptJson","clipName","savedNotification","transcriptViewerRef","createRef","mediaType","path","extname","bg","marginRight","Container","backgroundColor","fluid","fallback","lg","Skeleton","width","transcriptData","mediaUrl","isEditable","autoSaveContentType"],"mappings":"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","file":"static/js/5.2f3a32d8.chunk.js","sourcesContent":["/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n\n  async exportVideo(data, fileName){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n\n  async exportAudio(data, fileName,waveForm, waveFormMode, waveFormColor){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n}\n\nexport default ApiWrapper;","import items from '../../playlist.json'\n\nclass DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response00 = await fetch('db/transcripts.json');\n    const response01 = await fetch('db/transcripts-01.json');\n    let transcripts00 = await response00.json();\n    let transcripts01 = await response01.json();\n    let transcripts = transcripts00.concat(transcripts01);\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response00 = await fetch('db/transcripts.json');\n    const response01 = await fetch('db/transcripts-01.json');\n    let transcripts00 = await response00.json();\n    let transcripts01 = await response01.json();\n    let transcripts = transcripts00.concat(transcripts01);\n\n    const playlistItem = items.find((item) => item.slug === transcriptId)\n    if (!playlistItem) {\n      return { status: 'Not Found' }\n    }\n\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === playlistItem.id;\n    });\n\n    transcript.id = transcript._id;\n    transcript.transcriptTitle = transcript.title;\n    transcript.presentation = playlistItem.presentation;\n    transcript.proposal = playlistItem.proposal;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n  // Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n      console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    } else if (window.process.versions.cep !== undefined) {\n      console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      // try {\n      //   // commenting out because of error \"chdir: Error: process.chdir is not supported\"\n      //   // process.chdir(__dirname);\n      //   // process.chdir('..');\n      //   // console.log('New directory: ' + process.cwd());\n      // }\n      // catch (err) {\n      //   console.log('chdir: ' + err);\n      // }\n      return 'cep';\n    } else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default (() => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    // try {\n    //   const { ipcRenderer } = require('electron');\n    //   const appPath = ipcRenderer.sendSync('synchronous-message-get-app-path', 'ping');\n    // const path = require('path');\n    // console.log(window.appPath, 'window.AppPath', 'process.cwd()', process.cwd());\n    //   window.process.chdir(appPath);\n    // const ElectronWrapper = require(path.join(window.appPath, 'src', 'ElectronWrapper', 'index.js'));\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n    return electronWrapper;\n    // } catch (e) {\n    //   console.error('api wrapper electron', e);\n    // }\n  }\n  if (jsENV === 'cep') {\n    // TODO: not sure if this will work\n    // try {\n    // console.log('__dirname', __dirname);\n    // console.log('process.cwd()', process.cwd());\n    // /////////////////////////\n    // console.log('  process.chdir(__dirname);');\n    // process.chdir(__dirname);\n    // /////////////////////////\n    // console.log('__dirname', __dirname);\n    // console.log('process.cwd()', process.cwd());\n\n    // const path = require('path');\n    // const AdobeCEPWrapper = require(path.join(__dirname, 'src', 'AdobeCEPWrapper', 'index.js'));\n    // window.AdobeCEPWrapper = AdobeCEPWrapper;\n\n    const AdobeCEPWrapper = window.AdobeCEPWrapper;\n    const adobeCEPWrapper = new AdobeCEPWrapper();\n    Object.freeze(adobeCEPWrapper);\n\n    return adobeCEPWrapper;\n    // } catch (err) {\n    //   console.log('chdir: ' + err);\n    // }\n  }\n})();\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPen } from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\"Click OK if you wish to delete, cancel if you don't\");\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  };\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  };\n\n  render() {\n    return (\n      <ListGroup.Item>\n        {/* <Card.Body> */}\n        <Row>\n          <LinkContainer to={this.showLinkPath()} style={{ cursor: 'pointer' }}>\n            <Col xs={8} sm={10} md={10} ld={10} xl={10}>\n              <Card.Title>\n                {this.props.icon} <a href={`#/${this.showLinkPath()}`}>{this.props.title}</a>\n              </Card.Title>\n            </Col>\n          </LinkContainer>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleEdit} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faPen} />\n              </Button>\n            </Card.Link>\n          </Col>\n          <Col xs={2} sm={1} md={1} ld={1} xl={1}>\n            <Card.Link>\n              <Button onClick={this.handleDelete} variant=\"secondary\" size=\"sm\">\n                <FontAwesomeIcon icon={faTrash} />\n              </Button>\n            </Card.Link>\n          </Col>\n        </Row>\n        <LinkContainer to={this.showLinkPath()} style={{ cursor: 'pointer' }}>\n          <Row>\n            <Col xs={10} sm={11} md={11} ld={11} xl={11}>\n              <Card.Subtitle className=\"mb-2 text-muted\">{this.props.description}</Card.Subtitle>\n            </Col>\n          </Row>\n        </LinkContainer>\n        {/* </Card.Body> */}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          icon={ this.props.icon }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <ListGroup \n      style={ { height: '75vh', overflow: 'scroll' } } \n      // variant=\"flush\"\n      >\n        {listItems}\n      </ListGroup>\n    </>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Link } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass SimpleItem extends Component {\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.slug);\n  };\n\n  openPresentation = () => {\n    window.open(this.props.presentation)\n  }\n\n  openProposal = () => {\n    window.open(this.props.proposal)\n  }\n\n  openAgenda = () => {\n    window.open(this.props.agenda)\n  }\n\n  openOriginal = () => {\n    window.open(this.props.original)\n  }\n  \n  render() {\n    return (\n      <LinkContainer to={this.showLinkPath()} style={{ cursor: 'pointer' }}>\n        <ListGroup.Item action>\n          <h6>{this.props.title}</h6>\n          {(this.props.presentation || this.props.proposal || this.props.agenda || this.props.original) && <div className='buttons'>\n            {this.props.presentation && <button className='button' onClick={this.openPresentation}>Presentation</button>}\n            {this.props.proposal && <button className='button' onClick={this.openProposal}>Proposal</button>}\n            {this.props.agenda && <button className='button' onClick={this.openAgenda}>Agenda</button>}\n            {this.props.original && <button className='button' onClick={this.openOriginal}>Original</button>}\n          </div>}\n          <div className='buttons'>\n          {(this.props.references || []).map((item) => (<div>\n            <span>{item.name} </span>\n            <button className='button' onClick={this.openProposal}>Proposal</button>\n            <button className='button' onClick={this.openPresentation}>Presentation</button>\n          </div>\n          ))}\n          </div>\n        </ListGroup.Item>\n      </LinkContainer>\n    );\n  }\n}\n\nexport default SimpleItem;\n","import React from \"react\";\nimport ApiWrapper from \"../../ApiWrapper/index.js\";\nimport List from \"../lib/List\";\nimport { HashRouter } from \"react-router-dom\";\nimport { faFolder } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport SimpleItem from \"../lib/SimpleListItem\";\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: \"\",\n      description: \"\",\n      itemId: null,\n      filter: 'All',\n    };\n  }\n\n  showLinkPath = (id) => {\n    if (id.includes('FY_2025')) {\n      return `/fy25/${id}`\n    }\n    if (id.includes('FY_2024')) {\n      return `/fy24/${id}`\n    }\n    if (id.includes('FY_2023')) {\n      return `/fy23/${id}`\n    }\n    if (id.includes('Council')) {\n      return `/city-council-2023/${id}`\n    }\n    return `/fy22/${id}`\n  };\n\n  render() {\n    return (\n      <>\n        <HashRouter>\n          <ListGroup\n            style={{ height: \"50vh\", overflowY: \"scroll\" }}\n            // variant=\"flush\"\n          >\n            {this.props.items.filter((item) => {\n              if (this.props.filter === 'All') {\n                return true\n              }\n\n              if (this.props.filter === 'City Council') {\n                return item.collection === \"2023 City Council Meetings\"\n              }\n\n              if (this.props.filter === 'FY25 Budget Workshops') {\n                return item.collection === \"2024 Budget Workshops for FY2025\"\n              }\n\n              if (this.props.filter === 'FY24 Budget Workshops') {\n                return item.collection === \"2023 Budget Workshops for FY2024\"\n              }\n\n              if (this.props.filter === 'FY23 Budget Workshops') {\n                return item.collection === \"2022 Budget Workshops for FY2023\"\n              }\n\n              if (this.props.filter === 'FY22 Budget Workshops') {\n                return item.collection === \"2021 Budget Workshops for FY2022\"\n              }\n              \n              return true\n            }).map((item) => (\n              <SimpleItem\n                key={item.id}\n                id={item.id}\n                references={item.references}\n                slug={item.slug}\n                title={item.title}\n                presentation={item.presentation}\n                proposal={item.proposal}\n                agenda={item.agenda}\n                original={item.original}\n                description={item.description}\n                showLinkPath={this.showLinkPath}\n              />\n            ))}\n          </ListGroup>\n        </HashRouter>\n      </>\n    );\n  }\n}\n\nexport default Playlist;\n","import React, { Component, Suspense } from \"react\";\nimport path from \"path\";\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptViewer on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\n// import TranscriptViewer from 'slate-transcript-editor';\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport ApiWrapper from \"../../ApiWrapper/index.js\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport { Redirect } from \"react-router-dom\";\n\nimport items from \"../../playlist.json\";\nimport Playlist from \"../Playlist/Playlist.js\";\n\nconst TranscriptViewer = React.lazy(() => import(\"../lib/TranscriptViewer\"));\n\nconst projectId = null;\n\nconst playlistItems = items;//.reverse();\n\nclass TranscriptView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: \"\",\n      transcriptTitle: \"\",\n      savedNotification: null,\n      status: null,\n      filter: 'All',\n    };\n    this.transcriptViewerRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.updateTranscript();\n  };\n\n  componentDidUpdate = () => {\n    if (this.props.match.params.transcriptId === this.state.transcriptId) {\n      return;\n    }\n    this.setState({\n      transcriptId: this.props.match.params.transcriptId,\n    });\n    this.updateTranscript(this.props.match.params.transcriptId);\n  };\n  setFilter = (filter) => {\n    return () => {\n      this.setState({ filter })\n    }\n  };\n  updateTranscript = (transcriptId) => {\n    if (!(transcriptId || this.state.transcriptId)) {\n      return;\n    }\n    this.setState({\n      status: \"Loading\",\n    });\n    ApiWrapper.getTranscript(projectId, transcriptId || this.state.transcriptId)\n      // TODO: add error handling\n      .then((json) => {\n        if (json.status && json.status === \"Not Found\") {\n          this.setState({\n            status: \"Not Found\",\n            projectTitle: \"\",\n            transcriptTitle: \"\",\n            transcriptJson: null,\n            url: null,\n            clipName: null,\n          });\n        }\n\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url,\n          clipName: json.clipName,\n          status: \"Found\",\n        });\n      });\n  };\n\n  render() {\n    // Workaround to change layout of TranscriptViewer for audio files.\n    // For now only handling limited numnber of file extension that have more of a certainty of being audio\n    // as opposed to more ambiguos extensions such as ogg or mp4 that could be either video or audio\n    // there might be better ways to determine if a clip is audio or video, especially node/\"server side\" but\n    // might also be more of a setup eg using ffprobe etc..\n    let mediaType = \"video\";\n    if (\n      path.extname(this.state.clipName) === \".wav\" ||\n      path.extname(this.state.clipName) === \".mp3\" ||\n      path.extname(this.state.clipName) === \".m4a\" ||\n      path.extname(this.state.clipName) === \".flac\" ||\n      path.extname(this.state.clipName) === \".aiff\"\n    ) {\n      mediaType = \"audio\";\n    }\n    return (\n      <>\n        <div className=\"navbar\" bg=\"dark\" variant=\"dark\">\n          <h1 className=\"navbar-title\">#HouBudget Workshops Watcher</h1>\n          <div className='buttons' style={{marginRight: '140px'}}>\n            <button className={`button ${this.state.filter === 'All' && 'active'}`} onClick={this.setFilter('All')}>All</button>\n            <button className={`button ${this.state.filter === 'FY25 Budget Workshops' && 'active'}`} onClick={this.setFilter('FY25 Budget Workshops')}>FY25 Budget Workshops</button>\n            <button className={`button ${this.state.filter === 'City Council' && 'active'}`} onClick={this.setFilter('City Council')}>City Council</button>\n            <button className={`button ${this.state.filter === 'FY24 Budget Workshops' && 'active'}`} onClick={this.setFilter('FY24 Budget Workshops')}>FY24 Budget Workshops</button>\n            <button className={`button ${this.state.filter === 'FY23 Budget Workshops' && 'active'}`} onClick={this.setFilter('FY23 Budget Workshops')}>FY23 Budget Workshops</button>\n            <button className={`button ${this.state.filter === 'FY22 Budget Workshops' && 'active'}`} onClick={this.setFilter('FY22 Budget Workshops')}>FY22 Budget Workshops</button>\n          </div>\n          {/* <Nav className=\"mr-auto\"></Nav> */}\n          {/* <Nav>\n            <small className=\"text-light text-right\">\n              Transcripts <a href=\"https://www.assemblyai.com/\" target=\"_blank\">auto-generated</a>, then crowd-sourced.  <a href=\"https://bit.ly/datatodream-budget-transcripts\" target=\"_blank\">Submit corrections here</a>.<br/>\n              <a href=\"https://github.com/Open-HAC-Budget-Tool/watcher\" target=\"_blank\">Code</a> is a fork of <a href=\"https://www.autoedit.io/\" target=\"_blank\">AutoEdit</a>.\n            </small>\n          </Nav> */}\n        </div>\n        <Container\n          style={{\n            backgroundColor: \"#eee\",\n          }}\n          fluid\n        >\n          {\n            <Suspense\n              fallback={\n                <Container fluid>\n                  <Row>\n                    <Col xs={12} sm={4} md={4} lg={4} xl={4}>\n                      <Skeleton variant=\"rect\" width={\"100%\"} height={100} />\n                    </Col>\n                    <Col xs={12} sm={7} md={7} lg={7} xl={7}>\n                      <Skeleton variant=\"rect\" width={\"100%\"} height={600} />\n                    </Col>\n                    <Col xs={12} sm={1} md={1} lg={1} xl={1}>\n                      <Skeleton variant=\"rect\" width={\"100%\"} height={350} />\n                    </Col>\n                  </Row>\n                </Container>\n              }\n            >\n              <TranscriptViewer\n                transcriptData={this.state.transcriptJson} // Transcript json\n                mediaUrl={this.state.url} // string url to media file - audio or video\n                // showTitle={true}\n                isEditable={false} // se to true if you want to be able to edit the text\n                title={this.state.transcriptTitle}\n                mediaType={mediaType}\n                autoSaveContentType={\"digitalpaperedit\"}\n                status={this.state.status}\n              >\n                <Playlist items={playlistItems} filter={ this.state.filter }/>\n              </TranscriptViewer>\n            </Suspense>\n          }\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptView;\n"],"sourceRoot":""}