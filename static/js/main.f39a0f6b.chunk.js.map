{"version":3,"sources":["Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.module.css","Util/diff-dates-in-minutes/index.js","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ListPage/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/CustomBreadcrumb/index.js","Components/lib/CustomFooter/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","Util/which-js-env/index.js","ApiWrapper/index.js","Components/Projects/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/CustomAlert/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/BatchTranscriptForm.js","Components/Transcripts/NewBatchTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","Components/Transcripts/TranscriptCorrect.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/select-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Word.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/css-color-names.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelForm.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelModal.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEdits/PaperEdit/Transcripts/get-user-selection.js","Components/PaperEdits/PaperEdit/Transcripts/makeListOfUniqueSpeakers.js","Components/PaperEdits/PaperEdit/Transcripts/Transcript.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBarTranscripts/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBarTranscripts/index.js","Components/PaperEdits/PaperEdit/Transcripts/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/Filler.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/ProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/VideoContextPreview/VideoContextProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/Controls.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/VideoContextPreview/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas2/index.js","Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js","Components/PaperEdits/PaperEdit/ProgramScript/get-data-from-user-selection.js","Components/PaperEdits/PaperEdit/ProgramScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEdits/PaperEdit/ProgramScript/programme-script-json-to-docx/index.js","Components/PaperEdits/PaperEdit/ProgramScript/index.js","Components/PaperEdits/PaperEdit/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","dt2","dt1","diff","getTime","Math","abs","round","SimpleCard","handleDelete","confirm","props","id","alert","handleEdit","showLinkPath","ListGroup","Item","Row","to","this","style","cursor","Col","xs","sm","md","ld","xl","Card","Title","icon","href","title","Link","Button","onClick","variant","size","faPen","faTrash","Subtitle","className","description","Component","List","listItems","items","map","item","display","key","filter","height","overflow","React","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","InputGroup","Prepend","Text","faSearch","FormControl","onChange","placeholder","aria-label","aria-describedby","Page","results","project","handleUpdateList","searchEl","length","handleShowCreateNewItemForm","block","model","ItemForm","handleTitleChange","event","handleDescriptionChange","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal","Footer","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","modalTitle","Body","CustomBreadcrumb","breadcrumbs","index","link","Breadcrumb","name","active","scoped","backgroundColor","CustomFooter","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","data","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","a","async","fetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","window","env","API_URL","res","json","projects","getProject","resProject","projectTitle","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","fileName","resolve","reject","input","output","ffmpegPath","waveForm","DemoApiWrapper","response","_id","status","ok","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","whichJsEnv","undefined","process","versions","electron","console","debug","cep","error","jsENV","log","demoApiWrapper","Object","freeze","apiWrapper","electronWrapper","ElectronWrapper","adobeCEPWrapper","AdobeCEPWrapper","Projects","handleSaveItem","updateProject","then","findItemById","findIndex","element","isNewItemModalShow","itemId","createProject","push","list","p","handleEditItem","showLinkPathToItem","handleDeleteItem","bind","getAllProjects","result","tmpList","deleteProject","newItemsList","Container","marginBottom","marginTop","ListPage","faFolder","color","deleteItem","createNew","editItem","CustomTranscriptCard","errorMessageAlert","Badge","showLink","Alert","faExclamationTriangle","errorMessage","disabled","Spinner","as","animation","role","aria-hidden","faCheck","subtitle","sttEngine","clipName","Accordion","Toggle","eventKey","Collapse","ListPageTranscript","itemsCards","content","lg","handleShowCreateNewBatchForm","CustomAlert","handleDismiss","onClose","dismissible","heading","Heading","message","TranscriptForm","handleAdobeCepSetFilePath","__adobe_cep__","evalScript","path","basename","adobeCepFilePath","handleFileUpload","file","Array","from","files","FormData","append","mediaFileSelected","sendRequest","uploading","get","createTranscript","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","dismissable","accept","NewTranscriptFormModal","BatchTranscriptForm","listOfFilesPath","getAll","filePath","listOfFiles","listOfFileTypes","individualFile","individualFileFormData","multiple","NewBatchTranscriptFormModal","Transcripts","componentWillUnmount","interval","clearInterval","areThereTranscriptsInProgress","newItem","newitems","handleSaveBatch","itemsProps","isNewBatchModalShow","newItems","itemsList","handleSaveEditedItem","newEditedItem","itemIdex","updateTranscript","isEditItemModalShow","handleCloseBatchModal","handleCloseModalEdit","isServerError","setInterval","deleteTranscript","findId","tmpNewList","faFileAlt","PaperEdits","updatePaperEdit","createPaperEdit","getAllPaperEdits","deletePaperEdit","faColumns","Project","context","match","params","projectName","Tabs","activeKey","onSelect","Tab","TranscriptCorrect","componentDidMount","transcriptJson","handleSave","autoSaveData","Date","toLocaleString","redirectToAnnotatePage","renderRedirect","transcriptEditorRef","createRef","mediaType","extname","fluid","transcriptData","mediaUrl","isEditable","autoSaveContentType","handleSaveEditor","colourStyles","control","styles","option","isDisabled","tmpColor","isFocused","isSelected","borderLeft","borderColor","multiValue","border","multiValueLabel","multiValueRemove","speakersColorStyles","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleFilterResults","isShowingFilterOptions","showTextSearchPreferences","showSpeakersSearchPreferences","showLabelsSearchPreferences","Append","faFilter","faTag","isMulti","isSearchable","options","labelsOptions","faUser","speakersOptions","Check","checked","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","text","speaker","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","addWordsToSpeakersParagraphs","findAnnotationInParagraph","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","data-paragraph-text","paragraphTextWithoutPunctuation","width","speakerName","toUpperCase","shortTimecode","unselectable","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","i","dec","floor","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","wordEl","note","csscolors","colorNamesList","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","onLabelSaved","defaultValue","onInput","rows","faSyncAlt","triangle","onChangeComplete","colors","LabelModal","handleShow","openBtn","LabelsList","removeLabel","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","faTimes","labelsList","overflowY","overflowX","isLabelsListOpen","faTags","faCog","onlyCallOnce","cb","duration","timer","args","arguments","clearTimeout","setTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","has","set","Transcript","handleLoadTranscription","componentMounted","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","current","currentTime","play","isShowParagraphsMatchingSearch","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","parse","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","getCurrentWordTime","currentWordTime","time","highlights","src","ref","onTimeUpdate","boxShadow","controls","ButtonGroup","Dropdown","data-label-id","faHighlighter","flip","data-lable-id","Menu","DropdownButton","drop","paddingBottom","margin","onDoubleClick","SearchBarTranscripts","handleTranscriptSearchChange","selectedOptionTranscriptSearch","handleShowAdvancedSearchViewSearchingAcrossTranscripts","faAngleLeft","searchValue","transcriptOptions","selectedOptionTranscriptsSearch","prevState","showAdvancedSearchViewSearchingAcrossTranscripts","transcriptsElNav","Nav","faClock","transcriptsOptions","transcriptsUniqueListOfSpeakers","reduce","prev","curr","concat","transcriptsUniqueListOfSpeakersNoDuplicates","Set","searchBarTranscriptsElement","transcriptsElTab","Pane","searchedParagraphsAcrossTranscripts","t","defaultActiveKey","Content","Filler","percentage","background","borderRadius","ProgressBar","position","opacity","getPercentage","VideoContextProgressBar","useRef","useState","setPercentage","videoContext","setVideoContext","setWidth","useLayoutEffect","offsetWidth","useEffect","fillerAnimation","percent","requestAnimationFrame","offsetX","nativeEvent","playIcon","faPlay","pauseIcon","faPause","stopIcon","faStop","Controls","isPlaying","setIsPlaying","handlePause","handlePlay","handleStop","VideoContextPreview","canvasRef","VideoContext","playlist","sourceStart","node","startAt","stopAt","connect","destination","seconds","pause","vc","toISOString","substr","defaultProps","PreviewCanvas","VoiceOver","faMicrophoneAlt","PaperCut","w","userSelect","TitleHeading","Note","InsertPoint","faArrowAltCircleRight","DragHandle","sortableHandle","faGripLines","sharedStyle","SortableItem","sortableElement","indexNumber","handleAddTranscriptElementToProgrammeScript","handleAddTranscriptSelectionToProgrammeScriptTmpSave","handleChangeInsertPointPosition","isContextMenuVisible","setContextMenuVisibility","customStyle","setStyle","handleContextMenu","faArrowAltCircleLeft","handleAddTranscriptSelectionToProgrammeScript","faPaste","faHeading","onMouseOver","onMouseLeave","SortableContainer","sortableContainer","children","listStyle","ProgrammeScript","onSortEnd","oldIndex","newIndex","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement","parseWordElDataset","innerText","getDataFromUserWordsSelection","isOneParagraph","firstword","divideWordsSelectionsIntoParagraphs","previousWordSpeaker","currentParagraph","paragraphsResult","programmeScriptJsonToDocx","edlJson","isWithClipReference","doc","Document","creator","sections","events","HeadingLevel","HEADING_1","spacing","after","TextRun","italics","bold","allCaps","addSection","properties","TITLE","alignment","AlignmentType","CENTER","Packer","toBlob","blob","INSERT_POINT_ELEMENT","ProgramScript","mouseUpListener","document","tmpSelection","isAdvancedSelect","elements","addEventListener","removeEventListener","handleSaveProgrammeScript","handleUpdatePreview","currentElement","newText","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","cuid","insertPointElement","reverse","collapse","getSequenceJsonEDL","edlSq","programmeScriptPaperCutsWithId","currentTranscript","mediaFps","metadata","fps","startTime","endTime","reelName","offset","timecode","sampleRate","getSequenceJsonForFfmpegRemix","source","handleExportEDL","edl","EDL","downloadjs","compose","handleExportADL","firstElement","generateADL","projectOriginator","edits","frameRate","handleExportFCPX","jsonToFCPX","handleExportXML","jsonToAudition","getProgrammeScriptJson","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleCepExportSequence","tmpEdl","premiereCommandString","info","handleExportTxt","handleExportDocx","programmeScriptDocx","handleExportDocxWithClipReference","timelineStartTime","resetPreview","handleDoubleClickOnProgrammeScript","latestProgrammeScript","lastSaved","newInsertPoint","handleAdvancedSelectCheckbox","handleDeleteProgrammeScriptContent","handleExportVideoPreview","sequence","programmeScriptTitle","timeNow","exportVideo","handleExportAudioPreview","exportAudio","handleExportAudioPreviewWithVideoWaveform","paddingTop","noGutters","faPlus","faListUl","faSync","faShare","faInfoCircle","faVideo","Divider","faHeadphones","faFileWord","faFileAudio","faFlask","faFileVideo","faFileCode","toLocaleTimeString","PaperEdit","getProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","faEye","faEyeSlash","span","demoWarningMessage","rel","NoMatch","App","envWarning","offlineWarning","navigator","onLine","exact","component","Boolean","location","hostname","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f39a0f6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__1kdz6\",\"unselectable\":\"Paragraphs_unselectable__3k2Ob\",\"highlightedWord\":\"Paragraphs_highlightedWord__3mJtY\"};","// https://www.w3resource.com/javascript-exercises/javascript-date-exercise-44.php\nfunction diffDateInMinutes(dt2, dt1) {\n  var diff =(dt2.getTime() - dt1.getTime()) / 1000;\n  diff /= 60;\n  return Math.abs(Math.round(diff));\n }\n\n module.exports = diffDateInMinutes;","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <ListGroup.Item>\n        {/* <Card.Body> */}\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                {this.props.icon} <a href={ `#${ this.showLinkPath() }` } >\n                  {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        {/* </Card.Body> */}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          icon={ this.props.icon }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <ListGroup \n      style={ { height: '75vh', overflow: 'scroll' } } \n      // variant=\"flush\"\n      >\n        {listItems}\n      </ListGroup>\n    </>\n    );\n  }\n}\n\nexport default List;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          icon={this.props.icon}\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <>\n      <style scoped>\n        {`\n        .breadcrumb{ \n          background-color: ${this.props.backgroundColor};\n          ${this.props.backgroundColor? ' margin: 0px':''} \n          }\n        `}\n      </style>\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n\n  async exportVideo(data, fileName){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n\n  async exportAudio(data, fileName,waveForm){\n    return new Promise((resolve, reject) => {\n      // In electron prompt for file destination \n      // default to desktop on first pass \n      const ffmpegRemixData = {\n        input: data, \n        output: `~/Desktop/${fileName}`,\n        ffmpegPath: ''//add electron ffmpeg bin \n      }\n      resolve(ffmpegRemixData)\n    })\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async getTranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async getProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n        console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n        console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      // try {\n      //   // commenting out because of error \"chdir: Error: process.chdir is not supported\"\n      //   // process.chdir(__dirname);\n      //   // process.chdir('..');\n      //   // console.log('New directory: ' + process.cwd());\n      // }\n      // catch (err) {\n      //   console.log('chdir: ' + err);\n      // }\n      return 'cep';\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default ( () => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n  if (jsENV === 'cep') {\n    const AdobeCEPWrapper = window.AdobeCEPWrapper;\n    const adobeCEPWrapper = new AdobeCEPWrapper();\n    Object.freeze(adobeCEPWrapper);\n\n    return adobeCEPWrapper;\n  }\n})();\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport {HashRouter} from 'react-router-dom';\nimport { faFolder } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n  async componentDidMount () {\n    try {\n    // TODO: do we need to add user id in request?\n      const result = await ApiWrapper.getAllProjects();\n\n      if (result) {\n      // add a display property for component cards search\n        const tmpList = result.map(project => {\n          project.display = true;\n\n          return project;\n        });\n        this.setState({ items: tmpList });\n      }\n    } catch (e) {\n      console.log('Error with ApiWrapper.getAllProjects', e);\n    }\n    // TODO: some error handling\n  };\n\n  // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createProject(item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const projects = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newProject = response.project;\n          newProject.display = true;\n          projects.push(response.project);\n          this.setState({\n            isNewItemModalShow: false,\n            items: projects,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updateProject(item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const project = response.project;\n          // need to add display true attribute for search to the new project\n          project.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          this.findItemById(items, item);\n          const projectIndex = this.state.items.findIndex(element => element.id === project.id);\n          items[projectIndex] = project;\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n    console.log('edit item', item);\n  }\n\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deleteProject(itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (<>\n    <HashRouter>\n      <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb items={ [\n              {\n                name: 'Projects'\n              }\n            ] } />\n          </Col>\n        </Row>\n        <ListPage\n          model={ 'Project' }\n          items={ this.state.items }\n          icon={ <FontAwesomeIcon icon={ faFolder } color=\"#007bff\"/> }\n          handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n          deleteItem={ this.createNew }\n          editItem={ this.createNew }\n          handleEdit={ this.handleEditItem }\n          handleDelete={ this.handleDeleteItem }\n          showLinkPath={ this.showLinkPathToItem }\n          handleUpdateList={ this.handleUpdateList }\n        />\n        <ItemFormModal\n          title={ this.state.title }\n          description={ this.state.description }\n          id={ this.state.itemId }\n          modalTitle={ this.state.itemId ? 'Edit Project' : 'New Project' }\n          show={ this.state.isNewItemModalShow }\n          handleCloseModal={ this.handleCloseModal }\n          handleSaveForm={ this.handleSaveItem }\n        />\n      </Container>\n      {/* <CustomFooter/> */}\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faCheck,\n  faExclamationTriangle,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let errorMessageAlert;\n    let statusBadge;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      statusBadge = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      statusBadge = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={ `#${ this.props.showLink() }` }> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      errorMessageAlert = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={ faExclamationTriangle } />{' '}\n            {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <ListGroup.Item>\n          <Row>\n            <Col xs={ 12 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n              <Card.Title>\n                {this.props.icon ? this.props.icon : ''} {title}\n              </Card.Title>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              {status && status === 'info' ? (\n                <Button variant=\"info\" size=\"sm\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'danger' ? (\n                <Button variant=\"danger\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faExclamationTriangle } />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'success' ? (\n                <Button variant=\"success\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faCheck } />\n                </Button>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {this.props.subtitle}\n              </Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 } >\n          {this.props.sttEngine && this.props.clipName &&  <Accordion>\n              <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                <Badge variant=\"light\">Info</Badge>\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <>\n                  {this.props.sttEngine?<>STT Engine: <Badge variant=\"light\">{this.props.sttEngine}</Badge></>:null}<br/>\n                  {this.props.clipName? <>File Name: <Badge variant=\"light\">{this.props.clipName}</Badge></>:null}\n                  </>\n                </Accordion.Collapse>\n            </Accordion>}\n            </Col>\n          </Row>\n\n          {errorMessageAlert? <>\n            <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              {errorMessageAlert}\n            </Col>\n          </Row>\n          </>:null}\n      </ListGroup.Item>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\nimport whichJsEnv from '../../../Util/which-js-env';\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(transcript => {\n      console.log('transcript', transcript)\n      if (\n        includesText(transcript.title, searchText) ||\n        includesText(transcript.description, searchText) ||\n        includesText(transcript.clipName, searchText) || \n        includesText(transcript.sttEngine, searchText) \n      ) {\n        transcript.display = true;\n\n        return transcript;\n      } else {\n        transcript.display = false;\n\n        return transcript;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                sttEngine={item.sttEngine}\n                clipName={item.clipName}\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <ListGroup \n          style={ { height: '75vh', overflow: 'scroll' } }\n          //  variant=\"flush\"\n           >\n            {itemsCards}\n          </ListGroup>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col xs={ 12 } sm={ 6 } md={ 7 } lg={ 7 } xl={ 7 }>\n            {searchEl}\n          </Col>\n          { (whichJsEnv() !== 'cep')?(\n            <>\n            <Col xs={ 12 } sm={ 3 } md={ 2 } lg={ 2 } xl={ 2 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n            <Col xs={ 12 } sm={ 3 } md={ 3 } lg={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewBatchForm } variant=\"secondary\" size=\"sm\" block>\n                New Batch {this.props.model}s\n            </Button>\n            </Col>\n            </>\n          ): (\n            <Col xs={ 12 } sm={ 6 } md={ 5 } lg={ 5 } xl={ 5 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n            </Col>\n          )}\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/#dismissing\nclass CustomAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleDismiss = () => this.setState({ show: false });\n\n  render() {\n    if (this.state.show) {\n      return (\n        <Alert\n          variant={ this.props.variant }\n          onClose={ this.handleDismiss }\n          dismissible\n        >\n          {this.props.heading ? (\n            <Alert.Heading>{this.props.heading}</Alert.Heading>\n          ) : (\n            ''\n          )}\n          {this.props.message}\n        </Alert>\n      );\n    } else {\n      return (\n        <>\n          <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default CustomAlert;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path'; \n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only \n  handleAdobeCepSetFilePath = ()=>{\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`,  (response)=>{\n      console.log('handleAdobeCepSetFilePath');\n      if(response !== \"\"){\n        console.log('handleAdobeCepSetFilePath', response);\n      //  const newFilePath = response;\n      //  fileName = path.basename(newFilePath);\n      // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n       this.setState({\n         title: path.basename(response),\n         adobeCepFilePath: response\n       })\n     }\n     else{\n       // TODO: review logic for edge case\n       alert('select a clip')\n     }\n   })\n  }\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n    if(whichJsEnv() !== 'cep'){\n      formData.append('title', this.state.title);\n      formData.append('description', this.state.description);\n      console.log(\"formData.get('path')\", formData.get('path'));\n    }\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n\n    if (whichJsEnv() === 'cep') {\n  \n      data = {\n        title: this.state.title,\n        description: this.state.description,\n        path: this.state.adobeCepFilePath\n      };\n    \n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n           { (whichJsEnv() === 'cep')?(\n              <>\n              <Button  variant=\"light\" onClick={this.handleAdobeCepSetFilePath} block>Pick a file</Button>\n              <Form.Text className=\"text-muted\">\n                Select an audio or video file to transcribe. Click on a file in the Adobe Premiere project browser window, and the click <code>pick a file</code> to select a file to transcribe. Then \n                click <code>save</code> when you are ready to start the transcriptiion.\n              </Form.Text>\n            </>\n          ):(\n            <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*,.mxf\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n            Select an audio or video file to transcribe\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n              Please chose a audio or video file to transcribe\n            </Form.Control.Feedback>\n          </Form.Group>\n          )}\n          \n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n         \n          \n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      \n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\nimport path from 'path'; \n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass BatchTranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      adobeCepFilePath: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // This is used in Aobe CEP Panel integration only \n  handleAdobeCepSetFilePath = ()=>{\n    window.__adobe_cep__.evalScript(`$._PPP.get_current_project_panel_selection_absolute_path()`,  (response)=>{\n      console.log('handleAdobeCepSetFilePath');\n      if(response !== \"\"){\n        console.log('handleAdobeCepSetFilePath', response);\n      //  const newFilePath = response;\n      //  fileName = path.basename(newFilePath);\n      // TODO: add some visual quee that this worked (eg alert box at top? or file name/path somewhere)\n       this.setState({\n         title: path.basename(response),\n         adobeCepFilePath: response\n       })\n     }\n     else{\n       // TODO: review logic for edge case\n       alert('select a clip')\n     }\n   })\n  }\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    console.log('files',files)\n    const formData = new FormData();\n    files.forEach((file,index)=>{\n      formData.append(`file`, file);\n      formData.append(`type`, file.type);\n      if (file.path) {\n        formData.append(`path`, file.path);\n      }\n    })\n    // const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n   \n    // formData.append('file', file);\n    // formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    // if (file.path) {\n    //   formData.append('path', file.path);\n    // }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    // if (this.state.title === '') {\n    //   this.setState({ title: file.name });\n    // }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n    const formData = this.state.formData;\n    const listOfFilesPath = formData.getAll('path');\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      listOfFilesPath.forEach((filePath)=>{\n        data = {\n          title: path.basename(filePath),\n          description: `${path.basename(filePath)}`,\n          path: filePath\n        };\n\n        // if client run inside of electron\n        // is easier to pass another object with title, description\n        // as well as the additional path to the file\n        // rather then parsing a formData object in node etc..\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n\n            }).catch((e) => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: <CustomAlert\n                  dismissable={ true }\n                  variant={ 'danger' }\n                  heading={ 'Error could not contact the server' }\n                  message={ <p>There was an error trying to create this transcript on the server</p> }\n                />\n              });\n            });\n\n          } catch (e) {\n            console.error('error submitting:::', e);\n          }\n\n      })\n      \n    }\n    if(whichJsEnv() === 'browser'){\n      const formData = this.state.formData;\n      const listOfFiles = formData.getAll('file');\n      const listOfFileTypes = formData.getAll('type');\n      listOfFiles.forEach((individualFile,index)=>{\n        const individualFileFormData = new FormData();\n        individualFileFormData.append('file', individualFile);\n        individualFileFormData.append('type',  listOfFileTypes[index]);\n        individualFileFormData.append('title', individualFile.name);\n        individualFileFormData.append('description', '');\n        // individualFileFormData.append('type', file.type);\n        const  data = {\n          title: individualFile.name,\n          description: '',\n          // path: \n        };\n\n        try {\n          ApiWrapper.createTranscript(this.state.projectId, individualFileFormData, data)\n            .then(response => {\n              console.log('ApiWrapper.createTranscript-response ', response);\n              // show message or redirect\n              this.setState({\n                uploading: false,\n                uploadCompleted: true,\n                redirect: true,\n                newTranscriptId: response.transcriptId\n              });\n              this.props.handleSaveForm(response.transcript);\n              // this.props.handleCloseModal();\n    \n            }).catch((e) => {\n              console.log('error:::: ', e);\n              this.setState({\n                uploading: false,\n                redirect: false,\n                savedNotification: <CustomAlert\n                  dismissable={ true }\n                  variant={ 'danger' }\n                  heading={ 'Error could not contact the server' }\n                  message={ <p>There was an error trying to create this transcript on the server</p> }\n                />\n              });\n            });\n    \n        } catch (e) {\n          console.error('error submitting:::', e);\n        }\n      \n      })\n    }\n    if (whichJsEnv() === 'cep') {\n      alert('not implemented in adobe CEP')\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n          <Form.Label>Select Files </Form.Label>\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*,.mxf\"\n              multiple=\"multiple\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n            Select multiple audio or video file to transcribe.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            This allows you to batch transcribe multiple files, the transcript name will default to the clip name.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            You can change the default transcript name after you've clicked save.\n            </Form.Text>\n            <Form.Text className=\"text-muted\">\n            Use command <code>⌘</code> + click or  shift <code>⇧</code> + click to select multiple files.\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n              Please chose a audio or video file to transcribe\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      \n      </>\n    );\n  }\n}\n\nexport default BatchTranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport BatchTranscriptForm from './BatchTranscriptForm';\n\nclass NewBatchTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <BatchTranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewBatchTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport NewBatchTranscriptFormModal from './NewBatchTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      isNewBatchModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n      this.getTranscripts();\n      // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly, \n      // and only if there are items in progress in the list, it checks the backed for updates\n      this.interval = setInterval(() => {\n        console.log('Running interval to check for transcripts');\n        if(this.areThereTranscriptsInProgress(this.state.items)){\n            console.log('interval: checking transcirpt update');\n            this.getTranscripts();\n        }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount =() => {\n    if (this.interval) {\n       clearInterval(this.interval);\n    }\n  }\n\n  getTranscripts = async () =>{\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n      // TODO: add error handling\n      if (result) {\n        const tmpList = result.transcripts.map((item) => {\n          item.display = true;\n\n          return item;\n        });\n        this.setState({\n          projectTitle: result.projectTitle,\n          items: tmpList\n        });\n      }\n  }\n\n  areThereTranscriptsInProgress = (items) => {\n    if (items.length !== 0) {\n      const result = items.find((transcript) => {\n\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  }\n\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState');\n    });\n  }\n\n  // TODO: adjust for multiuple\n  handleSaveBatch = (itemsProps) => {\n    console.log('handleSaveBatch', itemsProps);\n\n    this.setState({\n      isNewBatchModalShow: false\n    })\n\n    if(itemsProps.length){\n      const newItems = itemsProps.map((item)=>{\n        item.display = true;\n        return item;\n      })\n      const { items } = this.state;\n      const itemsList = [ ...items ];\n      const newItemsList = [...itemsList, ...newItems]\n      this.setState({\n        items: newItemsList,\n        title:'',\n        itemId: null,\n        description: '',\n        isNewBatchModalShow: false\n      }, () => {\n        console.log('setState - itemsProps.length', this.state.isNewBatchModalShow);\n      });\n    }else{\n    const newItem = itemsProps;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState - single',  this.state.isNewBatchModalShow);\n    });\n    }\n   \n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      }, () => {\n        console.log('deleted')\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleShowCreateNewBatchForm = ()=>{\n    console.log('handleShowCreateNewBatchForm')\n    this.setState({ isNewBatchModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseBatchModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewBatchModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleShowCreateNewBatchForm={ this.handleShowCreateNewBatchForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            handleCloseBatchModal={ this.handleCloseBatchModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } color=\"#007bff\" /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n\n        <NewBatchTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Batch Transcripts' }\n            show={ this.state.isNewBatchModalShow }\n            handleCloseModal={ this.handleCloseBatchModal }\n            handleSaveForm={ this.handleSaveBatch }\n          />\n          \n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faColumns } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            icon={ <FontAwesomeIcon icon={ faColumns } color=\"#007bff\"/> }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name'\n    };\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  };\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <CustomBreadcrumb items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: this.state.projectName\n                }\n              ] } />\n            </Col>\n          </Row>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={ this.state.key }\n            onSelect={ key => this.setState({ key }) }\n          >\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={ this.state.projectId }/>\n            </Tab>\n            <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n              <PaperEdits projectId={ this.state.projectId } />\n            </Tab>\n          </Tabs>\n        </Container>\n        {/* <CustomFooter/> */}\n      </>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from 'react';\nimport path from 'path';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport  TranscriptEditor  from 'slate-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\n// import CustomFooter from '../lib/CustomFooter/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomFooter from '../lib/CustomFooter/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        console.log('json',json)\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url,\n          clipName: json.clipName\n        });\n      });\n  }\n\n  handleSave = (autoSaveData) =>{\n    console.log('handleSave', autoSaveData)\n    const data = autoSaveData;\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('ApiWrapper.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // More discrete auto save notification \n        this.setState({\n        savedNotification:  <small className={'text-success'}>Transcript: <b>{this.state.transcriptTitle}</b> has been saved at <b>{(new Date()).toLocaleString()}</b></small>\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    // Workaround to change layout of TranscriptEditor for audio files. \n    // For now only handling limited numnber of file extension that have more of a certainty of being audio\n    // as opposed to more ambiguos extensions such as ogg or mp4 that could be either video or audio\n    // there might be better ways to determine if a clip is audio or video, especially node/\"server side\" but\n    // might also be more of a setup eg using ffprobe etc..\n    let mediaType = 'video';\n    if(path.extname(this.state.clipName) ==='.wav' \n      || path.extname(this.state.clipName) ==='.mp3' \n      || path.extname(this.state.clipName) ==='.m4a' \n      || path.extname(this.state.clipName) ==='.flac' \n      || path.extname(this.state.clipName) ==='.aiff'){\n      mediaType = 'audio'\n    }\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { marginBottom: '5em', \n        backgroundColor: '#eee' \n        } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 } style={{marginBottom: '0'}}>\n              <CustomBreadcrumb\n              backgroundColor={ 'transparent'}\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                }\n                ] }\n              />\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson !== null &&\n          <TranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            // showTitle={true}\n            isEditable={ true }// se to true if you want to be able to edit the text\n            title={ this.state.transcriptTitle }\n            mediaType={ mediaType }\n            autoSaveContentType={'digitalpaperedit'}\n            handleSaveEditor={ this.handleSave }\n            // handleAutoSaveChanges={ this.handleSave }\n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowingFilterOptions: false,\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n      this.props.handleShowParagraphsMatchingSearch( !state.showParagraphsMatchingSearch);\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n      \n     });\n   }\n\n   handleFilterResults = ()=>{\n    this.setState((state) => {\n      if(!state.isShowingFilterOptions){\n        this.props.handleShowParagraphsMatchingSearch( true );\n        return {\n          isShowingFilterOptions: true,\n          showTextSearchPreferences: true,\n          showSpeakersSearchPreferences: true,\n          showLabelsSearchPreferences: true,\n          // defaults to show only matching paragraph to be checked\n          showParagraphsMatchingSearch: true\n        };\n      }else{\n        this.props.handleShowParagraphsMatchingSearch( false );\n        return {\n          isShowingFilterOptions: false,\n          showTextSearchPreferences: false,\n          showSpeakersSearchPreferences: false,\n          showLabelsSearchPreferences: false,\n          // remove preferences for showing matching paragraphjs when removing filters\n          showParagraphsMatchingSearch: false\n        };\n      }\n    \n    });\n   }\n\n\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n              <InputGroup.Append>\n                {/* <Button \n                  variant=\"secondary\"\n                  onClick={this.handleFilterResults}\n                > */}\n                  <InputGroup.Text\n                  style={{cursor: 'pointer'}}\n                    onClick={this.handleFilterResults}\n                    >\n                  <FontAwesomeIcon \n                      icon={ faFilter }\n                      title=\"Filter results\" \n                      />\n                  </InputGroup.Text>\n                   \n                {/* </Button> */}\n              </InputGroup.Append>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by labels...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speakers...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from 'slate-transcript-editor';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) } | Click on a speaker to jump to the corresponding time in the media.` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\nimport { shortTimecode } from 'slate-transcript-editor';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        style={{cursor: 'pointer'}}\n        title={ `start:${ shortTimecode(word.start) } - end:${ shortTimecode(word.end) } | Double click on a word to jump to the corresponding time in the media.` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\" style={{padding: '1em'}}>\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '1em'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n      \n        <Button variant=\"link\" onClick={ this.handleShow } block>{this.props.openBtn}</Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={2 } md={2 } lg={2 } xl={2 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span><FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /></Button> }\n            </Col>\n            <Col xs={ 1 } sm={2 } md={ 2 } lg={ 2 } xl={ 2 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <div>\n          <Card.Body>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Body>\n          { labelsList }\n          <Card.Body className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <><FontAwesomeIcon icon={ faTag } /> Create New Label</> }\n            />\n          </Card.Body>\n        </div>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n    const result = [];\n    const map = new Map();\n    for (const item of array) {\n      if (!map.has(item.speaker)) {\n        map.set(item.speaker, true); // set any value to Map\n        result.push({\n          value: item.speaker,\n          label: item.speaker\n        });\n      }\n    }\n  \n    return result;\n  }\n\n  export default makeListOfUniqueSpeakers;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\nimport makeListOfUniqueSpeakers from './makeListOfUniqueSpeakers.js';\n// import Paragraph from './Paragraph.js';\n\n\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0,\n      componentMounted: false\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' ApiWrapper.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations,\n          // componentMounted: true\n        });\n      });\n  }\n\n  handleLoadTranscription = () =>{\n    this.setState({\n      componentMounted: true\n    });\n  }\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    ApiWrapper.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = (isShowParagraphsMatchingSearch) => {\n    this.setState({ showParagraphsMatchingSearch: isShowParagraphsMatchingSearch });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      ApiWrapper.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    ApiWrapper.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n    return (\n      <>\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n        <Card>\n          <Card.Body style={{backgroundColor:'black', padding: '0px'}}>\n          {this.state.componentMounted &&   <video\n              src={ this.props.url }\n              ref={ this.videoRef }\n              onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n              style={ {\n                width: '100%',\n                height:'10em',\n                marginTop: '0em',\n                backgroundColor: 'black',\n                boxShadow: 'none'\n              } }\n            controls/> }\n          </Card.Body>\n          <Card.Body>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown \n                  as={ ButtonGroup } \n                  style={ { width: '100%' } } >\n                    <Button \n                    variant=\"secondary\"\n                     data-label-id={ 'default' } \n                      onClick={ this.handleCreateAnnotation } \n                    >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split \n                    variant=\"secondary\" \n                    data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Body>\n          <Card.Body style={{ paddingBottom: '0px'}}> \n            <SearchBar\n              labelsOptions={ this.state.labelsOptions }\n              speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n              handleSearch={ this.handleSearch }\n              handleLabelsSearchChange={ this.handleLabelsSearchChange }\n              handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n              handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n            />\n          </Card.Body>\n          <hr style={{ margin: '0px'}}/>\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: '62.5vh', overflow: 'scroll' } }\n          >\n            {highlights}\n\n            {this.props.transcript && !this.state.componentMounted && <Button size=\"lg\" variant=\"light\" onClick={ this.handleLoadTranscription }block>Load transcription</Button>}\n\n            {this.props.transcript && this.state.componentMounted &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleLeft,\n  faTag,\n  faUser,\n  faSearch,\n  faFileAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBarTranscripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShowingFilterOptions: false,\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false,\n      selectedOptionTranscriptSearch: false\n    };\n  }\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n      this.props.handleShowParagraphsMatchingSearch( !state.showParagraphsMatchingSearch);\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n      \n     });\n   }\n\n   handleTranscriptSearchChange = selectedOptionTranscriptSearch => {\n    this.props.handleTranscriptSearchChange(selectedOptionTranscriptSearch);\n    this.setState({ selectedOptionTranscriptSearch });\n  };\n\n   /* TODO: move SearchBarTranscripts to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n              <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                 <Button \n                  // block\n                  variant=\"secondary\"\n                  onClick={this.props.handleShowAdvancedSearchViewSearchingAcrossTranscripts}\n                  title={\"close search across transcript in a project\"}\n                >\n                  <FontAwesomeIcon \n                   icon={ faAngleLeft }\n                  />\n                </Button>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                 <InputGroup >\n                    {/* Search */}\n                    <FormControl\n                      //  TODO: pass labels, speakers, and paragraph pref\n                      onChange={ (e) => { this.props.handleSearch(e, {\n                        showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                        showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                        showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences,\n                        selectedOptionTranscriptSearch: this.state.selectedOptionTranscriptSearch\n                      });} }\n                      value={ this.props.searchValue }\n                      placeholder=\"Search text...\"\n                      aria-label=\"search\"\n                      aria-describedby=\"search\"\n                    />\n                    <InputGroup.Append>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={ faSearch } />\n                      </InputGroup.Text>\n                    </InputGroup.Append>\n                </InputGroup>\n                {/* <Form.Text className=\"text-muted\">\n                Search Text within a transcript \n              </Form.Text> */}\n                </Col>\n               </Row>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faFileAlt } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionTranscriptSearch }\n                     onChange={ this.handleTranscriptSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.transcriptOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by transcripts...' }\n                   />\n                {/* <Form.Text className=\"text-muted\">\n                Filter by transcripts in the current project\n                </Form.Text> */}\n                 </Col>\n               </Row>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speakers...' }\n                   />\n                {/* <Form.Text className=\"text-muted\">\n                  Filter by speaker in the current project\n                </Form.Text> */}\n                 </Col>\n               </Row>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by labels...' }\n                   />\n                {/* <Form.Text className=\"text-muted\">\n                  Filter by labels in the current project\n                </Form.Text> */}\n                 </Col>\n               </Row>\n       </>\n     );\n   }\n}\n\nexport default SearchBarTranscripts;","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle,\n  faSearch\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\nimport SearchBarTranscripts from './SearchBarTranscripts/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport makeListOfUniqueSpeakers from './makeListOfUniqueSpeakers.js';\nimport Paragraphs from './Paragraphs/index.js';\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchString: '',\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      selectedOptionLabelSearch: [],\n      selectedOptionSpeakerSearch: [],\n      selectedOptionTranscriptsSearch: [],\n      showParagraphsMatchingSearch: false,\n      showAdvancedSearchViewSearchingAcrossTranscripts: false\n    }\n  }\n\n  // New \n  handleSearch = (e, searchPreferences) => {\n    console.log('Transcripts:: SEARCH:::',e.target.value, searchPreferences)\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      // TODO: re introduce this \n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  // To search across all transcripts \n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n  // To search across all transcripts \n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n  // To search across all transcripts \n  handleTranscriptSearchChange = (selectedOptionTranscriptsSearch) => {\n    this.setState({\n      selectedOptionTranscriptsSearch\n    });\n  }\n  // To search across all transcripts \n  handleShowParagraphsMatchingSearch = (isShowParagraphsMatchingSearch) => {\n    this.setState({ showParagraphsMatchingSearch: isShowParagraphsMatchingSearch });\n  }\n\n  // TODO: Not yet implemented - low priority\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      console.log('wordEl',wordEl)\n      // this.videoRef.current.currentTime = wordEl.dataset.start;\n      // this.videoRef.current.play();\n    }\n  };\n\n  handleFilterResults = ()=>{\n    console.log('handleFilterResults')\n    this.setState({\n      searchString: '',\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      selectedOptionLabelSearch: [],\n      selectedOptionSpeakerSearch: [],\n      selectedOptionTranscriptsSearch: []\n    })\n  }\n\n  handleShowAdvancedSearchViewSearchingAcrossTranscripts = ()=>{\n    this.setState((prevState) => {\n      if(!prevState.showAdvancedSearchViewSearchingAcrossTranscripts){\n        return  {\n          showAdvancedSearchViewSearchingAcrossTranscripts: true,\n          // in this advanced search view - when searchign across paragraphs always show paragraphs matching searches\n          // which means segmenting transcript to show only paragraphs that metch serching criteria \n          showParagraphsMatchingSearch: true \n        };\n      }else{\n        return {\n          showAdvancedSearchViewSearchingAcrossTranscripts: false,\n          // in this advanced search view - when searchign across paragraphs always show paragraphs matching searches\n          // which means segmenting transcript to show only paragraphs that metch serching criteria \n          showParagraphsMatchingSearch: false,\n          // reset search if closing view  \n          selectedOptionLabelSearch: [],\n          selectedOptionSpeakerSearch: [],\n          selectedOptionTranscriptsSearch: []\n        };\n      }\n    })\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      // Note: that if there are transcripts in progress, current setup\n      // won't show when they are done in this view\n      // only in project's view list of transcript you get a UI update when they are done \n      return (\n        <Nav.Item key={ transcript.id  }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            eventKey={ transcript.id }\n            // variant={'secondary'}\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { (transcript.status !=='done' && transcript.status !== 'in-progress' )|| transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    // id - value - label - color - description \n    // const transcriptOptions = [{value: 'test', label: 'test'}];\n    const transcriptsOptions = this.props.transcripts.map((transcript)=>{\n      if(transcript.id && transcript.transcriptTitle ){\n        return {\n         id: transcript.id,\n         value: transcript.id,\n         label: transcript.transcriptTitle,\n         description: transcript.description,\n         status: transcript.status \n        }\n      }else{\n        return {\n         status: transcript.status \n        }\n      }\n    }) // Filter to show only transcripts that are done. excluding in progress and errored \n    .filter((transcript)=>{\n     return transcript.status ==='done'\n    })\n    \n    const transcriptsUniqueListOfSpeakers2D = this.props.transcripts.map((transcript)=>{\n      if(transcript.transcript &&transcript.transcript.paragraphs){\n        return makeListOfUniqueSpeakers(transcript.transcript.paragraphs)\n      }\n      else{\n        return {value: 'test', label: 'test'}\n      }\n      \n    })\n    const transcriptsUniqueListOfSpeakers = transcriptsUniqueListOfSpeakers2D.reduce(function(prev, curr) {\n      return prev.concat(curr);\n    });\n    // remove duplicates \n    function removeDuplicates(array) {\n      //  https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\n      return Array.from(new Set(array.map(JSON.stringify))).map(JSON.parse);\n    };\n    const transcriptsUniqueListOfSpeakersNoDuplicates = removeDuplicates(transcriptsUniqueListOfSpeakers)\n   \n    /* TODO: Will this work? */\n    const searchBarTranscriptsElement = <SearchBarTranscripts\n      labelsOptions={  this.props.labelsOptions }\n      speakersOptions={ transcriptsUniqueListOfSpeakersNoDuplicates }\n      handleSearch={ this.handleSearch }\n      searchValue={this.state.searchString}\n      handleLabelsSearchChange={ this.handleLabelsSearchChange }\n      handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n      handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n      transcriptOptions={ transcriptsOptions}\n      handleTranscriptSearchChange={this.handleTranscriptSearchChange}\n      handleFilterResults={this.handleFilterResults}\n      handleShowAdvancedSearchViewSearchingAcrossTranscripts={this.handleShowAdvancedSearchViewSearchingAcrossTranscripts}\n    />\n\n    const transcriptsElTab = this.props.transcripts.map((transcript,) => {\n      return (\n        <Tab.Pane key={ transcript.id } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n   const  searchedParagraphsAcrossTranscripts = this.props.transcripts.map((transcript, index)=>{\n     if(transcript.transcript && this.state.selectedOptionTranscriptsSearch.find((t)=> {return transcript.id === t.id})){\n      return <Paragraphs\n        labelsOptions={ this.props.labelsOptions }\n        annotations={transcript.annotations? transcript.annotations : []}\n        transcriptJson={ transcript.transcript }\n        searchString={ this.state.searchString ? this.state.searchString : '' }\n        showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n        selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n        selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n        transcriptId={ transcript.id }\n        handleTimecodeClick={ this.handleTimecodeClick }\n        // TODO: these attributes below have not been implemented - low priority \n        // handleWordClick={ ()=>{alert('not implemented in this view, switch to individual transcript')}}\n        handleWordClick={ this.handleWordClick }\n        // handleDeleteAnnotation={ this.handleDeleteAnnotation }\n        handleDeleteAnnotation={ ()=>{ alert('not implemented in this view, switch to individual transcript') } }\n        // handleEditAnnotation={ this.handleEditAnnotation }\n        handleEditAnnotation={ ()=>{ alert('not implemented in this view, switch to individual transcript') } }\n      />\n     } else {\n       return null;\n     }\n    })\n\n    return (\n      <>\n       <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n         >\n          <Row>\n        \n          <Col sm={  !this.state.showAdvancedSearchViewSearchingAcrossTranscripts? 3 : 0 }>\n          { !this.state.showAdvancedSearchViewSearchingAcrossTranscripts?  <>\n                <Button  \n              onClick={this.handleShowAdvancedSearchViewSearchingAcrossTranscripts}\n              variant={\"secondary\"} \n              block\n              title={'Search across transcripts in this project'}\n              size={'sm'}\n             ><FontAwesomeIcon icon={faSearch}/> Project's Transcripts\n           </Button>\n              <hr/>\n             \n              <Nav variant=\"pills\" className=\"flex-column\">\n                <div style={{height: '97vh', overflow: 'scroll'}}>\n                { transcriptsElNav }\n                </div>\n              </Nav> \n                    </>   : null }\n            </Col>\n   \n            <Col sm={ !this.state.showAdvancedSearchViewSearchingAcrossTranscripts ? 9 : 12 }>\n              <Tab.Content>\n                { this.state.showAdvancedSearchViewSearchingAcrossTranscripts ? <> {searchBarTranscriptsElement}\n                \n                <section style={{ \n                  height: '80vh', \n                  overflow: 'auto',\n                  border: 'solid',\n                  borderWidth: '0.01em',\n                  borderColor: 'lightgrey'\n                  }}>\n                {searchedParagraphsAcrossTranscripts}\n                </section>\n                \n                </>:<> \n                {transcriptsElTab} \n                </> } \n             \n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React from 'react';\n\nconst Filler = (props) => {\n  return <div style={ {\n    width: `${ props.percentage }%`,\n    background: 'red',\n    height: '100%',\n    borderRadius: 'inherit'\n  } } />;\n};\n\nexport default Filler;\n","import React from 'react';\nimport Filler from './Filler';\n\nconst ProgressBar = (props) => {\n\n  return (\n    <div onClick={ props.onClick }\n      style={ {\n        position: 'relative',\n        height: '12px',\n        width: '100%',\n        opacity: '1'\n      } } >\n      <Filler percentage={ props.percentage }></Filler>\n    </div>\n\n  );\n};\nexport default ProgressBar;\n","import React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport ProgressBar from '../ProgressBar';\nimport PropTypes from 'prop-types';\n\nconst getPercentage = (currentTime, duration) => currentTime / duration * 100;\n\nconst VideoContextProgressBar = (props) => {\n  const ref = useRef();\n\n  const [ percentage, setPercentage ] = useState(0);\n  const [ videoContext, setVideoContext ] = useState();\n  const [ width, setWidth ] = useState(0);\n\n  const handleClick = ({ nativeEvent: { offsetX } }) => {\n    videoContext.currentTime = (offsetX / width) * videoContext.duration;\n    const percent = getPercentage(videoContext.currentTime, videoContext.duration);\n    setPercentage(percent);\n  };\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      setWidth(ref.current.offsetWidth);\n    }\n  }, [ ref ]);\n\n  useEffect(() => {\n    const fillerAnimation = () => {\n      const percent = getPercentage(videoContext.currentTime, videoContext.duration);\n      setPercentage(percent);\n      requestAnimationFrame(fillerAnimation);\n    };\n\n    setVideoContext(props.videoContext);\n\n    if (videoContext) {\n      fillerAnimation();\n    }\n  }, [ props.videoContext, videoContext ]);\n\n  return (\n    <div ref={ ref } style={ { width:'100%' } }>\n      <ProgressBar onClick={ handleClick } percentage={ percentage } />\n    </div>\n  );\n};\n\nVideoContextProgressBar.propTypes = {\n  videoContext: PropTypes.any\n};\n\nexport default VideoContextProgressBar;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop } from '@fortawesome/free-solid-svg-icons';\nimport PropTypes from 'prop-types';\n\nconst playIcon = <FontAwesomeIcon icon={ faPlay } />;\nconst pauseIcon = <FontAwesomeIcon icon={ faPause } />;\nconst stopIcon = <FontAwesomeIcon icon={ faStop } />;\n\nconst Controls = (props) => {\n\n  const [ isPlaying, setIsPlaying ] = useState(false);\n\n  const handlePlay = () => {\n    props.handlePlay();\n    setIsPlaying(true);\n  };\n\n  const handlePause = () => {\n    props.handlePause();\n    setIsPlaying(false);\n  };\n\n  const handleStop = () => {\n    props.handleStop();\n    setIsPlaying(false);\n  };\n\n  return (\n    <>\n      <Col sm={ 6 }>\n        <Button\n          size=\"sm\"\n          block\n          variant=\"secondary\"\n          onClick={ isPlaying ? handlePause : handlePlay }\n        >\n          { isPlaying ? pauseIcon : playIcon }\n        </Button>\n      </Col>\n      <Col\n        sm={ 6 }\n      >\n        <Button\n          size=\"sm\"\n          block\n          variant=\"secondary\"\n          onClick={ handleStop }\n        >\n          { stopIcon }\n        </Button>\n      </Col>\n    </>\n  );\n};\n\nexport default Controls;\n\nControls.propTypes = {\n  handleStop: PropTypes.any,\n  handlePlay: PropTypes.any,\n  handlePause: PropTypes.any\n};\n","import React, { useState, useEffect } from 'react';\nimport VideoContextProgressBar from './VideoContextProgressBar';\nimport Controls from '../Controls';\nimport Row from 'react-bootstrap/Row';\nimport PropTypes from 'prop-types';\nimport VideoContext from 'videocontext';\n\nconst VideoContextPreview = (props) => {\n  const [ videoContext, setVideoContext ] = useState();\n\n  const updateVideoContext = (media) => {\n    media.forEach(({ type, sourceStart, start, duration, src }) => {\n      const node = videoContext[type](src, sourceStart);\n      node.startAt(start);\n      node.stopAt(start + duration);\n      node.connect(videoContext.destination);\n    });\n  };\n\n  const handleStop = () => {\n    videoContext.pause();\n    setVideoContext(vc => {\n      vc.currentTime = 0;\n\n      return vc;\n    });\n  };\n\n  useEffect(() => {\n    if (props.canvasRef && props.canvasRef.current) {\n      setVideoContext(new VideoContext(props.canvasRef.current));\n    }\n\n  }, [ props.canvasRef ]);\n\n  if (videoContext) {\n    updateVideoContext(props.playlist);\n  }\n\n  const secondsToHHMMSSFormat = (seconds) => {\n    return new Date(seconds * 1000).toISOString().substr(11, 8);\n  };\n\n  return (\n    <>\n      <Row\n        className={ 'justify-content-center' }\n        style={ { backgroundColor: 'black' } }\n      >\n        <canvas\n          ref={ props.canvasRef }\n          width={ props.width }\n          height={ props.width * 0.5625 }\n        />\n      </Row>\n      <Row\n        className={ 'justify-content-center' }\n        style={ { backgroundColor: 'lightgrey' } }\n      >\n        <VideoContextProgressBar videoContext={ videoContext }/>\n      </Row>\n      <Row style={ { marginTop: '0.4em' } }>\n        <Controls\n          handlePlay={ videoContext ? () => videoContext.play() : () => console.log('handlePlay') }\n          handlePause={ videoContext ? () => videoContext.pause() : () => console.log('handlePause') }\n          handleStop={ videoContext ? () => handleStop() : () => console.log('handleStop') }\n        />\n      </Row>\n      <Row className={ 'justify-content-center' }>\n        Total duration: {videoContext ? secondsToHHMMSSFormat(videoContext.duration) : '00:00:00'}\n      </Row>\n    </>\n  );\n};\n\nVideoContextPreview.propTypes = {\n  canvasRef: PropTypes.any,\n  playlist: PropTypes.array,\n  videoContext: PropTypes.any,\n  width: PropTypes.any\n};\n\nVideoContextPreview.defaultProps = {\n  playlist: []\n};\n\nexport default VideoContextPreview;\n","/* eslint-disable react/prop-types */\nimport React, { useRef } from 'react';\nimport VideoContextPreview from './VideoContextPreview';\nimport PropTypes from 'prop-types';\n\nconst PreviewCanvas = props => {\n  const canvasRef = useRef();\n\n  return (\n    <VideoContextPreview\n      width={ props.width }\n      canvasRef={ canvasRef }\n      playlist={ props.playlist }\n    />\n  );\n};\n\nPreviewCanvas.propTypes = {\n  playlist: PropTypes.array,\n  width: PropTypes.number\n};\n\nPreviewCanvas.defaultProps = {\n  playlist: []\n};\n\nexport default PreviewCanvas;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w, index) => {return (\n        // eslint-disable-next-line react/jsx-key\n        <span\n          // TODO: add w.id to words to us as index?\n          key={ w.start + index }\n          className=\"words\"\n          title={ `stat: ${ w.start }- end: ${ w.end }` }\n          data-start={ w.start }\n          data-end={ w.end }\n        >{w.text} </span>);});\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component,useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from 'react-bootstrap/Button'\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight,\n  faTimes,\n  faHeading,\n  faMicrophoneAlt,\n  faStickyNote,\n  faPaste\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: 'white' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span style={{ cursor: 'move'}}> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\nconst sharedStyle = {\n  border:'none',\n  width: '100%',\n  marginTop: '0.75em',\n  height: '0.1em',\n  backgroundColor: 'white',\n}\n\nconst SortableItem = sortableElement(({ \n  indexNumber, \n  value, \n  type, \n  handleDelete, \n  handleEdit, \n  handleAddTranscriptElementToProgrammeScript,\n  handleAddTranscriptSelectionToProgrammeScriptTmpSave,\n  handleChangeInsertPointPosition \n} ) => {\n\n  const [isContextMenuVisible, setContextMenuVisibility] = useState(false);\n\n  const [customStyle, setStyle] = useState({ \n      ...sharedStyle,\n      backgroundColor: 'white',\n    });\n\n  const handleContextMenu = (event) =>{\n    event.preventDefault();\n    setContextMenuVisibility(true)\n  }\n\n  const handleAddTranscriptSelectionToProgrammeScript =(indexNumber)=>{\n    handleAddTranscriptSelectionToProgrammeScriptTmpSave(indexNumber);\n  }\n\n  return (<li style={{\n    //  borderStyle: 'dashed',\n    // borderWidth: '0.01em',\n    // borderColor: 'lightgray',\n    // padding: '1.5em'\n  }\n    }>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } style={{ cursor: 'pointer'}} icon={ faPen } onClick={ () => { handleEdit(indexNumber); } } /> : null}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n        {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' }   style={{ cursor: 'pointer'}} icon={ faTrash } onClick={ () => {handleDelete(indexNumber);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n    <Row>\n      <Col>\n    {isContextMenuVisible? \n      <ButtonGroup size=\"sm\" block aria-label=\"Basic example\" style={{ cursor: 'pointer', width:'100%'}}>\n        <Button variant=\"secondary\" \n          onClick={()=>{setContextMenuVisibility(false);}} \n        ><FontAwesomeIcon icon={faTimes}/></Button>\n         <Button variant=\"secondary\" \n          onClick={()=>{handleAddTranscriptSelectionToProgrammeScript(indexNumber); setContextMenuVisibility(false)}}\n        ><FontAwesomeIcon icon={ faPaste } /> Paste Selection</Button>\n        <Button variant=\"secondary\" \n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('title',indexNumber); setContextMenuVisibility(false)}}\n        ><FontAwesomeIcon icon={ faHeading } /> Heading</Button>\n        <Button variant=\"secondary\"\n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('voice-over',indexNumber); setContextMenuVisibility(false)}} \n        ><FontAwesomeIcon icon={ faMicrophoneAlt } />  Voice over</Button>\n        <Button variant=\"secondary\"\n          onClick={()=>{handleAddTranscriptElementToProgrammeScript('note',indexNumber);  setContextMenuVisibility(false)}}  \n        ><FontAwesomeIcon icon={ faStickyNote } /> Note</Button>\n           <Button variant=\"secondary\"\n          onClick={()=>{handleChangeInsertPointPosition(indexNumber);  setContextMenuVisibility(false)}}  \n          title={'move insert point'}\n        >Move insert Point<FontAwesomeIcon icon={ faArrowAltCircleRight } /><FontAwesomeIcon icon={ faArrowAltCircleLeft } /></Button>\n      </ButtonGroup> \n    : null }\n      </Col>\n    </Row>\n    <Row>\n   \n    <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } \n        style={{ cursor: 'context-menu'}}\n        onMouseOver={()=>{\n          setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'lightgrey'\n        });\n      }}\n        onMouseLeave={()=>{\n          setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'white'\n        });\n      }}\n        onClick={handleContextMenu}\n        >\n         {customStyle.backgroundColor === 'lightgrey'? <span style={{color:'grey'}}>{'+'}</span>:null}\n    </Col>\n    <Col xs={ 11 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 } \n          style={{ cursor: 'context-menu'}}\n          onMouseOver={()=>{\n          setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'lightgrey'\n        })}}\n      onMouseLeave={()=>{\n        setStyle({ \n          ...sharedStyle,\n          backgroundColor: 'white'\n        });\n        // setContextMenuVisibility(false);\n      }}\n        onClick={handleContextMenu}\n        >\n      <div  className={'insertDiv'} style={customStyle} \n      ></div>\n    </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el,index) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => {\n          return <SortableItem\n            key={ `item-${ index }` }\n            index={index}\n            indexNumber={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n            handleAddTranscriptElementToProgrammeScript={this.props.handleAddTranscriptElementToProgrammeScript}\n            handleAddTranscriptSelectionToProgrammeScriptTmpSave={this.props.handleAddTranscriptSelectionToProgrammeScriptTmpSave}\n            handleChangeInsertPointPosition={this.props.handleChangeInsertPointPosition}\n          />\n        })}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: parseFloat(wordEl.dataset.start),\n    end: parseFloat(wordEl.dataset.end),\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import {\n    Document,\n    HeadingLevel,\n    AlignmentType,\n    Paragraph,\n    TextRun,\n    Packer\n} from 'docx';\nimport {secondsToTimecode, timecodeToSeconds, shortTimecode} from \"slate-transcript-editor\";\n\nconst programmeScriptJsonToDocx = (edlJson,isWithClipReference) => {\n    console.log('edlJson', edlJson.title)\n    const transcriptTitle = edlJson.title;\n\n    const doc = new Document({creator: 'Test', description: 'Test Description', title: transcriptTitle});\n\n    // add body\n    const sections = []\n    edlJson.events.forEach((event) => {\n        if (event.type === 'title') { \n            sections.push(new Paragraph({\n                text: event.text,\n                heading: HeadingLevel.HEADING_1,\n                spacing: {\n                    after: 200\n                }\n            }))\n        } else if (event.type === 'voice-over') {\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({ \n                        text: `Voice Over:\\t`, \n                        italics: false, \n                        bold: true\n                    }),\n                    new TextRun({\n                        text: `${ event.text}`\n                    }),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n        } else if (event.type === 'note') { \n            sections.push(new Paragraph({\n                children: [\n                    new TextRun(\n                        {text: `Notes:\\t`, italics: true, bold: true}\n                    ),\n                    new TextRun(\n                        {text: `${\n                                event.text\n                            }`, italics: true}\n                    ),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n\n        } else if (event.type === 'paper-cut') {\n            const text = event.words.map((word) => {\n                return word.text;\n            }).join(' ');\n\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({\n                        text: `${event.speaker}\\t`, \n                        bold: true,\n                        allCaps: true\n                    }),\n                    new TextRun({\n                        text: `${text}`\n                    })\n                ],\n                spacing: {\n                    after: 100\n                }\n            }))\n\n            if(isWithClipReference){\n            sections.push(new Paragraph({\n                children: [\n                    new TextRun({\n                        text: `${event.clipName}\\t [${shortTimecode(event.start)} - ${shortTimecode(event.end)}]`,\n                        size: 18\n                    }),\n                ],\n                spacing: {\n                    after: 200\n                }\n            }))\n            }\n        }\n\n        return null;\n    });\n\n    // Add transcription title\n    doc.addSection({\n        properties: {},\n        children: [\n            new Paragraph(\n                { text: transcriptTitle, heading: HeadingLevel.TITLE, alignment: AlignmentType.CENTER}\n            ),\n            ... sections\n        ]\n    });\n\n    return new Promise((resolve, reject) => {\n        return Packer.toBlob(doc).then(blob => {\n            console.log(blob);\n            resolve(blob)\n            console.log(\"Document created successfully\");\n        }).catch((error) => {\n            reject(error)\n        })\n    })\n}\n\nexport default programmeScriptJsonToDocx\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport cuid from 'cuid';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\nimport PreviewCanvas from './PreviewCanvas2/index.js';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from '@pietrop/edl-composer';\nimport generateADL from '@pietrop/aes31-adl-composer';\nimport jsonToFCPX from '@pietrop/fcpx-xml-composer';\nimport jsonToAudition from 'audition-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faTrash,\n  faListUl,\n  faJsSquare,\n  faFileCode,\n  faFilm,\n  faFileVideo,\n  faStream,\n  faFileAudio,\n  faHeadphones,\n  faVideo,\n  faFileWord,\n  faFileAlt,\n  faFlask\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScript from './ProgrammeScript.js';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs/index.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\nimport whichJsEnv from '../../../../Util/which-js-env';\nimport programmeScriptJsonToDocx from './programme-script-json-to-docx/index.js';\nimport diffDateInMinutes from '../../../../Util/diff-dates-in-minutes';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\nconst INSERT_POINT_ELEMENT = { type: 'insert-point', text: 'Insert Point to add selection' }\n\nclass ProgramScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastSaved: new Date(),\n      programmeScript: null,\n      resetPreview: false,\n      isAdvancedSelect: false,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ]\n    };\n  }\n\n   mouseUpListener = ()=>{\n    // makign sure mouse up event is also associated with a selection \n    if (window.getSelection|| document.selection) {\n      const result = getDataFromUserWordsSelection();\n      if (result) {\n        this.setState({tmpSelection: result})\n        // if advanced select is on, copy over to programme scfript\n        if(this.state.isAdvancedSelect){\n          this.handleAddTranscriptSelectionToProgrammeScript()\n        }\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push(INSERT_POINT_ELEMENT);\n        this.setState({\n          programmeScript: programmeScript\n        });\n      });\n      // listening for word selections in transcripts\n      // to save those tmp selection to enable to \n      // use contextual menu in programme script to \n      // paste those selections in the programme script\n      document.addEventListener('mouseup',this.mouseUpListener)\n  }\n  componentWillUnmount = ()=>{\n    // removing selection listener\n    try {\n      document.removeEventListener('mouseup',this.mouseUpListener);\n    } catch (error) {\n     console.error('error removing listener mouseup', error)\n    }\n  }\n\n  // TODO: save to server\n  handleProgrammeScriptOrderChange = (list) => {\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    },()=>{\n      this.handleSaveProgrammeScript()\n      this.handleUpdatePreview();\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDeleteProgrammeScriptElement = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    },()=>{\n      this.handleSaveProgrammeScript();\n      this.handleUpdatePreview();\n    }\n    );\n  }\n\n  handleEditProgrammeScriptElement = (i) => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      },()=>{\n          this.handleSaveProgrammeScript();\n          // For now programme script elements other\n          // than paper cuts don't show in preview canvas\n          // so commenting this out for now\n          // this.handleUpdatePreview();\n      });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType, indexNumber) => {\n    console.log('handleAddTranscriptElementToProgrammeScript', elementType, indexNumber)\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      if(text){\n        let indexOfInsertPoint = 0;\n        if(indexNumber || indexNumber ===0 ){\n          indexOfInsertPoint = indexNumber+1;\n        }else{\n          indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n        }\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: elementType,\n          text: text\n        };\n\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n        // TODO: save to server\n        this.setState({\n          programmeScript: programmeScript\n        },()=>{\n          this.handleSaveProgrammeScript()\n        });\n      }\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert-point';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  handleAddTranscriptSelectionToProgrammeScriptTmpSave =(indexNumber)=>{\n    // getting results of word selection from tmpSelection in state\n    // tmpSelection in populated via the on mouse app selection listener\n    // initialised in componentDidMount\n    const result = this.state.tmpSelection;\n    // extra validation to make sure it doesn't accidentally try to paste paper-cuts\n    // if the user selects those words \n    if (result && result.transcriptId && result.speaker) {\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n      let indexOfInsertPoint = 0;\n        if(indexNumber || indexNumber ===0 ){\n          indexOfInsertPoint = indexNumber+1;\n        }else{\n          indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n        }\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      }, ()=>{\n        this.handleSaveProgrammeScript();\n        this.handleUpdatePreview();\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n    }\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = (e, indexNumber) => {\n    const result = getDataFromUserWordsSelection();\n    if (result) {\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // insert at insert point\n      let indexOfInsertPoint = 0;\n      if(indexNumber || indexNumber === 0 ){\n          indexOfInsertPoint = indexNumber+1;\n        }else{\n          indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n        }\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      }, ()=>{\n        this.handleSaveProgrammeScript();\n        this.handleUpdatePreview();\n        // clearing the selection to avoid bugs\n        window.getSelection().collapse(document,0);\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        let mediaFps = defaultFps;\n        if(currentTranscript.metadata && currentTranscript.metadata.fps && (currentTranscript.metadata.fps!== 'NA')){\n          mediaFps = currentTranscript.metadata.fps\n        }\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: mediaFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  getSequenceJsonForFfmpegRemix = () => {\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log(element)\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n         // TODO: add a check that exports only if urls all contain mp4s, if not cannot send to ffmpeg-remix(?)\n        const result = {\n          start: parseFloat(element.start),\n          end: parseFloat(element.end),\n          // duration: element.end-element.start,\n          source: `${ currentTranscript.url }`,\n        };\n        return result;\n      }\n      return null;\n    }).filter((el) => {return el !== null;});\n\n    return programmeScriptPaperCuts;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/@pietrop/edl-composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    let mediaFps = defaultFps;\n    if(firstElement.fps && (firstElement.fps!== 'NA')){\n      mediaFps = firstElement.fps\n    }\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: mediaFps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  handleExportXML = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const result = jsonToAudition(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.xml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        let mediaFps = defaultFps;\n        if(currentTranscript.metadata && currentTranscript.metadata.fps && (currentTranscript.metadata.fps!== 'NA')){\n          mediaFps = currentTranscript.metadata.fps\n        }\n        // TODO: need to find a way to escape text containing ' in word text attribute \n        // const words = element.words.map((word) => {\n        //   word.text = word.text.replace(/'/g,\"\\'\"); \n        //   return word;\n        // })\n\n        const result = {\n          ...element,\n          // words,\n          // TODO: this is point to the proxy preview locally on the user's computer \n          src: currentTranscript.url,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: mediaFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        // need to escape ' otherwise Premiere.jsx chockes \n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text.replace(/'/,'\\'');}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleCepExportSequence = () =>{\n    const programmeScriptJson = this.getProgrammeScriptJson();\n\n    const paperCuts = programmeScriptJson.events.filter((el)=>{\n      return el.type ==='paper-cut'\n    })\n    // not quier sure how to escapte  ' in word text attribute, so since it's not needed for premiere export, removing the words\n    const paperCutsWithoutWords = paperCuts.map((el)=>{\n      delete el.words;\n      return el;\n    })\n    // TODO: need to remove \n    const tmpEdl = {\n      edlJson: {\n        events: paperCutsWithoutWords,\n        title: this.state.programmeScript.title\n      } \n    }\n    const premiereCommandString = \"$._PPP.create_sequence_from_paper_edit('\" + JSON.stringify(tmpEdl) + \"')\";\n    window.__adobe_cep__.evalScript(premiereCommandString, function (response){\n      // done \n      console.info('done exporting sequence')\n    })\n  }\n\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText (programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleExportDocx = async () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const isWithClipReference = false;\n    const programmeScriptDocx = await programmeScriptJsonToDocx(programmeScriptJson, isWithClipReference);\n    downloadjs(programmeScriptDocx, `${ this.state.programmeScript.title }.docx`, 'text/docx');\n  }\n\n  handleExportDocxWithClipReference = async () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const isWithClipReference = true;\n    const programmeScriptDocx = await programmeScriptJsonToDocx(programmeScriptJson, isWithClipReference);\n    downloadjs(programmeScriptDocx, `${ this.state.programmeScript.title }.docx`, 'text/docx');\n  }\n\n  handleUpdatePreview = () => {\n    let timelineStartTime = 0;\n    // playlist elements for  previe canvas\n    // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n    const playlist = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n        const duration = element.end - element.start;\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const result = {\n          type:'video',\n          start: timelineStartTime,\n          sourceStart: element.start,\n          duration: duration,\n          src: currentTranscript.url\n        };\n\n        timelineStartTime += duration;\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // Workaround to mound and unmoun the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const { programmeScript } = this.state;\n    // cloning programmeScript to avoid overriding original\n    const latestProgrammeScript = {...programmeScript}\n    if (latestProgrammeScript) {\n      const elements = [...latestProgrammeScript.elements];\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      latestProgrammeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, latestProgrammeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            this.setState({lastSaved: new Date()})\n          }\n        });\n    }\n  }\n\n  // TODO:\n  handleChangeInsertPointPosition = (indexNumber)=>{\n    const { programmeScript } = this.state;\n    const latestProgrammeScript = {...programmeScript}\n    // insert new programme script\n    // remove insert point from old programme script (eg index different from new one)\n    // save programme script\n    if (latestProgrammeScript) {\n      const elements = [...latestProgrammeScript.elements];\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      // add new insert point\n      const newInsertPoint = {...INSERT_POINT_ELEMENT}\n      elements.splice( indexNumber+1, 0, newInsertPoint);\n      // remove previous  insert point \n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      latestProgrammeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, latestProgrammeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            this.setState({\n              // playlist: playlist,\n              lastSaved: new Date(),\n              programmeScript: latestProgrammeScript\n            }, () =>{\n              // this.handleUpdatePreview()\n            })\n          }\n        });\n    }\n  }\n\n  handleAdvancedSelectCheckbox = (event) => {\n    const target = event.target;\n    this.setState({\n      isAdvancedSelect:  target.checked\n    });\n  }\n\n  handleDeleteProgrammeScriptContent = ()=>{\n   // eslint-disable-next-line no-restricted-globals\n    const confirmation = confirm('Are you usure you want to delete the content of your programme script?');\n    if(confirmation){\n      const { programmeScript } = this.state;\n      const latestProgrammeScript = {...programmeScript}\n      // latestProgrammeScript.elements = [];\n      latestProgrammeScript.elements = [{...INSERT_POINT_ELEMENT}]\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, latestProgrammeScript)\n      .then((json) => {\n        if (json.status === 'ok') {\n          this.setState({\n            // playlist: playlist,\n            lastSaved: new Date(),\n            programmeScript: latestProgrammeScript\n          }, () =>{\n            this.handleUpdatePreview()\n          })\n        }\n      });\n    }else{\n      alert('ok no worries, nothing changed')\n    }\n  }\n\n  handleExportVideoPreview= ()=>{\n    const sequence = this.getSequenceJsonForFfmpegRemix();\n    const programmeScriptTitle = this.state.programmeScript.title;\n    // timeNow -  eg \"3-6-2020_5.41.35PM\"\n    const timeNow = new Date().toLocaleString().replace(/\\//g,'-').replace(/,\\ /g,'_').replace(/:/g,'.').replace(/\\ /g,'');\n    const fileName = `${programmeScriptTitle}_${timeNow}.mp4`;\n    ApiWrapper.exportVideo(sequence, fileName).then((res)=>{\n      console.log('exported', res)\n    })\n  }\n\n  handleExportAudioPreview= ()=>{\n    const sequence = this.getSequenceJsonForFfmpegRemix();\n    const programmeScriptTitle = this.state.programmeScript.title;\n    // timeNow -  eg \"3-6-2020_5.41.35PM\"\n    const timeNow = new Date().toLocaleString().replace(/\\//g,'-').replace(/,\\ /g,'_').replace(/:/g,'.').replace(/\\ /g,'');\n    const fileName = `${programmeScriptTitle}_${timeNow}.wav`;\n    const waveForm = false;\n    ApiWrapper.exportAudio(sequence, fileName, false).then((res)=>{\n      console.log('exported', res)\n    })\n  }\n\n  handleExportAudioPreviewWithVideoWaveform = ()=>{\n    const sequence = this.getSequenceJsonForFfmpegRemix();\n    const programmeScriptTitle = this.state.programmeScript.title;\n    // timeNow -  eg \"3-6-2020_5.41.35PM\"\n    const timeNow = new Date().toLocaleString().replace(/\\//g,'-').replace(/,\\ /g,'_').replace(/:/g,'.').replace(/\\ /g,'');\n    const fileName = `${programmeScriptTitle}_${timeNow}.mp4`;\n    const waveForm = true;\n    ApiWrapper.exportAudio(sequence, fileName, waveForm).then((res)=>{\n      console.log('exported', res)\n    })\n  }\n\n\n  render() {\n    return (\n      <>\n        <Card>\n          <Card.Body style={{ padding: '1em',paddingTop: '0em'}}>\n            { !this.state.resetPreview ?\n              <PreviewCanvas playlist={ this.state.playlist }\n               width={ 300 }\n               />\n              : null }\n          </Card.Body>\n          <Card.Body>\n\n            <Row noGutters>\n              <Col xs={5} sm={ 3 } md={ 3 }lg={ 3 } xl={ 3 }>\n                <Button\n                  // block\n                  variant=\"secondary\"\n                  size=\"sm\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                  title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button><br/>\n                <input\n                  name=\"advancedSelect\"\n                  type=\"checkbox\"\n                  title=\"advanced selection - check this box to auto copy across transcript selections to insert point in programme script\"\n                  checked={this.state.isAdvancedSelect}\n                  onChange={this.handleAdvancedSelectCheckbox} \n                /> <small \n                    className={'text-secondary'} \n                    style={{marginBottom: '0em'}}\n                    title=\"advanced selection - check this box to auto copy across transcript selections to insert point in programme script\"\n                    >{'Auto copy selections'}</small>\n              </Col>\n              <Col  xs={4}  sm={ 2 } md={ 2 }lg={ 2 } xl={ 2 }>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"secondary\">\n                    <FontAwesomeIcon icon={ faListUl } />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faHeading } /> Heading\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faStickyNote } /> Note\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col  xs={3} sm={ 1 } md={ 1 }lg={ 1 } xl={ 1 }>\n                <Button variant=\"secondary\"\n                  onClick={ this.handleUpdatePreview }\n                  // size=\"sm\"\n                  title=\"update programme script audio/video preview\"\n                  // block\n                >\n                  <FontAwesomeIcon icon={ faSync } />\n                </Button>\n              </Col>\n              <Col  xs={5} sm={ 2 } md={ 2 }lg={ 2 } xl={ 2 }>\n                <Dropdown>\n                  <Dropdown.Toggle title={'Export programme script, click to see options'} variant=\"secondary\">\n                    <FontAwesomeIcon icon={ faShare } /> Export\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                  {(whichJsEnv() === 'cep')? (<>\n                    <Dropdown.Item\n                      onClick={ this.handleCepExportSequence }\n                      title=\"export the programme script as a sequence in Adobe Premiere\"\n                    >\n                    Premiere - Sequence <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </>): (<>\n                    <Dropdown.Item\n                      onClick={ this.handleExportEDL }\n                      title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                    >\n                    <FontAwesomeIcon icon={ faVideo } /> EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportFCPX }\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                    >\n                  <FontAwesomeIcon icon={ faVideo } /> FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                    >\n                      {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                      <FontAwesomeIcon icon={ faHeadphones } /> ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportXML }\n                      title=\"export XML, to import the programme script as a sequence into Adobe Premiere, Adobe Audition and Final Cut Pro 7\"\n                    >\n                    <FontAwesomeIcon icon={ faHeadphones } /> XML - Audition <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                    >\n                    <FontAwesomeIcon icon={ faFileAlt } /> Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportDocx }\n                      title=\"export docx, export the programme script as a word document\"\n                    ><FontAwesomeIcon icon={ faFileWord } /> Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportDocxWithClipReference }\n                      title=\"export docx, export the programme script as a word document, with clip name and timecode references, for text selections\"\n                    >\n                   <FontAwesomeIcon icon={ faFileWord } /> Word Doc (with ref) <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    {whichJsEnv()==='electron'?\n                      <>\n                        <Dropdown.Item\n                          onClick={ this.handleExportAudioPreview }\n                          title=\"Export wav audio preview - Experimental feature, at the moment you cannot combine audio and video in the same export.\"\n                          >\n                          <FontAwesomeIcon icon={ faFileAudio } /> Audio (wav) <FontAwesomeIcon icon={ faFlask } /><FontAwesomeIcon icon={ faInfoCircle } />\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={ this.handleExportAudioPreviewWithVideoWaveform }\n                          title=\"Export audio preview as video with animated wave form - Experimental feature, at the moment you cannot combine audio and video in the same export.\"\n                          >\n                          <FontAwesomeIcon icon={ faFileAudio } /> Audio (mp4) video <FontAwesomeIcon icon={ faFlask } /><FontAwesomeIcon icon={ faInfoCircle } />\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onClick={ this.handleExportVideoPreview }\n                          title=\"Export mp4 video preview - Experimental feature, at the moment you cannot combine audio and video in the same export.\"\n                        >\n                          <FontAwesomeIcon icon={ faFileVideo } /> Video (mp4) <FontAwesomeIcon icon={ faFlask } /> <FontAwesomeIcon icon={ faInfoCircle } />\n                        </Dropdown.Item>\n                        <Dropdown.Divider /> \n                      </>: null   }\n                    <Dropdown.Item\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                    >\n                    <FontAwesomeIcon icon={ faFileCode } /> Json <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </>)}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col className={'d-none d-sm-block'} sm={ 0 } md={ 1 }lg={1 } xl={ 1 }>\n              </Col>\n              <Col  xs={4} sm={ 2} md={ 2 }lg={ 2 } xl={ 2 }>\n                <div>\n                  <small className={'text-secondary'} style={{marginBottom: '0em'}}\n                  title={`Last Saved at ${this.state.lastSaved.toLocaleString()}`}\n                  >{ `Saved at`}<br/>{ `${this.state.lastSaved.toLocaleTimeString()}`}</small>\n                </div>\n              </Col>\n              <Col  xs={3} sm={ 1} md={ 1 }lg={ 1 } xl={ 1}>\n              <Button variant=\"secondary\"\n                  onClick={ this.handleDeleteProgrammeScriptContent }\n                  // size=\"sm\"\n                  title=\"Delete programme script content\"\n                  // block\n                >\n                       <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n       \n              </Col>\n            </Row>\n\n          </Card.Body>\n          <hr style={{margin: '0px'}}/>\n          <Card.Body style={{paddingTop: '0px'}}>\n            <article\n              style={ { height: '55vh', overflow: 'scroll', paddingTop: '1em' } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScript\n                programmeScriptElements={ this.state.programmeScript.elements }\n                handleProgrammeScriptOrderChange={ this.handleProgrammeScriptOrderChange }\n                handleDeleteProgrammeScriptElement={ this.handleDeleteProgrammeScriptElement }\n                handleEditProgrammeScriptElement={ this.handleEditProgrammeScriptElement }\n                handleAddTranscriptElementToProgrammeScript={this.handleAddTranscriptElementToProgrammeScript}\n                handleAddTranscriptSelectionToProgrammeScriptTmpSave={this.handleAddTranscriptSelectionToProgrammeScriptTmpSave}\n                handleChangeInsertPointPosition={this.handleChangeInsertPointPosition}\n                />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faEyeSlash,\n  faEye\n} from '@fortawesome/free-solid-svg-icons';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgramScript from './ProgramScript/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n\nclass PaperEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n    };\n  }\n\n  componentDidMount = async () => {\n\n    ApiWrapper.getProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <br/>\n        <Row>\n          <Col xs={ 12 }  sm={ 8 } md={ 8 } ld={ 8 } xl={ 8 }>\n            <CustomBreadcrumb\n               backgroundColor={'transparent'}\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n          <Col xs={ 12 } sm={ 4 } md={ 4 } ld={ 4 } xl={ 4 }>\n          <div className=\"d-flex flex-column\">\n          <ButtonGroup\n              className=\"mt-2\"\n              size=\"md\"\n              block\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'secondary' }\n      \n                // block\n             >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ?faEye :faEyeSlash }/> \n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'secondary' }\n  \n                // block\n             >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faEye : faEyeSlash}/> \n              </Button>\n            </ButtonGroup>\n          \n        </div>\n          </Col>\n        </Row>\n\n        <Container fluid={ true }>\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              <div className={['d-block','d-sm-none'].join(' ')}><br/></div>\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgramScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n              />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default PaperEdit;\n","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap-css-only/css/bootstrap.css';\n// TODO: Note: Replace ^[theme]^ (examples: materia, darkly, slate, cosmo, spacelab, and superhero. See https://bootswatch.com for current theme names.)\n// https://www.npmjs.com/package/react-bootstrap-theme-switcher\n// import \"bootswatch/dist/litera/bootstrap.min.css\"; \nimport Projects from './Components/Projects/index.js';\nimport Project from './Components/Projects/Project.js';\nimport TranscriptCorrect from './Components/Transcripts/TranscriptCorrect.js';\nimport PaperEdit from './Components/PaperEdits/PaperEdit';\nimport CustomAlert from './Components/lib/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nconst demoWarningMessage = (<><p> This is a demo version of the app <Alert.Link href=\"https://github.com/pietrop/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n>see project Github repository for more info</Alert.Link>. </p><p>This is a read-only demo you can only play around with existing projects!</p></>);\n\nconst NoMatch = () => {\n  return <h1>There was an error loading the page you requested</h1>;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transcriptJson: null\n    };\n  }\n  // TODO: remove unused rootes\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    let envWarning = null;\n    let offlineWarning = null;\n\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      envWarning = (\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Demo mode' }\n            message={ demoWarningMessage }/>\n        </Container>);\n    }\n\n    if (!navigator.onLine) {\n      offlineWarning = <><br/><Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Offline warning' }\n          message={ 'You don\\'t seem to be connected to the internet ' }/>\n      </Container></>;\n    }\n\n    return (<>\n\n      {envWarning}\n\n      {offlineWarning}\n\n      <HashRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={ Projects } />\n          <Route exact path=\"/projects\" component={ Projects } />\n          <Route exact path=\"/projects/:projectId\" component={ Project } />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n            component={ TranscriptCorrect }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/paperedits/:papereditId\"\n            component={ PaperEdit }\n          />\n          <Route component={ NoMatch } />\n        </Switch>\n        </div>\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}