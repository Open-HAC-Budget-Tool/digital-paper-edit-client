{"version":3,"sources":["Util/which-js-env/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.module.css","Components/lib/SimpleCard/index.js","Components/lib/List/index.js","Util/includes-text/index.js","Components/lib/SearchBar/index.js","Components/lib/ListPage/index.js","Components/lib/ItemForm/index.js","Components/lib/ItemFormModal/index.js","Components/lib/CustomBreadcrumb/index.js","Components/lib/CustomFooter/index.js","ApiWrapper/cors_wrapper.js","ApiWrapper/ApiWrapper.js","ApiWrapper/DemoApiWrapper/index.js","ApiWrapper/index.js","Components/Projects/index.js","Components/lib/CustomTranscriptCard/index.js","Components/lib/ListPageTranscript/index.js","Components/lib/CustomAlert/index.js","Components/Transcripts/TranscriptForm.js","Components/Transcripts/NewTranscriptFormModal.js","Components/Transcripts/index.js","Components/PaperEdits/index.js","Components/Projects/Project.js","Components/Transcripts/TranscriptCorrect.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/select-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/select-speakers-color-styles.js","Components/PaperEdits/PaperEdit/Transcripts/SearchBar/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/group-words-by-speakers.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/find-annotation-in-paragraph.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Paragraph.js","Util/remove-punctuation/index.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/Word.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/AnnotationOverlayTrigger.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/compute-paragraph-display-preference.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/add-annotations-to-words-in-paragraphs.js","Components/PaperEdits/PaperEdit/Transcripts/Paragraphs/index.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/css-color-names.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelForm.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/LabelModal.js","Components/PaperEdits/PaperEdit/Transcripts/LabelsList/index.js","Util/only-call-once/index.js","Components/PaperEdits/PaperEdit/Transcripts/get-user-selection.js","Components/PaperEdits/PaperEdit/Transcripts/Transcript.js","Components/PaperEdits/PaperEdit/Transcripts/index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextViewer.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextProgressBar.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextControls.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/index.js","Components/PaperEdits/PaperEdit/ProgramScript/VoiceOver.js","Components/PaperEdits/PaperEdit/ProgramScript/PaperCut.js","Components/PaperEdits/PaperEdit/ProgramScript/TitleHeading.js","Components/PaperEdits/PaperEdit/ProgramScript/Note.js","Components/PaperEdits/PaperEdit/ProgramScript/ProgrammeScript.js","Components/PaperEdits/PaperEdit/ProgramScript/get-data-from-user-selection.js","Components/PaperEdits/PaperEdit/ProgramScript/divide-words-selections-into-paragraphs/index.js","Components/PaperEdits/PaperEdit/ProgramScript/index.js","Components/PaperEdits/PaperEdit/index.js","App.js","serviceWorker.js","index.js","Components/PaperEdits/PaperEdit/ProgramScript/PreviewCanvas/VideoContextProgressBar.module.css"],"names":["whichJsEnv","undefined","window","process","versions","electron","cep","chdir","__dirname","err","console","log","error","module","exports","SimpleCard","handleDelete","confirm","props","id","alert","handleEdit","showLinkPath","Card","style","width","marginBottom","Body","Row","to","this","cursor","Col","xs","sm","md","ld","xl","Title","href","title","Link","Button","onClick","variant","size","icon","faPen","faTrash","Subtitle","className","description","Component","List","listItems","items","map","item","display","key","filter","height","overflow","React","includesText","textOne","textTwo","toLowerCase","trim","includes","SearchBar","handleSearch","e","searchText","target","value","handleShowSearchBar","setState","state","showSearchInput","InputGroup","Prepend","Text","faSearch","FormControl","onChange","placeholder","aria-label","aria-describedby","Page","results","project","handleUpdateList","searchEl","length","handleShowCreateNewItemForm","block","model","ItemForm","handleTitleChange","event","handleDescriptionChange","validated","form","currentTarget","checkValidity","preventDefault","stopPropagation","tmpItem","handleSaveForm","Form","noValidate","onSubmit","handleSubmit","Group","controlId","Label","Control","required","type","Feedback","Modal","Footer","ItemFormModal","handleClose","handleCloseModal","show","onHide","Header","closeButton","modalTitle","CustomBreadcrumb","breadcrumbs","index","link","Breadcrumb","Item","name","active","CustomFooter","footer","Navbar","collapseOnSelect","expand","bg","fixed","faFlask","rel","METHODS","validateRESTMethod","method","Error","getCorsConfig","corsConfig","data","applicationType","mode","body","JSON","stringify","headers","corsFetch","url","a","async","fetch","ApiWrapper","projectsIdUrl","projectId","projectsUrl","transcriptsUrl","transcriptsIdUrl","transcriptId","queryParamsOptions","queryParams","querystring","paperEditsUrl","paperEditsIdUrl","paperEditId","annotationsUrl","annotationsIdUrl","annotationId","labelsUrl","labelsIdUrl","labelsId","baseUrl","env","API_URL","res","json","projects","getProject","resProject","projectTitle","transcriptTitle","labelId","paperedits","getTranscript","transcriptResult","getAllLabels","labelsResults","getAllAnnotations","annotationsResult","labels","transcript","annotations","papereditId","getTranscripts","transcriptsResult","Promise","all","transcripts","transcriptsJson","annotationsJson","forEach","tr","currentAnnotationsSet","find","getPaperEdit","paperEditResult","projectResult","programmeScript","DemoApiWrapper","response","_id","status","ok","formData","annotation","defaultLabel","label","unshift","paperedit","paperEdit","statusCode","jsENV","demoApiWrapper","Object","freeze","apiWrapper","electronWrapper","ElectronWrapper","Projects","handleSaveItem","updateProject","then","findItemById","findIndex","element","isNewItemModalShow","itemId","createProject","push","list","p","handleEditItem","showLinkPathToItem","handleDeleteItem","bind","getAllProjects","result","tmpList","deleteProject","newItemsList","Container","marginTop","ListPage","deleteItem","createNew","editItem","CustomTranscriptCard","borderStatus","Badge","showLink","Alert","faExclamationTriangle","errorMessage","border","disabled","Spinner","as","animation","role","aria-hidden","faCheck","subtitle","ListPageTranscript","itemsCards","content","CustomAlert","handleDismiss","onClose","dismissible","heading","Heading","message","TranscriptForm","handleFileUpload","file","Array","from","files","FormData","append","path","mediaFileSelected","sendRequest","uploading","get","createTranscript","uploadCompleted","redirect","newTranscriptId","catch","savedNotification","dismissable","accept","NewTranscriptFormModal","Transcripts","componentWillUnmount","interval","clearInterval","areThereTranscriptsInProgress","newItem","newitems","handleSaveEditedItem","newEditedItem","itemIdex","updateTranscript","isEditItemModalShow","handleCloseModalEdit","isServerError","setInterval","deleteTranscript","findId","tmpNewList","faFileAlt","PaperEdits","updatePaperEdit","createPaperEdit","getAllPaperEdits","deletePaperEdit","Project","context","match","params","projectName","Tabs","activeKey","onSelect","Tab","eventKey","TranscriptCorrect","componentDidMount","transcriptJson","saveToServer","transcriptEditorRef","current","getEditorContent","redirectToAnnotatePage","renderRedirect","Redirect","createRef","fluid","transcriptData","mediaUrl","isEditable","sttJsonType","ref","colourStyles","control","styles","backgroundColor","option","isDisabled","tmpColor","isFocused","isSelected","color","borderLeft","borderColor","multiValue","multiValueLabel","multiValueRemove","speakersColorStyles","handleToggleSearchTextPreferences","showTextSearchPreferences","handleToggleSearchLabelsPreferences","showLabelsSearchPreferences","handleToggleSearchSpeakersPreferences","showSpeakersSearchPreferences","handleSpeakersSearchChange","selectedOptionSpeakerSearch","handleLabelsSearchChange","selectedOptionLabelSearch","handleShowParagraphsMatchingSearch","showParagraphsMatchingSearch","handleToggleAll","handleHideAll","DropdownButton","drop","Append","faFilter","Dropdown","faTag","faUser","faAlignJustify","Divider","isMulti","isSearchable","options","labelsOptions","speakersOptions","Check","checked","groupWordsInParagraphsBySpeakers","words","segments","currentSegmentIndex","previousSegmentIndex","paragraph","text","speaker","word","currentSegment","seg","start","end","findSegmentForWord","indexOf","addWordsToSpeakersParagraphs","findAnnotationInParagraph","paragraphFirstWordTime","paragraphLastWordTime","resultsCaseOne","isAnnotationWithinParagraph","resultsCaseTwo","isAnnotationStartWithinParagraph","resultsCase3","isAnnotationEndWithinParagraph","resultsCaseFour","isAnnotationAcrossParagraph","Paragraph","paragraphDisplayPreference","borderStyle","borderWidth","padding","paragraphStyle","borderRight","data-paragraph-text","paragraphTextWithoutPunctuation","lg","speakerName","toUpperCase","shortTimecode","unselectable","join","data-start","tabIndex","wordsElements","removePunctuation","string","replace","Word","generatePreviousTimes","prevTimes","i","dec","Math","floor","data-prev-times","data-text","data-end","data-transcript-id","data-speaker","aria-pressed","onKeyDown","handleKeyDownWords","AnnotationOverlayTrigger","handleEditAnnotation","overlayContent","annotationLabelId","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","marginLeft","marginRight","handleDeleteAnnotation","faTrashAlt","faStickyNote","annotationNote","borderBottom","computeParagraphDisplayPreference","isTextSearch","isSpeakerSearch","isLabelSearch","displayPreference","addAnnotationsToWordsInParagraphs","paragraphsWithWordsSpeakerText","annotationForWord","wordStartTime","wordEndTime","isAnnotationWithinWord","addAnnotationToWordsInOneParagraph","Paragraphs","handleKeyDownTimecodes","handleTimecodeClick","handleWordClick","paragraphs","textResult","annotationInCurrentParagraph","searchString","spk","lb","wordEl","note","csscolors","colorNamesList","keys","splice","cssColorsList","counter","numberOfColor","randomColor","LabelForm","handleRandomiseColor","handleColorPickerChangeComplete","chroma","hex","handleManualColorChange","colorValue","valid","handleColorSelectChange","handleSave","onLabelSaved","defaultValue","onInput","rows","faSyncAlt","triangle","onChangeComplete","colors","LabelModal","handleShow","openBtn","LabelsList","removeLabel","onLabelDelete","editLabel","labelToEdit","newLabel","onLabelUpdate","onLabelCreate","showLabelModal","isLabelmodalShown","labelsListOptions","ListGroup","faTimes","labelsList","overflowY","overflowX","isLabelsListOpen","faTags","faCog","onlyCallOnce","cb","duration","timer","args","arguments","clearTimeout","setTimeout","apply","getTimeFromUserWordsSelection","getSelection","isCollapsed","getRangeAt","cloneContents","querySelectorAll","parseFloat","dataset","anchorNode","parentElement","makeListOfUniqueSpeakers","array","Map","has","set","Transcript","createLabel","updatedLabel","updateLabel","labelIid","deleteLabel","classList","contains","videoRef","currentTime","play","searchPreferences","highlightWords","sentenceToSearchCSS","listOfSearchWords","split","pCSS","wordsToSearchCSS","searchWord","wordsToSearchCSSInHighlights","sentenceToSearchCSSInHighlights","handleCreateAnnotation","selection","newAnnotation","createAnnotation","newAnnotationFromServer","newAnnotationsSet","parse","deepCloneOfNestedObjectNewAnnotationsSet","deleteAnnotation","newAnnotationToEdit","newNote","prompt","updateAnnotation","showLabelsReference","getCurrentWordTime","currentWordTime","time","round","highlights","scoped","src","onTimeUpdate","controls","ButtonGroup","data-label-id","faHighlighter","flip","Toggle","data-lable-id","Menu","onDoubleClick","transcriptsElNav","Nav","faClock","transcriptsElTab","Pane","defaultActiveKey","Content","PaperCutsPlayerViewer","playlist","loadPlaylist","sourceStart","node","videoContext","startAt","stopAt","connect","destination","canvasRef","canvas","VideoContext","PureComponent","VideoContextProgressBar","updateProgress","requestAnimationFrame","progress","handleClick","offsetX","nativeEvent","getTracks","_sourceNodes","reverse","startTime","stopTime","elementURL","slice","pop","pointerEvents","papercutsPlayerProgressTrackBuffer","papercutsPlayerProgressTrack","tracks","papercutsPlayerProgress","papercutsPlayerProgressBack","papercutsPlayerProgressFront","playIcon","faPlay","pauseIcon","faPause","stopIcon","faStop","Controls","handlePlay","isPlaying","handlePause","pause","handleStop","PreviewCanvas","videoContextRef","forceUpdate","VideoContextViewer","VideoContextControls","VoiceOver","faMicrophoneAlt","PaperCut","w","userSelect","TitleHeading","Note","InsertPoint","faArrowAltCircleRight","DragHandle","sortableHandle","faGripLines","SortableItem","sortableElement","faArrowAltCircleLeft","SortableContainer","sortableContainer","children","listStyle","ProgrammeScript","onSortEnd","oldIndex","newIndex","arrayMove","programmeScriptElements","handleProgrammeScriptOrderChange","programme","sortableProgramme","el","useDragHandle","handleDeleteProgrammeScriptElement","handleEditProgrammeScriptElement","parseWordElDataset","innerText","getDataFromUserWordsSelection","isOneParagraph","firstword","ProgramScript","elements","currentElement","newText","handleAddTranscriptElementToProgrammeScript","elementType","indexOfInsertPoint","getIndexPositionOfInsertPoint","newElement","cuid","insertPointElement","handleAddTranscriptSelectionToProgrammeScript","previousWordSpeaker","currentParagraph","paragraphsResult","divideWordsSelectionsIntoParagraphs","getSequenceJsonEDL","edlSq","programmeScriptPaperCutsWithId","currentTranscript","endTime","reelName","metadata","clipName","fps","offset","timecode","sampleRate","events","handleExportEDL","edl","EDL","compose","downloadjs","handleExportADL","firstElement","generateADL","projectOriginator","edits","frameRate","handleExportFCPX","jsonToFCPX","getProgrammeScriptJson","programmeScriptJsonToText","edlsqJson","timecodes","fromSeconds","handleExportJson","programmeScriptJson","programmeScriptText","handleExportTxt","handleUpdatePreview","timelineStartTime","resetPreview","handleDoubleClickOnProgrammeScript","wordCurrentTime","handleSaveProgrammeScript","noGutters","faPlus","faHeading","faSync","faShare","faInfoCircle","faSave","PaperEdit","get_ProgrammeScriptAndTranscripts","programmeTitle","toggleTranscripts","isProgramScriptShown","isTranscriptsShown","toggleProgramScript","faAngleDown","faAngleUp","span","demoWarningMessage","NoMatch","App","envWarning","offlineWarning","navigator","onLine","HashRouter","Switch","Route","exact","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50c91c30.chunk.js","sourcesContent":["/**\n * Determines the enviroment Javascript is being run on\n * @returns - 'browser', 'electron', 'cep'. where cep stands for adobe CEP panel\n */\nfunction whichJsEnv() {\n// Is browser Eg client side app\n  if (window.process === undefined) {\n    // console.debug('In browser Environment');\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      return 'demo';\n    }\n\n    return 'browser';\n  } else {\n    if (window.process.versions.electron !== undefined) {\n      //   console.debug('In Electron Enviroment');\n      //   console.info('In Electron v: ', window.process.versions.electron);\n      //   console.info('Using chrome v: ', window.process.versions.chrome);\n      return 'electron';\n    }\n    else if (window.process.versions.cep !== undefined) {\n      //   console.debug('In Adobe CEP Environment');\n      //   console.info('In Chromium v: ', window.process.versions.chromium);\n      //   console.info('In CEP (Adobe Common Extensibility Platform ) v: ', window.process.versions.cep);\n      //   console.info('adjusting current working directory for Adobe CEP');\n      //   console.log('Starting directory: ' + process.cwd());\n      try {\n        process.chdir(__dirname);\n        // process.chdir('..');\n        // console.log('New directory: ' + process.cwd());\n      }\n      catch (err) {\n        console.log('chdir: ' + err);\n      }\n\n      return 'cep';\n\n    }\n    else {\n      console.error(\"couldn't determine the js environment\");\n\n      return undefined;\n    }\n  }\n}\n\nfunction isBrowser() {\n  return whichJsEnv() === 'browser';\n}\n\nfunction isElectron() {\n  return whichJsEnv() === 'electron';\n}\n\nfunction isCep() {\n  return whichJsEnv() === 'isCep';\n}\n\nexport default whichJsEnv;\n\nexport { isElectron, isBrowser, isCep, whichJsEnv };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speaker\":\"Paragraphs_speaker__1kdz6\",\"unselectable\":\"Paragraphs_unselectable__3k2Ob\",\"highlightedWord\":\"Paragraphs_highlightedWord__3mJtY\"};","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SimpleCard extends Component {\n\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n  showLinkPath = () => {\n    return this.props.showLinkPath(this.props.id);\n  }\n\n  render() {\n\n    return (\n      <Card style={ { width: '100%', marginBottom: '1em' } }>\n        <Card.Body>\n          <Row>\n            <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n              <Col xs={ 8 } sm={ 10 } md={ 10 } ld={ 10 } xl={ 10 }>\n                <Card.Title>\n                  <a href={ `#${ this.showLinkPath() }` } >\n                    {this.props.title}\n                  </a>\n                </Card.Title>\n              </Col>\n            </LinkContainer>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n          </Row>\n          <LinkContainer to={ this.showLinkPath() } style={ { cursor: 'pointer' } } >\n            <Row>\n              <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  { this.props.description }\n                </Card.Subtitle>\n              </Col>\n            </Row>\n          </LinkContainer>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default SimpleCard;\n","import React from 'react';\nimport SimpleCard from '../SimpleCard';\n\nclass List extends React.Component {\n\n  render() {\n\n    const listItems = this.props.items.map((item) => {\n      if (item.display) {\n        return <SimpleCard\n          key={ item.id }\n          id={ item.id }\n          title={ item.title }\n          description={ item.description }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        />;\n      } else {\n        return null;\n      }\n    }).filter(item => {\n      return item !== null;\n    });\n\n    return (<>\n      <section style={ { height: '75vh', overflow: 'scroll' } }>\n        {listItems}\n      </section>\n    </>\n    );\n  }\n}\n\nexport default List;\n","const includesText = (textOne, textTwo) => {\n  return textOne.toLowerCase().trim().includes(textTwo.toLowerCase().trim());\n};\n\nexport default includesText;","import React from 'react';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = e => {\n    const searchText = e.target.value;\n    this.props.handleSearch(searchText);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    return (\n      <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend\n          onClick={ this.handleShowSearchBar }\n        >\n          <InputGroup.Text id=\"basic-addon2\">\n            <FontAwesomeIcon icon={ faSearch } />\n          </InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n          style={ { display: this.state.showSearchInput ? '' : 'none' } }\n          onChange={ this.handleSearch }\n          placeholder=\"Search\"\n          aria-label=\"search\"\n          aria-describedby=\"search\"\n        />\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport List from '../List';\nimport includesText from '../../../Util/includes-text/index.js';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nclass Page extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n    this.props.handleUpdateList(results);\n  };\n\n  handleShowSearchBar = () => {\n    this.setState(state => {\n      return { showSearchInput: !state.showSearchInput };\n    });\n  }\n\n  render() {\n\n    let searchEl;\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n\n    return (<>\n\n      <Row>\n        <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n          {searchEl}\n        </Col>\n\n        <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n          <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n          </Button>\n        </Col>\n      </Row>\n\n      {(this.props.items && this.props.items.length === 0) ? <i>There are no {this.props.model}, create a new one to get started</i> : null}\n\n      {this.props.items ?\n        <List\n          items={ this.props.items }\n          handleEdit={ this.props.handleEdit }\n          handleDelete={ this.props.handleDelete }\n          showLinkPath={ this.props.showLinkPath }\n        /> : null}\n\n    </>);\n  }\n}\n\nexport default Page;\n","// https://react-bootstrap.netlify.com/components/forms/#forms-validation\n// https://reactjs.org/docs/forms.html\n\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nclass ItemForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // TODO: Tmp title text for debugging, remove for production\n      // replace with ''\n      title: this.props.title,\n      description: this.props.description,\n      validated: false,\n      id: this.props.id\n    };\n  }\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      const tmpItem = {\n        title: this.state.title,\n        description: this.state.description,\n        id: this.state.id\n      };\n      this.props.handleSaveForm(tmpItem);\n    }\n\n    //this.setState({ redirect: true, newProjectId: response.projectId });\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  render() {\n    return (\n\n      <Form\n        noValidate\n        validated={ this.state.validated }\n        onSubmit={ e => this.handleSubmit(e) }\n      >\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Title </Form.Label>\n          <Form.Control\n            required\n            type=\"text\"\n            placeholder=\"Enter a project title\"\n            value={ this.state.title }\n            onChange={ this.handleTitleChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose a title\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a title\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Description </Form.Label>\n          <Form.Control\n            // required\n            // as=\"textarea\" rows=\"3\"\n            type=\"text\"\n            placeholder=\"Enter a project description\"\n            value={ this.state.description }\n            onChange={ this.handleDescriptionChange }\n          />\n          <Form.Text className=\"text-muted\">\n              Chose an optional description\n          </Form.Text>\n          <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n          <Form.Control.Feedback type=\"invalid\">\n              Please chose a description\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Modal.Footer>\n          <Button variant=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </Modal.Footer>\n      </Form>\n    );\n  }\n}\n\nexport default ItemForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport ItemForm from '../ItemForm';\n\nclass ItemFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ItemForm\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default ItemFormModal;\n","import React, { Component } from 'react';\nimport Breadcrumb from 'react-bootstrap/Breadcrumb';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass CustomBreadcrumb extends Component {\n\n  render() {\n    const breadcrumbs = this.props.items.map((item, index) => {\n      if (item.link) {\n        return (\n          <LinkContainer key={ index } to={ item.link }>\n            <Breadcrumb.Item>{item.name}</Breadcrumb.Item>\n          </LinkContainer>\n        );\n      } else {\n        return (\n          <Breadcrumb.Item key={ index } active>\n            {item.name}\n          </Breadcrumb.Item>\n        );\n      }\n    });\n\n    return (\n      <div\n      // className=\"d-none d-sm-block\"\n      >\n        <Breadcrumb>\n          {breadcrumbs}\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default CustomBreadcrumb;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlask } from '@fortawesome/free-solid-svg-icons';\n\nfunction CustomFooter() {\n  const footer = (\n    <Navbar\n      collapseOnSelect\n      expand={ 'md' }\n      bg=\"light\"\n      variant=\"light\"\n      fixed=\"bottom\"\n      className=\"justify-content-center\"\n    >\n      <FontAwesomeIcon icon={ faFlask } /> <small>\n        This is a prototype by {' '}\n        <a href={ process.env.REACT_APP_PROTOTYPE_BY_LINK } target=\"_blank\" rel=\"noopener noreferrer\">\n          {process.env.REACT_APP_PROTOTYPE_BY}\n        </a>\n      </small>\n    </Navbar>\n  );\n\n  return (\n    <Row>\n      <Col className=\"d-none d-sm-block\">{footer}</Col>\n      <Col className=\"d-lg-block d-md-block\">{footer}</Col>\n    </Row>\n  );\n}\n\nexport default CustomFooter;\n","/**\n * Helper function tto wrap fetch post request\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options\n * @param {string} url - API end point\n * @param {object} data - json data to send\n */\n\nconst METHODS = [ 'GET', 'POST', 'PUT', 'DELETE' ];\n\nconst validateRESTMethod = (method) => {\n  if (!METHODS.includes(method)) {\n    throw new Error(`Wrong method passed ${ method } - should be one of ${ METHODS }`);\n  }\n\n  return;\n\n};\n\nconst getCorsConfig = (method, data = {}, applicationType) => {\n  let corsConfig;\n\n  if (method === 'PUT') {\n    corsConfig = {\n      method: method,\n      mode: 'cors',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  } else if (method === 'POST') {\n\n    corsConfig = {\n      method: method,\n      // TODO: commenting all of these settings out as with those on file upload doesn't work :man-shrugging: . Needs further investigation.\n      // mode: 'no-cors',\n      // cache: 'no-cache',\n      // credentials: 'same-origin',\n      // headers: {\n      //   'Content-Type': 'application/json'\n      // },\n      // redirect: 'follow',\n      // referrer: 'no-referrer',\n      // NOTE: Form data contains a file, so should not be stringified\n      // body: data\n    };\n    // if sending data as a json file\n    if (applicationType === 'json') {\n      corsConfig.headers = {\n        'Content-Type': 'application/json'\n      };\n      corsConfig.body = JSON.stringify(data);\n    }\n    // if sending something else like a video or audio file in form body\n    else {\n      corsConfig.body = data;\n    }\n  }\n  else {\n    corsConfig = {\n      method: method,\n      mode: 'cors'\n    };\n  }\n\n  return corsConfig;\n};\n\nasync function corsFetch(url, method = 'GET', data = {}, applicationType) {\n  validateRESTMethod(method);\n  const corsConfig = getCorsConfig(method, data, applicationType);\n\n  return await fetch(url, corsConfig);\n}\n\nexport default corsFetch;\n","import querystring from 'querystring';\nimport corsFetch from './cors_wrapper.js';\n\nclass ApiWrapper {\n  constructor() {\n    this.baseUrl = window.env.API_URL;\n    window.env.API_URL = null;\n\n    this.projectsUrl = `${ this.baseUrl }/api/projects`;\n  }\n  projectsIdUrl = (projectId) => `${ this.projectsUrl }/${ projectId }`;\n\n  transcriptsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/transcripts`;\n  transcriptsIdUrl = (projectId, transcriptId, queryParamsOptions) => {\n    const queryParams = queryParamsOptions\n      ? `?${ querystring.stringify(queryParamsOptions) }`\n      : '';\n\n    return `${ this.transcriptsUrl(projectId) }/${ transcriptId }${ queryParams }`.trim();\n  };\n\n  paperEditsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/paperedits`;\n  paperEditsIdUrl = (projectId, paperEditId) => `${ this.projectsIdUrl(projectId) }/paperedits/${ paperEditId }`;\n\n  annotationsUrl = (projectId, transcriptId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations`;\n  annotationsIdUrl = (projectId, transcriptId, annotationId) => `${ this.transcriptsIdUrl(projectId, transcriptId) }/annotations/${ annotationId }`;\n\n  labelsUrl = (projectId) => `${ this.projectsIdUrl(projectId) }/labels`;\n  labelsIdUrl = (projectId, labelsId) => `${ this.projectsIdUrl(projectId) }/labels/${ labelsId }`;\n\n  /**\n   * Projects\n   */\n  async getAllProjects() {\n    const res = await corsFetch(this.projectsUrl);\n    const json = await res.json();\n\n    return json.projects;\n  }\n\n  async getProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createProject(data) {\n    const res = await corsFetch(this.projectsUrl, 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateProject(id, data) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteProject(id) {\n    const res = await corsFetch(this.projectsIdUrl(id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Transcripts\n   */\n  async getTranscripts(projectId) {\n    const res = await corsFetch(this.transcriptsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createTranscript(projectId, data) {\n    const res = await corsFetch(this.transcriptsUrl(projectId), 'POST', data);\n    const json = await res.json();\n\n    return json;\n  }\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions));\n    const json = await res.json();\n    // get project title\n    const resProject = await this.getProject(projectId);\n    // console.log('resProject', resProject.project.title, json);\n    json.projectTitle = resProject.project.title;\n    json.transcriptTitle = json.title;\n    delete json.title;\n\n    return json;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId, queryParamsOptions), 'PUT', data);\n\n    return res;\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    const res = await corsFetch(this.transcriptsIdUrl(projectId, transcriptId), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Annotations\n   */\n  async getAllAnnotations(projectId, transcriptId) {\n    const res = await fetch(this.annotationsUrl(projectId, transcriptId));\n    // console.log('getAllAnnotations', res);\n    const json = await res.json();\n\n    return json;\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    const res = await corsFetch(this.annotationsUrl(projectId, transcriptId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updateAnnotation(projectId, transcriptId, annotationId, data) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    const res = await corsFetch(this.annotationsIdUrl(projectId, transcriptId, annotationId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  async getAllLabels(projectId) {\n    const res = await fetch(this.labelsUrl(projectId));\n    const json = await res.json();\n\n    return json;\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId));\n    const json = await res.json();\n\n    return json;\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    const res = await corsFetch(this.labelsUrl(projectId), 'POST', data, 'json');\n    const json = await res.json();\n\n    return json;\n  }\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    const res = await corsFetch(this.labelsIdUrl(projectId, labelId), 'DELETE');\n    const json = await res.json();\n\n    return json;\n  }\n  /**\n   * PaperEdits\n   */\n  async getAllPaperEdits(projectId) {\n    const res = await corsFetch(this.paperEditsUrl(projectId));\n    const json = await res.json();\n\n    return json.paperedits;\n  }\n\n  async getPaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id));\n    const json = await res.json();\n\n    return json;\n  }\n\n  async createPaperEdit(projectId, data) {\n    const res = await corsFetch(this.paperEditsUrl(projectId), 'POST', data, 'json');\n\n    return await res.json();\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'PUT', data);\n    const json = await res.json();\n\n    return json;\n  }\n\n  async deletePaperEdit(projectId, id) {\n    const res = await corsFetch(this.paperEditsIdUrl(projectId, id), 'DELETE');\n\n    return res;\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) {\n    // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    // TODO: also add annotations for each Transcripts\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      // const annotations = this.getAllAnnotations(projectId, transcript.id);\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n      // transcriptTmp.annotations = annotations;\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\nexport default ApiWrapper;","class DemoApiWrapper {\n  /**\n   * Projects\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllProjects() {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    let results = 0;\n    if (projects.length !== 0) {\n      results = projects.map((project) => {\n        project.id = project._id;\n\n        return project;\n      });\n\n      return results;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getProject(id) {\n    const response = await fetch('db/projects.json');\n    const projects = await response.json();\n    const project = projects.find((project) => {\n      return project._id === id;\n    });\n\n    return { status: 'ok', project:project };\n  }\n\n  async createProject(data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async updateProject(id, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async deleteProject(id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false', project: { } };\n  }\n\n  /**\n   * Transcripts\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getTranscripts(projectId) {\n    const response = await fetch('db/transcripts.json');\n    let transcripts = await response.json();\n    transcripts = transcripts.filter((transcript) => {\n      return transcript.projectId === projectId;\n    });\n\n    transcripts = transcripts.map((transcript) => {\n      transcript.id = transcript._id;\n\n      return transcript;\n    });\n\n    return { transcripts: transcripts };\n  }\n\n  async createTranscript(projectId, formData, data) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n\n  async getTranscript(projectId, transcriptId, queryParamsOptions) {\n    const response = await fetch('db/transcripts.json');\n    const transcripts = await response.json();\n    const transcript = transcripts.find((transcript) => {\n      return transcript._id === transcriptId;\n    });\n\n    transcript.id = transcript._id;\n    const resProject = await this.getProject(projectId);\n    transcript.projectTitle = resProject.project.title;\n    transcript.transcriptTitle = transcript.title;\n\n    return transcript;\n  }\n\n  async updateTranscript(projectId, transcriptId, queryParamsOptions, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false };\n  }\n\n  async deleteTranscript(projectId, transcriptId) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Annotations\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllAnnotations(projectId, transcriptId) {\n\n    const response = await fetch('db/annotations.json');\n    let annotations = await response.json();\n\n    annotations = annotations.filter((annotation) => {\n      return annotation.transcriptId === transcriptId;\n    });\n\n    if (annotations) {\n      annotations = annotations\n        .map((annotation) => {\n          annotation.id = annotation._id;\n\n          return annotation;\n        });\n    } else {\n      annotations = [];\n    }\n\n    return { annotations };\n  }\n\n  // not used\n  async getAnnotation(projectId, transcriptId, annotationId) {\n    const response = await fetch('db/annotations.json');\n    const annotations = await response.json();\n    const annotation = annotations[0];\n\n    return { annotation };\n  }\n\n  async createAnnotation(projectId, transcriptId, data) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false', annotation: [] };\n  }\n\n  async deleteAnnotation(projectId, transcriptId, annotationId) {\n    alert('Not implemented in demo mode');\n\n    return { 'ok': false, status: 'false' };\n  }\n\n  /**\n   * Labels\n   */\n\n  // Get All Labels\n  // eslint-disable-next-line class-methods-use-this\n  async getAllLabels(projectId) {\n    const response = await fetch('db/labels.json');\n    let labels = await response.json();\n    const defaultLabel = labels[0];\n    labels = labels.filter((label) => {\n      return label.projectId === projectId;\n    });\n    labels.unshift(defaultLabel);\n\n    if (!labels) {\n      labels = [];\n    }\n\n    return { ok: true, status: 'ok', labels };\n  }\n  // Get Label - not used\n  async getLabel(projectId, labelId) {\n    const response = await fetch('db/labels.json');\n    const labels = await response.json();\n    const label = labels[0];\n\n    return { ok: true, status: 'ok', label };\n  }\n\n  // Create Label\n  async createLabel(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return ({ ok: false, status: 'false' });\n  }\n\n  // Update Label\n  async updateLabel(projectId, labelId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n  // Delete Label\n  async deleteLabel(projectId, labelId) {\n    alert('Not implemented in demo mode');\n\n    return { status: 'false' };\n  }\n  /**\n   * PaperEdits\n   */\n  // eslint-disable-next-line class-methods-use-this\n  async getAllPaperEdits(projectId) {\n    const response = await fetch('db/paperedits.json');\n    let paperedits = await response.json();\n    paperedits = paperedits.filter((paperedit) => {\n      return paperedit.projectId === projectId;\n    });\n    const data = {};\n    data.paperedits = [];\n    data.paperedits = paperedits;\n    if (data.paperedits) {\n      data.paperedits = data.paperedits\n        .map((paperedit) => {\n          paperedit.id = paperedit._id;\n\n          return paperedit;\n        });\n    }\n\n    return data.paperedits;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getPaperEdit(projectId, id) {\n    const paperEditId = id;\n    const response = await fetch('db/paperedits.json');\n    const paperedits = await response.json();\n    const paperEdit = paperedits.find((paperedit) => {\n      return paperedit.id === paperEditId;\n    });\n    if (!paperEdit) {\n      const err = new Error('No paper edit found');\n      err.statusCode = 404;\n    }\n\n    return { ok: true, status: 'ok', programmeScript: paperEdit };\n  }\n\n  async createPaperEdit(projectId, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  async updatePaperEdit(projectId, id, data) {\n    alert('Not implemented in demo mode');\n\n    return { ok:true, status: 'false' };\n  }\n\n  async deletePaperEdit(projectId, id) {\n    alert('Not implemented in demo mode');\n\n    return { ok: false, status: 'false' };\n  }\n\n  /**\n   * Helper SDK function to avoid making multiple calls client side when in Annotated Transcript view\n   * Transcript + Annotations for that transcript + Labels for the project\n   */\n  async get_TranscriptLabelsAnnotations(projectId, transcriptId) {\n    // GET Transcripts\n    const transcriptResult = await this.getTranscript(projectId, transcriptId);\n    // GET Labels for Project <-- or separate request in label component\n    const labelsResults = await this.getAllLabels(projectId, transcriptId);\n    // GET Annotation for Transcript\n    const annotationsResult = await this.getAllAnnotations(projectId, transcriptId);\n\n    // Combine results\n    const results = {\n      transcriptId: transcriptId,\n      projectId: projectId,\n      projectTitle: transcriptResult.projectTitle,\n      transcriptTitle: transcriptResult.transcriptTitle,\n      url: transcriptResult.url,\n      labels: labelsResults.labels,\n      transcript:  transcriptResult.transcript,\n      annotations: annotationsResult.annotations\n    };\n\n    return results;\n  }\n\n  // Helper function to get program script & associated transcript\n  // https://flaviocopes.com/javascript-async-await-array-map/\n  async get_ProgrammeScriptAndTranscripts(projectId, papereditId) { // // get transcripts list, this contain id, title, description only\n    const transcriptsResult = await this.getTranscripts(projectId);\n    // use that list of ids to loop through and get json payload for each individual transcript\n    // as separate request\n\n    const transcriptsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const transcriptTmp = this.getTranscript(projectId, transcript.id);\n\n      return transcriptTmp;\n    }));\n\n    const annotationsJson = await Promise.all(transcriptsResult.transcripts.map((transcript) => {\n      const annotations = this.getAllAnnotations(projectId, transcript.id);\n\n      return annotations;\n    }));\n\n    // add annotations to transcript\n    transcriptsJson.forEach((tr) => {\n      // get annotations for transcript\n      const currentAnnotationsSet = annotationsJson.find((a) => {\n\n        return a.transcriptId === tr.id;\n      });\n      // if there are annotations for this transcript add them to it\n      if (currentAnnotationsSet) {\n        tr.annotations = currentAnnotationsSet.annotations;\n\n        return;\n      }\n      else {\n        tr.annotations = [];\n      }\n    });\n\n    // getting program script for paperEdit\n    const paperEditResult = await this.getPaperEdit(projectId, papereditId);\n    // getting project info - eg to get tile and description\n    const projectResult = await this.getProject(projectId);\n    // Get labels\n    const labelsResults = await this.getAllLabels(projectId);\n    // package results\n    const results = {\n      programmeScript: paperEditResult.programmeScript,\n      project: projectResult.project,\n      // each transcript contains its annotations\n      transcripts: transcriptsJson,\n      labels: labelsResults.labels\n    };\n\n    return results;\n  }\n}\n\n// module.exports = DemoApiWrapper;\nexport default DemoApiWrapper;","import ApiWrapper from './ApiWrapper';\nimport DemoApiWrapper from './DemoApiWrapper/index.js';\nimport whichJsEnv from '../Util/which-js-env';\n\nconst jsENV = whichJsEnv();\n\n// dynamic export\n// https://medium.com/@WebReflection/javascript-dynamic-import-export-b0e8775a59d4\nexport default ( () => {\n  // await async dependencies\n  // export the module\n  if (jsENV === 'demo') {\n    console.log('API Wrapper demo time!');\n    const demoApiWrapper = new DemoApiWrapper();\n    Object.freeze(demoApiWrapper);\n\n    return demoApiWrapper;\n  }\n  if (jsENV === 'browser') {\n    const apiWrapper = new ApiWrapper();\n    Object.freeze(apiWrapper);\n\n    return apiWrapper;\n  }\n  if (jsENV === 'electron') {\n    const ElectronWrapper = window.ElectronWrapper;\n    const electronWrapper = new ElectronWrapper();\n    Object.freeze(electronWrapper);\n\n    return electronWrapper;\n  }\n})();\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport CustomFooter from '../lib/CustomFooter';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n  async componentDidMount () {\n    try {\n    // TODO: do we need to add user id in request?\n      const result = await ApiWrapper.getAllProjects();\n\n      if (result) {\n      // add a display property for component cards search\n        const tmpList = result.map(project => {\n          project.display = true;\n\n          return project;\n        });\n        this.setState({ items: tmpList });\n      }\n    } catch (e) {\n      console.log('Error with ApiWrapper.getAllProjects', e);\n    }\n    // TODO: some error handling\n  };\n\n  // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createProject(item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const projects = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newProject = response.project;\n          newProject.display = true;\n          projects.push(response.project);\n          this.setState({\n            isNewItemModalShow: false,\n            items: projects,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updateProject(item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const project = response.project;\n          // need to add display true attribute for search to the new project\n          project.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          this.findItemById(items, item);\n          const projectIndex = this.state.items.findIndex(element => element.id === project.id);\n          items[projectIndex] = project;\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n    console.log('edit item', item);\n  }\n\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deleteProject(itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (<>\n      <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb items={ [\n              {\n                name: 'Projects'\n              }\n            ] } />\n          </Col>\n        </Row>\n        <ListPage\n          model={ 'Project' }\n          items={ this.state.items }\n          handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n          deleteItem={ this.createNew }\n          editItem={ this.createNew }\n          handleEdit={ this.handleEditItem }\n          handleDelete={ this.handleDeleteItem }\n          showLinkPath={ this.showLinkPathToItem }\n          handleUpdateList={ this.handleUpdateList }\n        />\n        <ItemFormModal\n          title={ this.state.title }\n          description={ this.state.description }\n          id={ this.state.itemId }\n          modalTitle={ this.state.itemId ? 'Edit Project' : 'New Project' }\n          show={ this.state.isNewItemModalShow }\n          handleCloseModal={ this.handleCloseModal }\n          handleSaveForm={ this.handleSaveItem }\n        />\n      </Container>\n      <CustomFooter/>\n    </>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Badge from 'react-bootstrap/Badge';\nimport Alert from 'react-bootstrap/Alert';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTrash,\n  faCheck,\n  faExclamationTriangle,\n  faPen\n} from '@fortawesome/free-solid-svg-icons';\n\nclass CustomTranscriptCard extends Component {\n  handleDelete = () => {\n    //eslint-disable-next-line\n    const confirmationPrompt = confirm(\n      \"Click OK if you wish to delete, cancel if you don't\"\n    );\n    if (confirmationPrompt === true) {\n      if (this.props.handleDelete) {\n        this.props.handleDelete(this.props.id);\n      }\n    } else {\n      alert('All is good, it was not deleted');\n    }\n  };\n\n  handleEdit = () => {\n    this.props.handleEdit(this.props.id);\n  }\n\n  // TODO: this can be refactored to clean up the logic\n  render() {\n    let status;\n    let description;\n    if (this.props.status === 'error') {\n      status = 'danger';\n    }\n    if (this.props.status === 'in-progress') {\n      status = 'info';\n      description = <Badge variant=\"info\">In progress</Badge>;\n    }\n    if (this.props.status === 'done') {\n      description = <Badge variant=\"success\">Success</Badge>;\n      status = 'success';\n    }\n    let borderStatus;\n    // let showBtn = <a href={ `#${ this.props.showLink() }` }>  Show btn</a>;\n    let title = <a href={ `#${ this.props.showLink() }` }> {this.props.title}</a>;\n    if (status && status === 'info') {\n      title = this.props.title;\n    }\n    if (status && status === 'danger') {\n      title = this.props.title;\n      borderStatus = 'danger';\n    }\n\n    if (this.props.status === 'error') {\n      description = (\n        <>\n          <Alert variant=\"danger\">\n            <FontAwesomeIcon icon={ faExclamationTriangle } />{' '}\n            {this.props.errorMessage}\n          </Alert>\n          <Badge variant=\"danger\">Error</Badge>\n        </>\n      );\n    }\n\n    return (\n      <Card\n        border={ borderStatus }\n        style={ { width: '100%', marginBottom: '2em' } }\n      >\n        <Card.Body>\n          <Row>\n            <Col xs={ 12 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n              <Card.Title>\n                {this.props.icon ? this.props.icon : ''} {title}\n              </Card.Title>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleEdit }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faPen } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 2 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Card.Link>\n                <Button\n                  onClick={ this.handleDelete }\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                >\n                  <FontAwesomeIcon icon={ faTrash } />\n                </Button>\n              </Card.Link>\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              {status && status === 'info' ? (\n                <Button variant=\"info\" size=\"sm\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'danger' ? (\n                <Button variant=\"danger\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faExclamationTriangle } />\n                </Button>\n              ) : (\n                ''\n              )}\n              {status && status === 'success' ? (\n                <Button variant=\"success\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faCheck } />\n                </Button>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                {this.props.subtitle}\n              </Card.Subtitle>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={ 12 } sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              {description}\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default CustomTranscriptCard;\n","import React, { Component } from 'react';\nimport SearchBar from '../SearchBar';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport CustomTranscriptCard from '../CustomTranscriptCard';\nimport includesText from '../../../Util/includes-text';\n\n// TODO: add error handling, eg custom alert if server is not responding\nclass ListPageTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSearchInput: false\n    };\n  }\n\n  handleSearch = searchText => {\n    const results = this.props.items.filter(project => {\n      if (\n        includesText(project.title, searchText) ||\n        includesText(project.description, searchText)\n      ) {\n        project.display = true;\n\n        return project;\n      } else {\n        project.display = false;\n\n        return project;\n      }\n    });\n\n    this.props.handleUpdateList(results);\n\n  };\n\n  render() {\n    let itemsCards;\n    let description;\n    if (this.props.items) {\n      itemsCards = this.props.items\n        .map(item => {\n\n          if (item.display) {\n            return (\n              <CustomTranscriptCard\n                icon={ this.props.icon }\n                key={ 'key__' + item.id }\n                id={ item.id }\n                projectId={ item.id }\n                title={ item.title }\n                subtitle={ item.description }\n                handleEdit={ this.props.handleEdit }\n                handleDelete={ () => {\n                  this.props.handleDelete(item.id);\n                } }\n                // To be able to do REST for cards for - Projects, transcripts, paperedits\n                showLink={ () => {\n                  return this.props.showLinkPath(item.id);\n                } }\n                status={ item.status }\n                description={ description }\n                disabled={ item.status === 'done' ? true : false }\n                errorMessage={ item.status === 'error' ? item.errorMessage : null }\n              />\n            );\n          } else {\n            return null;\n          }\n        })\n        .filter(item => {\n          return item !== null;\n        });\n    }\n\n    let content;\n    let searchEl;\n    // TODO: better error handling\n    // eg there should be a loading/fetching? and then if it gets error 404 or 505(?) from server\n    // then it displays error from server\n    // also add `navigator.onLine` to raise error if offline?\n\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      searchEl = (<SearchBar\n        handleSearch={ this.handleSearch }\n      />);\n    }\n    if (this.props.items !== null && this.props.items.length !== 0) {\n      content = (\n        <>\n          <section style={ { height: '75vh', overflow: 'scroll' } }>\n            {itemsCards}\n          </section>\n        </>\n      );\n    }\n    else {\n      content = <i>No {this.props.model}, create a new one to get started </i>;\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 }>\n            {searchEl}\n          </Col>\n          <Col xs={ 12 } sm={ 3 } md={ 3 } ld={ 3 } xl={ 3 }>\n            <Button onClick={ this.props.handleShowCreateNewItemForm } variant=\"outline-secondary\" size=\"sm\" block>\n                New {this.props.model}\n            </Button>\n          </Col>\n        </Row>\n        {content}\n      </>\n    );\n  }\n}\n\nexport default ListPageTranscript;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\n// https://react-bootstrap.netlify.com/components/alerts/#dismissing\nclass CustomAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  handleDismiss = () => this.setState({ show: false });\n\n  render() {\n    if (this.state.show) {\n      return (\n        <Alert\n          variant={ this.props.variant }\n          onClose={ this.handleDismiss }\n          dismissible\n        >\n          {this.props.heading ? (\n            <Alert.Heading>{this.props.heading}</Alert.Heading>\n          ) : (\n            ''\n          )}\n          {this.props.message}\n        </Alert>\n      );\n    } else {\n      return (\n        <>\n          <br />\n        </>\n      );\n    }\n  }\n}\n\nexport default CustomAlert;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\nimport './index.module.css';\nimport whichJsEnv from '../../Util/which-js-env';\n// setOriginalFetch(window.fetch);\n// window.fetch = progressBarFetch;\n\nclass TranscriptForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      validated: false,\n      redirect: false,\n      newTranscriptId: null,\n      uploading: false,\n      uploadCompleted: false,\n      mediaFileSelected: false,\n      title: this.props.title,\n      description: this.props.description,\n      id: this.props.id,\n      formData: null,\n      savedNotification: null\n    };\n    // console.log(process.env);\n  }\n\n  handleTitleChange = event => {\n    this.setState({ title: event.target.value });\n  };\n\n  handleDescriptionChange = event => {\n    this.setState({ description: event.target.value });\n  };\n\n  // https://codeburst.io/react-image-upload-with-kittens-cc96430eaece\n  handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    const file = files[0];\n    // more on formData https://thoughtbot.com/blog/ridiculously-simple-ajax-uploads-with-formdata\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('type', file.type);\n    // in electron file upload provides a path to the file\n    if (file.path) {\n      formData.append('path', file.path);\n    }\n    // console.log(\"formData.get('path')\", formData.get('path'));\n    this.setState({ mediaFileSelected: true, formData: formData });\n\n    if (this.state.title === '') {\n      this.setState({ title: file.name });\n    }\n  };\n\n  sendRequest = () => {\n    this.setState({ uploading: true });\n\n    const formData = this.state.formData;\n\n    formData.append('title', this.state.title);\n    formData.append('description', this.state.description);\n    console.log(\"formData.get('path')\", formData.get('path'));\n\n    let data = {};\n    if (whichJsEnv() === 'electron') {\n      // if client run inside of electron\n      // is easier to pass another object with title, description\n      // as well as the additional path to the file\n      // rather then parsing a formData object in node etc..\n      data = {\n        title: formData.get('title'),\n        description: formData.get('description'),\n        path: formData.get('path')\n      };\n    }\n    // TODO: do you need a try catch?\n    try {\n      ApiWrapper.createTranscript(this.state.projectId, this.state.formData, data)\n        .then(response => {\n          console.log('ApiWrapper.createTranscript-response ', response);\n          // show message or redirect\n          this.setState({\n            uploading: false,\n            uploadCompleted: true,\n            redirect: true,\n            newTranscriptId: response.transcriptId\n          });\n          this.props.handleSaveForm(response.transcript);\n          // this.props.handleCloseModal();\n\n        }).catch((e) => {\n          console.log('error:::: ', e);\n          this.setState({\n            uploading: false,\n            redirect: false,\n            savedNotification: <CustomAlert\n              dismissable={ true }\n              variant={ 'danger' }\n              heading={ 'Error could not contact the server' }\n              message={ <p>There was an error trying to create this transcript on the server</p> }\n            />\n          });\n        });\n\n    } catch (e) {\n      console.error('error submitting:::', e);\n    }\n  };\n\n  handleSubmit(event) {\n    const form = event.currentTarget;\n    console.log('(form.checkValidity()', form.checkValidity());\n    if (!form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.setState({ validated: true });\n    }\n\n    if (form.checkValidity()) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.sendRequest();\n\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.state.savedNotification}\n\n        <Form\n          noValidate\n          validated={ this.state.validated }\n          onSubmit={ e => this.handleSubmit(e) }\n        >\n          <Form.Group controlId=\"formTranscriptTitle\">\n            <Form.Label>Title </Form.Label>\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter a transcript title\"\n              value={ this.state.title }\n              onChange={ this.handleTitleChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose a title for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a title for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"formTranscriptDescription\">\n            <Form.Label>Description </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a Transcript description\"\n              value={ this.state.description }\n              onChange={ this.handleDescriptionChange }\n            />\n            <Form.Text className=\"text-muted\">\n                Chose an optional description for your Transcript\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n                Please chose a description for your transcript\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"formTranscriptMediaFile\">\n            <Form.Control\n              required\n              type=\"file\"\n              label=\"Upload\"\n              accept=\"audio/*,video/*\"\n              onChange={ this.handleFileUpload }\n            />\n            <Form.Text className=\"text-muted\">\n        Select an audio or video file to upload\n            </Form.Text>\n            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n        Please chose a audio or video file to upload\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\">\n              Save\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default TranscriptForm;\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport TranscriptForm from './TranscriptForm';\n\nclass NewTranscriptFormModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: 'title'\n    };\n  }\n\n  handleClose = () => {\n    this.props.handleCloseModal();\n  }\n\n  render() {\n    return (\n      <Modal show={ this.props.show } onHide={ this.handleClose }>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.modalTitle}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <TranscriptForm\n            projectId={ this.props.projectId }\n            title={ this.props.title }\n            description={ this.props.description }\n            id={ this.props.id }\n            handleSaveForm={ this.props.handleSaveForm }\n            handleCloseModal={ this.props.handleCloseModal }\n          />\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n\nexport default NewTranscriptFormModal;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ListPageTranscript from '../lib/ListPageTranscript';\nimport NewTranscriptFormModal from './NewTranscriptFormModal';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper';\n\nconst intervalInMs = 30000;\n\nclass Transcripts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title:'',\n      description: '',\n      itemId: null,\n      projectTitle: '',\n      isServerError: false,\n      isEditItemModalShow: false\n    };\n\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  async componentDidMount() {\n      this.getTranscripts();\n      // For simplicity rather then handling all the edge cases (on start, save, delete,etc..), the interval runs periodicalicly, \n      // and only if there are items in progress in the list, it checks the backed for updates\n      this.interval = setInterval(() => {\n        console.log('Running interval to check for transcripts');\n        if(this.areThereTranscriptsInProgress(this.state.items)){\n            console.log('interval: checking transcirpt update');\n            this.getTranscripts();\n        }\n    }, intervalInMs);\n  }\n\n  componentWillUnmount =() => {\n    if (this.interval) {\n       clearInterval(this.interval);\n    }\n  }\n\n  getTranscripts = async () =>{\n    const result = await ApiWrapper.getTranscripts(this.state.projectId);\n      // TODO: add error handling\n      if (result) {\n        const tmpList = result.transcripts.map((item) => {\n          item.display = true;\n\n          return item;\n        });\n        this.setState({\n          projectTitle: result.projectTitle,\n          items: tmpList\n        }, () => {\n          console.log('getTranscripts-tmpList');\n        });\n      }\n  }\n\n  areThereTranscriptsInProgress = (items) => {\n    if (items.length !== 0) {\n      const result = items.find((transcript) => {\n\n        return transcript.status === 'in-progress';\n      });\n\n      return result ? true : false;\n    }\n\n    return false;\n  }\n\n\n  // side POST using wrapperAPI done\n  // inside --> newTranscriptFormModal --> TranscriptForm\n  // component - could be refactored\n  // but needs to take into account file upload from form in TranscriptForm\n  handleSaveItem = (item) => {\n    console.log('handleSaveItem', item);\n    const newItem = item;\n    newItem.display = true;\n    const { items } = this.state;\n    const newitems = [ ...items ];\n    newitems.push(newItem);\n    this.setState({\n      items: newitems,\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    }, () => {\n      console.log('setState');\n    });\n  }\n\n  handleSaveEditedItem = (transcript) => {\n    const newEditedItem = transcript;\n    console.log('newEditedITem', newEditedItem);\n    // display attribute for search\n    newEditedItem.display = true;\n    // Update existing\n    const { items } = this.state;\n    const itemIdex = items.findIndex(item => item.id === transcript.id);\n    const newItemsList = [ ...items ];\n    // preserve status info\n    transcript.status = newItemsList[itemIdex].status;\n    newItemsList[itemIdex] = transcript;\n    const queryParamsOptions = false;\n    const transcriptId = newEditedItem.id;\n    // TODO: add error handling, eg message, wasn't able to update etc..\n    ApiWrapper.updateTranscript(this.state.projectId, transcriptId, queryParamsOptions, newEditedItem)\n      .then((response) => {\n        if (response.ok) {\n          console.log('ApiWrapper.updateTranscript', response, newItemsList);\n          this.setState({\n            items: newItemsList,\n            isEditItemModalShow: false\n          });\n        }\n      });\n\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  // opens the modal for editing item\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isEditItemModalShow: true\n    });\n  }\n\n  async handleDelete (transcriptId ) {\n    console.log('handle delete');\n    // TODO: API + server side request for delete\n    // on successful then update state\n    const result = await ApiWrapper.deleteTranscript(this.state.projectId, transcriptId);\n    // TODO: some error handling, error message saying something went wrong\n    const findId = (item) => item.id !== transcriptId;\n    if (result.ok) {\n      const tmpNewList = this.state.items.filter(item => findId(item));\n      this.setState({\n        items: tmpNewList\n      }, () => {\n        console.log('deleted')\n      });\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/transcripts/${ id }/correct`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    this.setState({ isNewItemModalShow: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  handleCloseModalEdit = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isEditItemModalShow: false\n    });\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list, isNewItemModalShow: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n\n          <ListPageTranscript\n            model={ 'Transcript' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDelete }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n            //\n            handleCloseModal={ this.handleCloseModal }\n            icon={ <FontAwesomeIcon icon={ faFileAlt } /> }\n          />\n          <NewTranscriptFormModal\n            projectId={ this.state.projectId }\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'New Transcript' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ 'Edit Transcript' }\n            show={ this.state.isEditItemModalShow }\n            handleCloseModal={ this.handleCloseModalEdit }\n            handleSaveForm={ this.handleSaveEditedItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport ListPage from '../lib/ListPage';\nimport ItemFormModal from '../lib/ItemFormModal';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass PaperEdits extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.projectId,\n      items: [],\n      isNewItemModalShow: false,\n      title: '',\n      description: '',\n      itemId: null\n    };\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getAllPaperEdits(this.state.projectId);\n    console.log('ApiWrapper.getAllPaperEdits', result);\n    if (result) {\n      // add a display property for component cards search\n      const tmpList = result.map(paperEdit => {\n        paperEdit.display = true;\n\n        return paperEdit;\n      });\n      this.setState({ items: tmpList });\n    }\n    // TODO: some error handling\n  };\n\n  // TODO: handle save / update through API wrapper\n  // // The form works both for new/create and edit/update\n  handleSaveItem = (item) => {\n    if (!item.id) {\n      ApiWrapper.createPaperEdit(this.state.projectId, item).then(response => {\n        if (response.status === 'ok') {\n          // Server returns project with UID generated server side\n          const items = [ ...this.state.items ];\n          // need to add display true attribute for search to the new project\n          const newPaperEdit = response.paperedit;\n          newPaperEdit.display = true;\n          items.push(response.paperedit);\n          this.setState({\n            isNewItemModalShow: false,\n            items: items,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n    else {\n      ApiWrapper.updatePaperEdit(this.state.projectId, item.id, item).then(response => {\n        if (response.status === 'ok') {\n          const paperedit = response.paperedit;\n          // need to add display true attribute for search to the new project\n          paperedit.display = true;\n          // // Server returns project with UID generated server side\n          const { items } = this.state;\n          const newItemsList = [ ...items ];\n          this.findItemById(items, item);\n          const papereditIndex = items.findIndex(item => item.id === paperedit.id);\n          newItemsList[papereditIndex] = paperedit;\n          this.setState({\n            isNewItemModalShow: false,\n            items: newItemsList,\n            // reset item form\n            title: '',\n            itemId: null,\n            description: ''\n          });\n        }\n      });\n    }\n  }\n\n  findItemById = (list, id) => {\n    const result = list.filter((p) => {\n      return p.id === id;\n    });\n\n    return result[0];\n  }\n\n  handleEditItem = (itemId) => {\n    const item = this.findItemById(this.state.items, itemId);\n    this.setState({\n      title: item.title,\n      itemId: item.id,\n      description: item.description,\n      isNewItemModalShow: true\n    });\n  }\n\n  // TODO:\n  async handleDeleteItem(itemId) {\n    const result = await ApiWrapper.deletePaperEdit(this.state.projectId, itemId);\n    if (result.ok) {\n      const newItemsList = this.state.items.filter((p) => {\n        return p.id !== itemId;\n      });\n      this.setState({ items: newItemsList });\n    } else {\n      // TODO: some error handling, error message saying something went wrong\n    }\n  }\n\n  showLinkPathToItem = (id) => {\n    return `/projects/${ this.state.projectId }/paperedits/${ id }`;\n  }\n\n  handleUpdateList = (list) => {\n    this.setState({ items: list });\n  }\n\n  handleShowCreateNewItemForm = () => {\n    // return '/projects/new';\n    this.setState({ isNewItemModalShow: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({\n      title:'',\n      itemId: null,\n      description: '',\n      isNewItemModalShow: false\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <ListPage\n            model={ 'Paper Edit' }\n            items={ this.state.items }\n            handleShowCreateNewItemForm={ this.handleShowCreateNewItemForm }\n            // deleteItem={ this.createNew }\n            // editItem={ this.createNew }\n            handleEdit={ this.handleEditItem }\n            handleDelete={ this.handleDeleteItem }\n            showLinkPath={ this.showLinkPathToItem }\n            handleUpdateList={ this.handleUpdateList }\n          />\n          <ItemFormModal\n            title={ this.state.title }\n            description={ this.state.description }\n            id={ this.state.itemId }\n            modalTitle={ this.state.itemId ? 'Edit Paper Edit' : 'New Paper Edit' }\n            show={ this.state.isNewItemModalShow }\n            handleCloseModal={ this.handleCloseModal }\n            handleSaveForm={ this.handleSaveItem }\n          />\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default PaperEdits;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport CustomFooter from '../lib/CustomFooter';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb';\nimport Transcripts from '../Transcripts';\nimport PaperEdits from '../PaperEdits';\nimport ApiWrapper from '../../ApiWrapper/index.js';\n\nclass Project extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      // for use in react-bootstrap tab component\n      key: 'transcripts',\n      projectId: this.props.match.params.projectId,\n      projectName: 'Projects Name'\n    };\n  }\n\n  async componentDidMount () {\n    // TODO: do we need to add user id in request?\n    const result = await ApiWrapper.getProject(this.state.projectId);\n    if (result) {\n      this.setState({ projectName: result.project.title });\n    }\n    // TODO: some error handling\n  };\n\n  render() {\n    return (\n      <>\n        <Container style={ { marginBottom: '5em', marginTop: '1em' } }>\n          <Row>\n            <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n              <CustomBreadcrumb items={ [\n                {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: this.state.projectName\n                }\n              ] } />\n            </Col>\n          </Row>\n          <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={ this.state.key }\n            onSelect={ key => this.setState({ key }) }\n          >\n            <Tab eventKey=\"transcripts\" title=\"Transcripts\">\n              <Transcripts projectId={ this.state.projectId }/>\n            </Tab>\n            <Tab eventKey=\"paperedits\" title=\"Paper Edits\">\n              <PaperEdits projectId={ this.state.projectId } />\n            </Tab>\n          </Tabs>\n        </Container>\n        <CustomFooter/>\n      </>\n    );\n  }\n}\n\nexport default Project;","import React, { Component } from 'react';\n// import './index.module.css';\n// import styles from './Transcript.module.css';\n// TODO: perhaps import TranscriptEditor on componentDidMount(?) to defer the load for later\n// https://facebook.github.io/create-react-app/docs/code-splitting\nimport { TranscriptEditor } from 'react-transcript-editor';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport CustomBreadcrumb from '../lib/CustomBreadcrumb/index.js';\n// import CustomFooter from '../lib/CustomFooter/index.js';\nimport ApiWrapper from '../../ApiWrapper/index.js';\nimport CustomFooter from '../lib/CustomFooter/index.js';\nimport CustomAlert from '../lib/CustomAlert/index.js';\n\nclass TranscriptCorrect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId: this.props.match.params.projectId,\n      transcriptId: this.props.match.params.transcriptId,\n      transcriptJson: null,\n      url: null,\n      projectTitle: '',\n      transcriptTitle: '',\n      savedNotification: null\n    };\n    this.transcriptEditorRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getTranscript(this.state.projectId, this.state.transcriptId)\n      // TODO: add error handling\n      .then(json => {\n        this.setState({\n          projectTitle: json.projectTitle,\n          transcriptTitle: json.transcriptTitle,\n          transcriptJson: json.transcript,\n          url: json.url\n        });\n      });\n  }\n\n  saveToServer = () => {\n    // TODO: add Api call to save content of\n    alert('save to server');\n\n    // TODO: decide how to deal with transcript corrections\n    // exporting digitalpaperedit in react-transcript-editor@latest doesn't give you\n    // corrected text with timecodes, only \"original\" uncorrected text even if transcript might\n    // have been corrected, because of outstandin PR in react-transcript-editor\n    // https://github.com/bbc/react-transcript-editor/pull/144\n    // which should be addressed after https://github.com/bbc/react-transcript-editor/pull/160\n    //\n    // Other option is to export as `txtspeakertimecodes` or `txt` and reallign server side using Aeneas\n    //\n    // TranscriptEditor - export options: txtspeakertimecodes - draftjs - txt - digitalpaperedit\n    const { data } = this.transcriptEditorRef.current.getEditorContent('digitalpaperedit');\n    data.title = this.state.transcriptTitle;\n    data.transcriptTitle = this.state.transcriptTitle;\n    const queryParamsOptions = false;\n    ApiWrapper.updateTranscript(this.state.projectId, this.state.transcriptId, queryParamsOptions, data).then((response) => {\n      console.log('ApiWrapper.updateTranscript', response );\n      if (response.ok) {\n      // show message or redirect\n        console.log('updated');\n        // this.setState({ redirect: true, newProjectId: response.projectId });\n        this.setState({\n          savedNotification: <CustomAlert\n            dismissable={ true }\n            variant={ 'success' }\n            heading={ 'Transcript saved' }\n            message={ <p>Transcript: <b>{this.state.transcriptTitle}</b> has been saved</p> }\n          />\n        });\n      }\n    }).catch((e) => {\n      console.error('error saving transcript:: ', e);\n      this.setState({\n        savedNotification: <CustomAlert\n          dismissable={ true }\n          variant={ 'danger' }\n          heading={ 'Error saving transcript' }\n          message={ <p>There was an error trying to save this transcript: <b>{this.state.transcriptTitle}</b></p> }\n        />\n      });\n    });\n  }\n\n  redirectToAnnotatePage = () => {\n    // this.state.projectId this.state.transcriptId\n    this.setState({\n      redirect: true\n    });\n  }\n\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to={ `/projects/${ this.state.projectId }/transcripts/${ this.state.newTranscriptId }/annotate` } />;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {this.renderRedirect()}\n        <Container style={ { marginBottom: '5em' } } fluid>\n          <br/>\n          <Row>\n            <Col sm={ 12 } md={ 11 } ld={ 11 } xl={ 11 }>\n              <CustomBreadcrumb\n                items={ [ {\n                  name: 'Projects',\n                  link: '/projects'\n                },\n                {\n                  name: `Project: ${ this.state.projectTitle }`,\n                  link: `/projects/${ this.state.projectId }`\n                },\n                {\n                  name: 'Transcripts',\n                },\n                {\n                  name: `${ this.state.transcriptTitle }`\n                },\n                {\n                  name: 'Correct'\n                }\n                ] }\n              />\n            </Col>\n            {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n              <Button variant=\"outline-secondary\" onClick={ this.redirectToAnnotatePage } size=\"lg\" block>\n              Annotate\n              </Button>\n              <br/>\n            </Col> */}\n            <Col xs={ 12 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n              <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n              </Button>\n              <br/>\n            </Col>\n          </Row>\n          {this.state.savedNotification}\n          {this.state.transcriptJson !== null &&\n          <TranscriptEditor\n            transcriptData={ this.state.transcriptJson }// Transcript json\n            // TODO: move url server side\n            mediaUrl={ this.state.url }// string url to media file - audio or video\n            isEditable={ true }// se to true if you want to be able to edit the text\n            sttJsonType={ 'digitalpaperedit' }// the type of STT Json transcript supported.\n            //  TODO: check if name has changed in latest version\n            title={ this.state.transcriptTitle }\n            // fileName={ this.state.projectTitle }// optional*\n            ref={ this.transcriptEditorRef }\n          />}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default TranscriptCorrect;\n","// helper funciton for adding colors to labels in react-select component\n// https://react-select.com/styles\n// import chroma from 'chroma-js';\n\nconst colourStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    // const color = chroma(data.color);\n\n    const tmpBackgroundColor = null;// 'black;\n    // if (isDisabled) {\n    //   tmpBackgroundColor = null;\n    // }\n    // if (isSelected) {\n    //   tmpBackgroundColor = data.color;\n    // }\n    // if (isFocused) {\n    //   tmpBackgroundColor = color.alpha(0.1).css();\n    // }\n\n    const tmpColor = data.color;\n    // if (isDisabled) {\n    //   tmpColor = '#ccc';\n    // }\n    // if (isSelected) {\n    //   tmpColor = chroma.contrast(color, 'white') > 2\n    //     ? 'white'\n    //     : 'black';\n    // }\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      borderLeft: '1.5em solid',\n      borderColor: tmpColor,\n      marginBottom: '0.4em',\n      // color: tmpColor,\n      cursor: isDisabled ? 'not-allowed' : 'default'\n    };\n  },\n  //   return {\n  //     ...styles,\n  //     backgroundColor: isDisabled\n  //       ? null\n  //       : isSelected\n  //         ? data.color\n  //         : isFocused\n  //           ? color.alpha(0.1).css()\n  //           : null, //'black'\n  //     color: isDisabled\n  //       ? '#ccc'\n  //       : isSelected\n  //         ? chroma.contrast(color, 'white') > 2\n  //           ? 'white'\n  //           : 'black'\n  //         : data.color,\n  //     cursor: isDisabled ? 'not-allowed' : 'default'\n  //   };\n  // },\n  // singleValue: (provided, state) => {\n  //   const opacity = state.isDisabled ? 0.5 : 1;\n  //   const transition = 'opacity 300ms';\n\n  //   return { ...provided, opacity, transition };\n  // },\n  multiValue: (styles, { data }) => {\n    // const color = chroma(data.color);\n\n    return {\n      ...styles,\n      // backgroundColor: color.alpha(0.1).css()\n      backgroundColor: 'white',\n      border: '0.05em solid',\n      borderLeft: '1.2em solid',\n      borderColor: data.color,\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    // color: data.color\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    // color: data.color,\n    // ':hover': {\n    //   backgroundColor: data.color,\n    //   color: 'white'\n    // }\n  })\n};\n\nexport default colourStyles;\n","// helper function for adding custom stylings to speakers in react-select component in search bar\n// https://react-select.com/styles\n\nconst speakersColorStyles = {\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\n  option: (styles) => {\n\n    const tmpBackgroundColor = null;\n\n    return {\n      ...styles,\n      backgroundColor: tmpBackgroundColor,\n      cursor:'default'\n    };\n  },\n\n  multiValue: (styles) => {\n\n    return {\n      ...styles,\n      backgroundColor: 'white',\n      border: '0.05em solid grey'\n    };\n  },\n  multiValueLabel: (styles) => ({\n    ...styles\n  }),\n  multiValueRemove: (styles) => ({\n    ...styles\n  })\n};\n\nexport default speakersColorStyles;\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCheck,\n  faAlignJustify,\n  faFilter,\n  faTag,\n  faUser,\n  faSearch,\n} from '@fortawesome/free-solid-svg-icons';\nimport colourStyles from '../LabelsList/select-color-styles.js';\nimport speakersColorStyles from './select-speakers-color-styles.js';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showParagraphsMatchingSearch: false,\n      showTextSearchPreferences: false,\n      showSpeakersSearchPreferences: false,\n      showLabelsSearchPreferences: false\n    };\n  }\n\n  handleToggleSearchTextPreferences = () => {\n    this.setState((state) => {\n      return { showTextSearchPreferences: !state.showTextSearchPreferences };\n    });\n  };\n\n  handleToggleSearchLabelsPreferences = () => {\n    this.setState((state) => {\n      return {\n        showLabelsSearchPreferences: !state.showLabelsSearchPreferences\n      };\n    });\n  };\n\n  handleToggleSearchSpeakersPreferences = () => {\n    this.setState((state) => {\n      return {\n        showSpeakersSearchPreferences: !state.showSpeakersSearchPreferences\n      };\n    });\n  };\n\n  handleSpeakersSearchChange = selectedOptionSpeakerSearch => {\n    this.props.handleSpeakersSearchChange(selectedOptionSpeakerSearch);\n    this.setState({ selectedOptionSpeakerSearch });\n  };\n\n   handleLabelsSearchChange = selectedOptionLabelSearch => {\n     this.props.handleLabelsSearchChange(selectedOptionLabelSearch);\n     this.setState({ selectedOptionLabelSearch });\n   };\n\n   handleShowParagraphsMatchingSearch = () => {\n     this.setState((state) => {\n       return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleToggleAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: true,\n         showSpeakersSearchPreferences: true,\n         showLabelsSearchPreferences: true,\n         // defaults to show only matching paragraph to be checked\n         showParagraphsMatchingSearch: true\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   handleHideAll = () => {\n     this.setState((state) => {\n       return {\n         showTextSearchPreferences: false,\n         showSpeakersSearchPreferences: false,\n         showLabelsSearchPreferences: false,\n         // remove preferences for showing matching paragraphjs when removing filters\n         showParagraphsMatchingSearch: false\n       };\n     }, () => {\n       this.props.handleShowParagraphsMatchingSearch();\n     });\n   }\n\n   /* TODO: move searchBar to a Search Toolbar component? */\n   render() {\n\n     return (\n       <>\n         <Card.Header>\n           <InputGroup className=\"mb-3\">\n             <InputGroup.Prepend>\n               <InputGroup.Text>\n                 <FontAwesomeIcon icon={ faSearch } />\n               </InputGroup.Text>\n             </InputGroup.Prepend>\n             {/* Search */}\n             <FormControl\n               //  TODO: pass labels, speakers, and paragraph pref\n               onChange={ (e) => {this.props.handleSearch(e, {\n                 showParagraphsMatchingSearch: this.state.showParagraphsMatchingSearch,\n                 showLabelsSearchPreferences: this.state.showLabelsSearchPreferences,\n                 showSpeakersSearchPreferences: this.state.showSpeakersSearchPreferences\n               });} }\n               placeholder=\"Search text...\"\n               aria-label=\"search\"\n               aria-describedby=\"search\"\n             />\n             <DropdownButton\n               drop={ 'right' }\n               as={ InputGroup.Append }\n               variant=\"outline-secondary\"\n               title={ <>\n                 <FontAwesomeIcon icon={ faFilter }\n                   title=\"Filter results\" />\n               </> }\n             >\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchLabelsPreferences }\n                 title=\"Filter results by Labels\"\n               >\n                 <FontAwesomeIcon icon={ faTag } />  Labels {this.state.showLabelsSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchSpeakersPreferences }\n                 title=\"Filter results by Speakers\"\n               >\n                 <FontAwesomeIcon icon={ faUser } /> Speakers  {this.state.showSpeakersSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleSearchTextPreferences }\n                 title=\"Show only matching paragraphs\"\n               >\n                 <FontAwesomeIcon icon={ faAlignJustify }/> Paragraphs only {this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Item\n                 onClick={ this.handleToggleAll }\n                 title=\"Show all of the above options\"\n               >\n                 All {this.state.showLabelsSearchPreferences && this.state.showSpeakersSearchPreferences && this.state.showTextSearchPreferences ?\n                   <FontAwesomeIcon style={ { color:'blue' } } icon={ faCheck } />\n                   : ''}\n               </Dropdown.Item>\n               <Dropdown.Divider />\n               <Dropdown.Item\n                 onClick={ this.handleHideAll }\n                 title=\"Deselect all the options\"\n               >\n                Deselect all\n               </Dropdown.Item>\n             </DropdownButton>\n           </InputGroup>\n\n           { this.state.showLabelsSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faTag } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionLabelSearch }\n                     onChange={ this.handleLabelsSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.labelsOptions }\n                     styles={ colourStyles }\n                     placeholder={ 'Filter by label...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showSpeakersSearchPreferences\n             ? <>\n               <Row className=\"mb-3\">\n                 <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 }>\n                   <InputGroup.Prepend>\n                     <InputGroup.Text>\n                       <FontAwesomeIcon icon={ faUser } />\n                     </InputGroup.Text>\n                   </InputGroup.Prepend>\n                 </Col>\n                 <Col xs={ 10 } sm={ 11 } md={ 11 } ld={ 11 } xl={ 11 }>\n                   <Select\n                     value={ this.state.selectedOptionSpeakerSearch }\n                     onChange={ this.handleSpeakersSearchChange }\n                     isMulti\n                     isSearchable\n                     options={ this.props.speakersOptions }\n                     styles={ speakersColorStyles }\n                     placeholder={ 'Filter by speaker...' }\n                   />\n                 </Col>\n               </Row>\n             </>\n             : ''}\n\n           { this.state.showTextSearchPreferences\n             ? (<>\n               <Form.Check\n                 type=\"checkbox\"\n                 checked={ this.state.showParagraphsMatchingSearch }\n                 onChange={ this.handleShowParagraphsMatchingSearch }\n                 label={ <>\n                   <Form.Text\n                     className=\"text-muted\"\n                     title=\"Show only matching paragraphs\"\n                     onClick={ this.handleShowParagraphsMatchingSearch }\n                   >\n                       Show only matching paragraphs\n                   </Form.Text>\n                 </> }\n               />\n             </>)\n             : ''}\n\n         </Card.Header>\n       </>\n     );\n   }\n}\n\nexport default SearchBar;","/**\n * TODO: remove this and export from react-transcript-editor digital-paper-edit STT import draftJs converter\n\n edge cases\n- more segments then words - not an issue if you start by matching words with segment\nand handle edge case where it doesn't find a match\n- more words then segments - orphan words\n*\n* Takes in list of words and list of paragraphs (paragraphs have speakers info associated with it)\n```js\n{\n  \"words\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.17,\n      \"text\": \"There\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.17,\n      \"end\": 13.38,\n      \"text\": \"is\"\n    },\n    ...\n    ],\n  \"paragraphs\": [\n    {\n      \"id\": 0,\n      \"start\": 13.02,\n      \"end\": 13.86,\n      \"speaker\": \"TBC 00\"\n    },\n    {\n      \"id\": 1,\n      \"start\": 13.86,\n      \"end\": 19.58,\n      \"speaker\": \"TBC 1\"\n    },\n    ...\n  ]\n}\n```\n*  and returns a list of words grouped into paragraphs, with words, text and speaker attribute\n```js\n[\n  {\n    \"words\": [\n      {\n        \"id\": 0,\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"text\": \"There\"\n      },\n      {\n        \"id\": 1,\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"text\": \"is\"\n      },\n      {\n        \"id\": 2,\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"text\": \"a\"\n      },\n      {\n        \"id\": 3,\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"text\": \"day.\"\n      }\n    ],\n    \"text\": \"There is a day.\",\n    \"speaker\": \"TBC 00\"\n  },\n  ...\n]\n```\n */\nfunction groupWordsInParagraphsBySpeakers(words, segments) {\n  const result = addWordsToSpeakersParagraphs(words, segments);\n\n  return result;\n};\n\nfunction addWordsToSpeakersParagraphs (words, segments) {\n  const results = [];\n  let currentSegmentIndex = 0;\n  let previousSegmentIndex = 0;\n  let paragraph = { words: [], text: '', speaker: '' };\n  words.forEach((word) => {\n    const currentSegment = findSegmentForWord(word, segments);\n    // if a segment exists for the word\n    if (currentSegment !== undefined) {\n      currentSegmentIndex = segments.indexOf(currentSegment);\n      if (currentSegmentIndex === previousSegmentIndex) {\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n      else {\n        previousSegmentIndex = currentSegmentIndex;\n        paragraph.text.trim();\n        results.push(paragraph);\n        paragraph = { words: [], text: '', speaker: '' };\n        paragraph.words.push(word);\n        paragraph.text += word.text + ' ';\n        paragraph.speaker = currentSegment.speaker;\n      }\n    }\n  });\n  results.push(paragraph);\n\n  return results;\n}\n\n/**\n* Helper functions\n*/\n\n/**\n* given word start and end time attributes\n* looks for segment range that contains that word\n* if it doesn't find any it returns a segment with `UKN`\n* speaker attributes.\n* @param {object} word - word object\n* @param {array} segments - list of segments objects\n* @return {object} - a single segment whose range contains the word\n*/\nfunction findSegmentForWord(word, segments) {\n\n  const tmpSegment = segments.find((seg) => {\n    if ((word.start >= seg.start) && (word.end <= seg.end)) {\n      return seg;\n    }\n  });\n\n  return tmpSegment;\n}\n\nexport default groupWordsInParagraphsBySpeakers;","/**\n *  Case 1 - there is an annotation within the boundaries of the current paragraph\n */\nconst isAnnotationWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 2 - annotation start within the paragraph but ends in subsequent one\n * TODO:\n */\nconst isAnnotationStartWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start >= paragraphFirstWordTime &&\n      annotation.start <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 3 - annotation ends within the paragraph  but starts in previous one\n *  TODO:\n */\nconst isAnnotationEndWithinParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.end >= paragraphFirstWordTime &&\n      annotation.end <= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *  Case 4 -annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n * TODO:\n */\nconst isAnnotationAcrossParagraph = ( annotations, paragraphFirstWordTime, paragraphLastWordTime) => {\n  const results = annotations.find(annotation => {\n    return (\n      annotation.start <= paragraphFirstWordTime &&\n      annotation.end >= paragraphLastWordTime\n    );\n  });\n\n  return results;\n};\n\n/**\n *\n * @param {array} annotations\n * @param {object} paragraph\n * @returns annotation object found in the paragraph - false if it doesn't contain\n * example annotation object\n ```\n  { 'id': 2,\n    'start':14.38,\n    'end': 18.14,\n    'labelId': 1,\n    'note': 'optional example text description for an annotation - TEST 1'\n  };\n```\n * TODO: This assumes the annotation is included in the paragraph, and doesn't span across multiple lines\n */\nconst findAnnotationInParagraph = (annotations, paragraph) => {\n  const paragraphFirstWordTime = paragraph[0].start;\n  const paragraphLastWordTime = paragraph[paragraph.length - 1].end;\n  // Case 1 - there is an annotation within the boundaries of the current paragraph\n  const resultsCaseOne = isAnnotationWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseOne) {\n    return resultsCaseOne;\n  }\n  // Case 2 - annotation start within the paragraph  but ends in subsequent one\n  const resultsCaseTwo = isAnnotationStartWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseTwo) {\n    return resultsCaseTwo;\n  }\n  // // Case 3 - annotation ends within the paragraph  but starts in previous one\n  const resultsCase3 = isAnnotationEndWithinParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCase3) {\n    return resultsCase3;\n  }\n  // // Case 4 - annotation spans across the current paragraph  but starts in previous one and ends in subsequent one\n  const resultsCaseFour = isAnnotationAcrossParagraph(annotations, paragraphFirstWordTime, paragraphLastWordTime);\n  if (resultsCaseFour) {\n    return resultsCaseFour;\n  }\n\n  return false;\n};\n\nexport default findAnnotationInParagraph;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { shortTimecode } from 'react-transcript-editor/timecodeConverter';\nimport styles from './index.module.css';\n\n/**\n *  Paragraph display preferences based on search\n *\n *  styles to separate the look of non contiguous paragraphs?\n */\n\nclass Paragraph extends Component {\n\n  render() {\n    const { paragraphDisplayPreference } = this.props;\n    // const inContextSearch = paragraphDisplayPreference;\n    paragraphDisplayPreference.borderStyle = 'dashed';\n    paragraphDisplayPreference.borderWidth = '0.01em';\n    paragraphDisplayPreference.borderColor = 'lightgray';\n    paragraphDisplayPreference.padding = '0.5em';\n\n    // inContextSearch.display = 'block';\n    let paragraphStyle = {};\n    if (this.props.showParagraphsMatchingSearch) {\n      paragraphStyle = this.props.paragraphDisplayPreference;\n    }\n    else {\n      if (!paragraphDisplayPreference.display) {\n        delete paragraphDisplayPreference.display;\n        // paragraphStyle.borderColor = 'orange';\n        // paragraphStyle.borderStyle = 'dashed';\n        // paragraphStyle.borderWidth = '0.01em';\n        paragraphStyle.borderRight = '0.1em dashed lightgrey';\n        paragraphStyle.borderLeft = '0.1em dashed lightgrey';\n      }\n    }\n\n    return (\n      <Row\n        style={ { ...paragraphStyle } }\n        className=\"paragraph\"\n        data-paragraph-text={ this.props.paragraphTextWithoutPunctuation }\n      >\n        <Col xs={ 12 } sm={ 12 } md={ 3 } lg={ 3 } xl={ 2 }\n          style={ { cursor: 'pointer', width: '100%' } }\n          className={ 'text-truncate' }\n          title={ `${ this.props.speakerName.toUpperCase() } -  ${ shortTimecode(this.props.paragraph[0].start) }` }>\n          <span\n            className={ [ styles.speaker, styles.unselectable, 'timecode' ].join(' ') }\n            data-start={ this.props.paragraph[0].start }\n            tabIndex=\"0\"\n          >{this.props.speakerName}</span>\n        </Col>\n        {/* <Col xs={ 4 } sm={ 4 } md={ 2 } lg={ 2 } xl={ 1 }\n          style={ { padding: '0em', textAlign: 'center' } }\n          className={ styles.unselectable }\n        >\n          <span\n            style={ { cursor: 'pointer', width: '100%' } }\n            data-start={ this.props.paragraph[0].start }\n            className={ 'timecode' }\n            tabIndex=\"0\"\n            >\n            { shortTimecode(this.props.paragraph[0].start) }\n          </span>\n        </Col> */}\n        <Col xs={ 12 } sm={ 12 } md={ 9 } lg={ 9 } xl={ 10 }>\n          {this.props.wordsElements}\n        </Col>\n      </Row>\n    );\n  }\n}\nexport default Paragraph;","const removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nexport default removePunctuation;","import React, { Component } from 'react';\n// import removePunctuation from '../../../../../../Util/remove-punctuation/index.js';\nimport removePunctuation from '../../../../../Util/remove-punctuation/index.js';\n\nclass Word extends Component {\n  generatePreviousTimes = (start) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n  render() {\n    const { transcriptId, speaker, word } = this.props;\n    // console.log('this.props.paragraph', this.props.transcriptId);\n    // const result = this.props.paragraph.map(word => {\n\n    return (\n      <span\n        title={ `start:${ word.start } - end:${ word.end }` }\n        data-prev-times = { this.generatePreviousTimes( word.start) }\n        className={ [ 'words',\n          // , styles.highlightedWord\n        ].join(' ') }\n        data-start={ word.start }\n        // TODO: make/Use helper function in Util - removePunctuation\n        data-text={ removePunctuation(word.text) }\n        // data-text={ word.text }\n        data-end={ word.end }\n        data-transcript-id={ transcriptId }\n        data-speaker={ speaker }\n        key={ 'key_' + word.id + '_' + word.end }\n        // tabIndex=\"0\"\n        role=\"button\"\n        aria-pressed=\"false\"\n        onKeyDown={ this.props.handleKeyDownWords }\n      >\n        {word.text}{' '}\n      </span>\n    );\n    // });\n\n    // return (\n    //   <>{result}</>\n\n    // );\n  }\n};\n\nexport default Word;","import React, { Component } from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Popover from 'react-bootstrap/Popover';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faPen,\n  faStickyNote,\n  faTrashAlt,\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\n\nclass AnnotationOverlayTrigger extends Component {\n\n  handleEditAnnotation = () => {\n    let text;\n    this.props.handleEditAnnotation(this.props.annotationId, text );\n  }\n\n  render() {\n    // console.log('render - AnnotationOverlayTrigger - props', this.props);\n    // const { annotationLabelId } = this.props;\n    let overlayContent;\n    // handling edge case when labels are not available\n    if (this.props.labelsOptions) {\n      let label = this.props.labelsOptions.find((label) => {\n\n        return label.id === this.props.annotationLabelId;\n      });\n      // console.log('label:: ', label, annotationLabelId, this.props.labelsOptions, 'this.props.words', this.props.words, this.props.annotationNote);\n      // TODO: Quick fix - needs digging into why sometimes adding a new label crashes, and the `find` function above returns undefined\n      if (!label) {\n        label = this.props.labelsOptions[0];\n      }\n\n      overlayContent = <OverlayTrigger rootClose={ true } trigger=\"click\" placement=\"bottom\"\n        overlay={\n          <Popover id=\"popover-basic\">\n            <Row>\n              <Col md={ 1 } style={ { backgroundColor: label.color, marginLeft:'1em' } }></Col>\n              <Col >\n                <FontAwesomeIcon icon={ faTag } />  {label.label}\n              </Col>\n              <Col md={ 1 } style={ { marginRight:'1em' } }\n                onClick={ () => {this.props.handleDeleteAnnotation(this.props.annotationId);} }>\n                <FontAwesomeIcon icon={ faTrashAlt } />\n              </Col>\n            </Row>\n            <hr/>\n            <FontAwesomeIcon icon={ faStickyNote }\n              onClick={ this.handleEditAnnotation }\n            />   { this.props.annotationNote }\n            <br/>\n            <FontAwesomeIcon icon={ faPen }\n              onClick={ this.handleEditAnnotation }\n            />\n          </Popover>\n        }\n      >\n        <span style={ { borderBottom: `0.1em ${ label.color } solid` } } className={ 'highlight' }>{this.props.words}</span>\n      </OverlayTrigger>;\n\n    }\n\n    return (<>\n      {overlayContent}\n    </>\n    );\n  }\n}\n\nexport default AnnotationOverlayTrigger;","/**\n * helper function to assign css display preferences\n * @param {boolean} isTextSearch\n * @param {boolean} isSpeakerSearch\n * @param {boolean} isLabelSearch\n */\nfunction computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch) {\n  let displayPreference = {};\n  if (!isTextSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isSpeakerSearch) {\n    displayPreference = { display: 'none' };\n  }\n  if (!isLabelSearch) {\n    displayPreference = { display: 'none' };\n  }\n\n  return displayPreference;\n}\n\nexport default computeParagraphDisplayPreference;","const isAnnotationWithinWord = ( annotations, wordStartTime, wordEndTime) => {\n//   console.log('annotations', annotations, wordStartTime, wordEndTime);\n  const results = annotations.find(annotation => {\n    return (\n      wordStartTime >= annotation.start &&\n        wordEndTime <= annotation.end\n    );\n  });\n  //   console.log('isAnnotationWithinWord-results', results);\n\n  return results;\n};\n\nconst addAnnotationToWordsInOneParagraph = (words, annotations) => {\n  return words.map((word) => {\n    const annotationForWord = isAnnotationWithinWord(annotations, word.start, word.end);\n    if (annotationForWord) {\n      word.annotation = annotationForWord;\n      // console.log(word.annotation);\n    }\n    else {\n      // this is needed, for when a annotation is being removed from a word\n      delete word.annotation;\n    }\n\n    return word;\n  });\n\n};\n\nconst addAnnotationsToWordsInParagraphs = (paragraphsWithWordsSpeakerText, annotations) => {\n  return paragraphsWithWordsSpeakerText.map(paragraph => {\n    paragraph.words = addAnnotationToWordsInOneParagraph(paragraph.words, annotations);\n\n    return paragraph;\n  });\n};\n\nexport default addAnnotationsToWordsInParagraphs;","import React, { Component } from 'react';\n// import generateParagraphs from './generate-paragraphs/index.js';\nimport groupWordsInParagraphsBySpeakers from './group-words-by-speakers.js';\nimport findAnnotationInParagraph from './find-annotation-in-paragraph.js';\nimport Paragraph from './Paragraph.js';\nimport Word from './Word.js';\nimport AnnotationOverlayTrigger from './AnnotationOverlayTrigger.js';\nimport computeParagraphDisplayPreference from './compute-paragraph-display-preference.js';\nimport addAnnotationsToWordsInParagraphs from './add-annotations-to-words-in-paragraphs.js';\n// import removePunctuation from '../../../../../Util/remove-punctuation.js';\nconst removePunctuation = (string) => {\n  return string.replace(/\\.|\\?|!|,|;/, '').toLowerCase() ;\n};\n\nclass Paragraphs extends Component {\n  // for accessibility, being able to\n  // move with tabs and press enter on\n  // timecode to start playing from that point\n\n  // shouldComponentUpdate = () => {\n  //   return true;\n  // }\n  handleKeyDownTimecodes = e => {\n    if (e.key === 'Enter') {\n      this.props.handleTimecodeClick(e);\n    }\n  };\n\n  handleKeyDownWords = e => {\n    if (e.key === 'Enter') {\n      this.props.handleWordClick(e);\n    }\n  };\n\n  // generateParagraphsEl = () => {\n  render() {\n    let wordsElements;\n    let paragraphDisplayPreference = {};\n    // const props = this.props;\n    // const transcriptId = props.transcriptId;\n    // const annotations = props.annotations;\n\n    /**\n     *  Group words into paragraphs\n     *\n     * TODO: Breaking down words in paragraphs could be done\n     * client side or server side?\n     * using paragraphs attribute of transcript json\n     */\n    // console.log('this.props.transcriptJson.words', this.props.transcriptJson.words);\n    // console.log('this.props.transcriptJson.paragraphs', this.props.transcriptJson.paragraphs);\n\n    const paragraphsWithWordsSpeakerText = groupWordsInParagraphsBySpeakers(\n      this.props.transcriptJson.words,\n      this.props.transcriptJson.paragraphs\n    );\n    // console.log('paragraphsWithWordsSpeakerText', paragraphsWithWordsSpeakerText);\n\n    const paragraphWithWordsSpeakersAndAnnotations = addAnnotationsToWordsInParagraphs(paragraphsWithWordsSpeakerText, this.props.annotations);\n    /**\n     * Loop over paragraphs\n     */\n    const textResult = paragraphWithWordsSpeakersAndAnnotations.map((paragraph, index) => {\n      const annotationInCurrentParagraph = findAnnotationInParagraph(this.props.annotations, paragraph.words);\n      /* Paragraph text for data attribute for searches, without punctuation */\n      const paragraphTextWithoutPunctuation = removePunctuation(paragraph.text);\n      const isTextSearch = paragraphTextWithoutPunctuation.includes(this.props.searchString.toLowerCase());\n      let isSpeakerSearch = false;\n      if (this.props.selectedOptionSpeakerSearch.length !== 0) {\n        // checks speaker against list of speakers in search,\n        // TODO: Downcase comparison or use speaker ID?\n        if (this.props.selectedOptionSpeakerSearch.find((spk) => {return spk.label === paragraph.speaker; })) {\n          isSpeakerSearch = true;\n        }\n      }\n      else {\n        isSpeakerSearch = true;\n      }\n\n      let isLabelSearch = false;\n      if (this.props.selectedOptionLabelSearch.length !== 0) {\n        // checks label against list of speakers in search,\n        if (this.props.selectedOptionLabelSearch.find((lb) => {return lb.id === annotationInCurrentParagraph.labelId; })) {\n          isLabelSearch = true;\n        }\n      }\n      else {\n        isLabelSearch = true;\n      }\n      paragraphDisplayPreference = computeParagraphDisplayPreference(isTextSearch, isSpeakerSearch, isLabelSearch);\n\n      /**\n       * find Annotation In Paragraph/words\n       */\n      wordsElements = paragraph.words.map((word, index) => {\n        let result;\n        const wordEl = (<Word\n          transcriptId={ this.props.transcriptId }\n          speaker={ paragraph.speaker }\n          key={ 'key--' + index }\n          word={ word }\n          handleKeyDownWords={ e => {\n            return e.key === 'Enter' ? this.props.handleWordClick(e) : null;\n          } }\n        />);\n\n        if (word.annotation) {\n          // const { annotation } = word;\n          result = <AnnotationOverlayTrigger\n            key={ 'key----' + index }\n            words={ wordEl }\n            labelsOptions={ this.props.labelsOptions }\n            annotationLabelId={ word.annotation.labelId }\n            annotationId={ word.annotation.id }\n            annotationNote={ word.annotation.note }\n            handleDeleteAnnotation={ this.props.handleDeleteAnnotation }\n            handleEditAnnotation={ this.props.handleEditAnnotation }\n          />;\n        }\n        else {\n          result = wordEl;\n        }\n\n        return result;\n      });\n\n      /**\n       * Create a Paragraph containing words, with or without annotation (overlay)\n       */\n      return (\n        <Paragraph\n          showParagraphsMatchingSearch={ this.props.showParagraphsMatchingSearch }\n          paragraphDisplayPreference={ paragraphDisplayPreference }\n          key={ 'key------' + index }\n          paragraphTextWithoutPunctuation={ paragraphTextWithoutPunctuation }\n          speakerName={ paragraph.speaker }\n          paragraph={ paragraph.words }\n          handleKeyDownTimecodes={ e => {\n            return e.key === 'Enter' ? this.props.handleTimecodeClick(e) : null;\n          } }\n          wordsElements={ wordsElements }\n        />\n      );\n    });\n\n    return (\n      <>\n        {textResult}\n      </>\n    );\n  }\n\n}\n\nexport default Paragraphs;\n","/**\n * List of CSS colors that have letters names as well as hex\n * originally from https://github.com/bahamas10/css-color-names#readme\n * TODO: filter list for colors that meets accessibility requirements and are bright enough\n * TODO: find a way to order this colours, by hue?\n */\nconst csscolors = {\n  'yellow': '#ffff00',\n  // '#ffeb3b': '#ffeb3b',\n  'greenyellow': '#adff2f',\n  'deepskyblue': '#00bfff',\n  'deeppink': '#ff1493',\n  // 'darkorange': '#ff8c00',\n  // 'aliceblue': '#f0f8ff',\n  // 'antiquewhite': '#faebd7',\n  'aqua': '#00ffff',\n  // 'azure': '#f0ffff',\n  // 'beige': '#f5f5dc',\n  // 'bisque': '#ffe4c4',\n  'black': '#000000',\n  // 'blanchedalmond': '#ffebcd',\n  'blueviolet': '#8a2be2',\n  'brown': '#a52a2a',\n  'burlywood': '#deb887',\n  'cadetblue': '#5f9ea0',\n  'chocolate': '#d2691e',\n  'coral': '#ff7f50',\n  // 'cornflowerblue': '#6495ed',\n  // 'cornsilk': '#fff8dc',\n  'crimson': '#dc143c',\n  // 'cyan': '#00ffff',\n  'darkblue': '#00008b',\n  'darkcyan': '#008b8b',\n  'darkgoldenrod': '#b8860b',\n  'darkgray': '#a9a9a9',\n  'darkgreen': '#006400',\n  // 'darkgrey': '#a9a9a9',\n  'darkkhaki': '#bdb76b',\n  'darkmagenta': '#8b008b',\n  'darkolivegreen': '#556b2f',\n  'darkorchid': '#9932cc',\n  'darkred': '#8b0000',\n  'darksalmon': '#e9967a',\n  'darkseagreen': '#8fbc8f',\n  'darkslateblue': '#483d8b',\n  'darkslategray': '#2f4f4f',\n  'darkslategrey': '#2f4f4f',\n  'darkturquoise': '#00ced1',\n  'darkviolet': '#9400d3',\n  'blue': '#0000ff',\n  'dimgray': '#696969',\n  'dimgrey': '#696969',\n  'dodgerblue': '#1e90ff',\n  'firebrick': '#b22222',\n  // 'floralwhite': '#fffaf0',\n  'forestgreen': '#228b22',\n  'fuchsia': '#ff00ff',\n  'gainsboro': '#dcdcdc',\n  // 'ghostwhite': '#f8f8ff',\n  'goldenrod': '#daa520',\n  'gold': '#ffd700',\n  'gray': '#808080',\n  'green': '#008000',\n  'grey': '#808080',\n  'honeydew': '#f0fff0',\n  'hotpink': '#ff69b4',\n  'indianred': '#cd5c5c',\n  'indigo': '#4b0082',\n  'ivory': '#fffff0',\n  'khaki': '#f0e68c',\n  'lavenderblush': '#fff0f5',\n  'lavender': '#e6e6fa',\n  'lawngreen': '#7cfc00',\n  'lemonchiffon': '#fffacd',\n  'lightblue': '#add8e6',\n  'lightcoral': '#f08080',\n  // 'lightcyan': '#e0ffff',\n  'lightgoldenrodyellow': '#fafad2',\n  'lightgray': '#d3d3d3',\n  'lightgreen': '#90ee90',\n  'lightgrey': '#d3d3d3',\n  'lightpink': '#ffb6c1',\n  'lightsalmon': '#ffa07a',\n  'lightseagreen': '#20b2aa',\n  'lightskyblue': '#87cefa',\n  'lightslategray': '#778899',\n  'lightslategrey': '#778899',\n  'lightsteelblue': '#b0c4de',\n  'lightyellow': '#ffffe0',\n  'lime': '#00ff00',\n  'chartreuse': '#7fff00',\n  'limegreen': '#32cd32',\n  'linen': '#faf0e6',\n  'magenta': '#ff00ff',\n  'maroon': '#800000',\n  'mediumblue': '#0000cd',\n  'mediumorchid': '#ba55d3',\n  'mediumpurple': '#9370db',\n  'mediumseagreen': '#3cb371',\n  'mediumslateblue': '#7b68ee',\n  'mediumspringgreen': '#00fa9a',\n  'mediumturquoise': '#48d1cc',\n  'mediumvioletred': '#c71585',\n  'midnightblue': '#191970',\n  'mintcream': '#f5fffa',\n  'mistyrose': '#ffe4e1',\n  'moccasin': '#ffe4b5',\n  // 'navajowhite': '#ffdead',\n  'navy': '#000080',\n  'oldlace': '#fdf5e6',\n  'olive': '#808000',\n  'olivedrab': '#6b8e23',\n  'orange': '#ffa500',\n  'orangered': '#ff4500',\n  'orchid': '#da70d6',\n  'palegoldenrod': '#eee8aa',\n  'palegreen': '#98fb98',\n  'paleturquoise': '#afeeee',\n  'palevioletred': '#db7093',\n  'papayawhip': '#ffefd5',\n  'peachpuff': '#ffdab9',\n  'peru': '#cd853f',\n  'pink': '#ffc0cb',\n  'plum': '#dda0dd',\n  'powderblue': '#b0e0e6',\n  'purple': '#800080',\n  'rebeccapurple': '#663399',\n  'red': '#ff0000',\n  'rosybrown': '#bc8f8f',\n  'royalblue': '#4169e1',\n  'saddlebrown': '#8b4513',\n  'salmon': '#fa8072',\n  'sandybrown': '#f4a460',\n  'seagreen': '#2e8b57',\n  'seashell': '#fff5ee',\n  'sienna': '#a0522d',\n  'silver': '#c0c0c0',\n  'skyblue': '#87ceeb',\n  'slateblue': '#6a5acd',\n  'slategray': '#708090',\n  'slategrey': '#708090',\n  'snow': '#fffafa',\n  'springgreen': '#00ff7f',\n  'steelblue': '#4682b4',\n  'tan': '#d2b48c',\n  'teal': '#008080',\n  'thistle': '#d8bfd8',\n  'tomato': '#ff6347',\n  'turquoise': '#40e0d0',\n  'violet': '#ee82ee',\n  'wheat': '#f5deb3',\n  // 'white': '#ffffff',\n  // 'whitesmoke': '#f5f5f5',\n  'yellowgreen': '#9acd32',\n  'aquamarine': '#7fffd4',\n  'mediumaquamarine': '#66cdaa'\n};\n\n/**\n * An array list of css colors\n */\nconst colorNamesList = Object.freeze(Object.keys(csscolors)\n  .splice(0, 15) // show only first 20 colours\n);\n\n/**\n * returns\n * {value: \"aliceblue\", label: \"aliceblue\", color: \"#f0f8ff\"}\n */\n// const cssColorsValueLabelColor = () => {\nconst cssColorsList = [];\nfor (var key in csscolors) {\n  cssColorsList.push({\n    value: key,\n    label:key,\n    color: csscolors[key]\n  });\n}\n// return cssColorsList;\n// };\n// const cssColorsValueLabelColor = Object.freeze(cssColorsList);\n\n/**\n * Random color\n */\nlet counter = -1;\nconst numberOfColor = colorNamesList.length;\nconst randomColor = () => {\n  if (counter < numberOfColor) {\n    counter += 1;\n  }\n  else {\n    counter = 0;\n  }\n\n  return colorNamesList[counter];\n};\n\nexport {\n  colorNamesList,\n  // cssColorsValueLabelColor,\n  randomColor\n};\n\nexport default csscolors;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faSyncAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { GithubPicker } from 'react-color';\nimport { colorNamesList, randomColor } from './css-color-names.js';\nimport chroma from 'chroma-js';\n\nclass LabelForm extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      color: this.props.color,\n      label: this.props.label,\n      description: this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleRandomiseColor =() => {\n    this.setState({ color: randomColor() });\n  }\n\n  handleColorPickerChangeComplete = (color) => {\n    this.setState({ color: chroma(color.hex ).name() });\n  }\n\n  handleManualColorChange = (e) => {\n    if (e && e.target && e.target.value) {\n      const colorValue = e.target.value;\n      this.setState({ color: chroma.valid(colorValue) ? chroma(colorValue).name() : colorValue });\n    }\n    else if (e && e.target && e.target.value === '') {\n      this.setState({ color: '' });\n    }\n  }\n\n  handleColorSelectChange = color => {\n    this.setState({ color: color.color });\n  };\n\n  handleSave = () => {\n    // checks color in color picker input is valid - can be color name in letters or hex\n    if (chroma.valid(this.state.color)) {\n      // checks label name is not empty\n      if ( this.state.label !== '') {\n        this.props.onLabelSaved({\n          value: this.state.color,\n          label: this.state.label,\n          color: this.state.color,\n          description: this.state.description,\n          id: this.state.labelId\n        });\n\n        this.props.handleClose();\n      }\n      else {\n        alert('add a name to the label to be able to save');\n      }\n    }\n    else {\n      alert('choose a valid color');\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Form>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Label Name </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label name\"\n              defaultValue={ this.state.label }\n              onInput={ (e) => {this.setState({ label: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Required label name\n            </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Label Description</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter label description\"\n              defaultValue={ this.state.description }\n              as=\"textarea\" rows=\"3\"\n              onInput={ (e) => { this.setState({ description: e.target.value });} }\n            />\n            <Form.Text className=\"text-muted\">\n                    Optional label description\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formGroupPassword\">\n            <Form.Label>Color</Form.Label>\n            <Row>\n              <Col xs={ 2 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n                <Button onClick={ this.handleRandomiseColor } variant=\"light\" size=\"sm\">\n                  <FontAwesomeIcon icon={ faSyncAlt } />\n                </Button>\n              </Col>\n              <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }>\n                <Form.Control\n                  value={ this.state.color }\n                  type=\"text\"\n                  placeholder=\"#\"\n                  onChange={ this.handleManualColorChange }\n                />\n              </Col>\n              <Col xs={ 2 } sm={ 2 } md={ 2 } lg={ 2 } xl={ 2 }\n                style={ {\n                  backgroundColor: this.state.color,\n                  border: 'solid',\n                  borderWidth:'0.01em',\n                  borderColor: 'grey',\n                  padding: '0'\n                } }>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 } >\n                <Form.Text className=\"text-muted\">\n                   To pick a color you can chose one at random, pick one form the list below, or type the name or hex code above.\n                </Form.Text>\n                <GithubPicker\n                  width={ '100%' }\n                  color={ this.state.color }\n                  triangle={ 'hide' }\n                  onChangeComplete={ this.handleColorPickerChangeComplete }\n                  //   https://casesandberg.github.io/react-color/\n                  colors={ colorNamesList }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <Button variant=\"primary\" onClick={ this.handleSave } >\n              Save\n          </Button>\n        </Form>\n      </>\n    );\n  }\n}\nexport default LabelForm;","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag\n} from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport LabelForm from './LabelForm.js';\n\nclass LabelModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      show: false,\n      color: this.props.color,\n      label: this.props.label,\n      description:  this.props.description,\n      labelId: this.props.labelId\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      show: false,\n      // color: randomColor(),\n      // label: '',\n      // description: ''\n    });\n    // Clear all input fields in form?\n  }\n\n  handleShow = () => {\n    this.setState({ show: true });\n  }\n\n  render() {\n    return (\n      <>\n        <Button variant=\"link\" size=\"sm\" onClick={ this.handleShow } block>\n          {this.props.openBtn}\n        </Button>\n        <Modal show={ this.state.show } onHide={ this.handleClose }>\n          <Modal.Header closeButton>\n            <Modal.Title><FontAwesomeIcon icon={ faTag } />  Label </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <LabelForm\n              onLabelSaved={ this.props.onLabelSaved }\n              label={ this.props.label }\n              description={ this.props.description }\n              color={ this.props.color }\n              labelId={ this.props.labelId }\n              handleClose={ this.handleClose }\n            />\n          </Modal.Body>\n        </Modal>\n      </>\n    );\n  }\n}\nexport default LabelModal;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTag,\n  faTags,\n  faTimes,\n  faPen,\n  faCog\n} from '@fortawesome/free-solid-svg-icons';\n\nimport LabelModal from './LabelModal.js';\nimport { randomColor } from './css-color-names.js';\n\nclass LabelsList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // isLabelsListOpen: false,\n      isLabelmodalShown: false\n    };\n  }\n\n  removeLabel = (id, e) => {\n    // eslint-disable-next-line no-restricted-globals\n    const response = confirm('Click OK to delete the label, Cancel if you changed your mind');\n    if (response === true) {\n      this.props.onLabelDelete(id);\n    } else {\n      alert('Your label was not deleted');\n    }\n  }\n\n  // TODO: See if CreateNewLabelModal can be refactored to accomodate for edit label\n  // if not then separate model to achieve same\n  // https://stackoverflow.com/questions/43335452/pass-item-data-to-a-react-modal\n  editLabel = (id, e) => {\n    const labelToEdit = this.props.labelsOptions.filter((label) => {\n      return label.id === id;\n    });\n    // this.props.onLabelsUpdate(newLabelsOptions);\n    console.log('labelToEdit', labelToEdit);\n    // alert('this functionality has not been implemented yet');\n  }\n  onLabelSaved = (newLabel) => {\n    // if updated - labelId is diff from null\n    if (newLabel.id) {\n      this.props.onLabelUpdate(newLabel);\n    }\n    // if created\n    else {\n      this.props.onLabelCreate(newLabel);\n    }\n  }\n\n  showLabelModal = () => {\n    console.log(this.state.isLabelmodalShown);\n    this.setState((state) => {\n      return {\n        isLabelmodalShown: !state.isLabelmodalShown\n      };\n    });\n  }\n\n  render() {\n    // TODO: add CSS to label and description to constrain width?\n    // move edit and X to the rigth\n    let labelsListOptions;\n    // Handle edge case if there's no labels\n    if (this.props.labelsOptions) {\n\n      labelsListOptions = this.props.labelsOptions.map((label, index) => {\n        return (<ListGroup.Item style={ { width: '100%' } } key={ 'label_' + index }>\n          <Row>\n            {/* Col space for the label color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              style={ { backgroundColor: label.color } }\n              title={ label.label }\n            >\n            </Col>\n            <Col xs={ 6 } sm={ 6 } md={ 6 } lg={ 6 } xl={ 6 }\n            // className=\"text-truncate\"\n              title={ label.label }\n            >\n              {label.label}\n            </Col>\n\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              {/* Edit label */}\n\n              {label.label.toLowerCase() !== 'default' ?\n                <LabelModal\n                  color={ label.color }\n                  label={ label.label }\n                  description={ label.description }\n                  labelId={ label.id }\n                  show={ this.state.isLabelmodalShown }\n                  onLabelSaved={ this.onLabelSaved }\n                  openBtn={ <span> <FontAwesomeIcon icon={ faPen } /></span> }\n                /> : <Button title={ 'edit label' } variant=\"link\" size=\"sm\" disabled>\n                  <FontAwesomeIcon icon={ faPen } /> </Button> }\n            </Col>\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }>\n              <Button title={ 'delete label' } variant=\"link\" size=\"sm\"\n                onClick={ (e) => {this.removeLabel(label.id, e);} }\n                disabled={ label.label.toLowerCase() === 'default' ? true : false }>\n                <FontAwesomeIcon icon={ faTimes } />\n              </Button>\n            </Col>\n\n          </Row>\n          <Row>\n            {/* Spacing to align title and color */}\n            <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 }\n              className=\"text-truncate\"\n              title={ label.label }>\n            </Col>\n            <Col xs={ 10 } sm={ 10 } md={ 10 } lg={ 10 } xl={ 10 }>\n              <Form.Text\n                // className={ [ 'text-muted', 'text-truncate' ].join(' ') }\n                title={ label.description }>\n                {label.description}\n              </Form.Text>\n            </Col>\n          </Row>\n        </ListGroup.Item>);\n      });\n    }\n\n    const labelsList = (<ListGroup style={ { height: '50vh', width: '20vw', overflowY: 'scroll', overflowX: 'hidden' } }>{labelsListOptions}\n    </ListGroup>);\n    // const labelsList = labelsListOptions;\n\n    return (<>\n\n      {this.props.isLabelsListOpen ? <>\n        {/* <br/> */}\n        <Card>\n          <Card.Header>\n            <FontAwesomeIcon icon={ faTags } /> <FontAwesomeIcon icon={ faCog } /> Labels\n          </Card.Header>\n          { labelsList }\n          <Card.Footer className=\"text-muted\">\n            <LabelModal\n              color={ randomColor() }\n              label={ '' }\n              description={ '' }\n              labelId={ null }\n              show={ this.state.isLabelmodalShown }\n              onLabelSaved={ this.onLabelSaved }\n              openBtn={ <Button variant=\"outline-secondary\" block><FontAwesomeIcon icon={ faTag } /> Create New Label</Button> }\n            />\n          </Card.Footer>\n        </Card>\n      </> : ''}\n\n    </>\n    );\n  }\n}\n\nexport default LabelsList;","/**\n * custom \"debounce\" function\n * only calls the last time a function is invoked within a time interval.\n * Example use cases, are when triggering an event listener on an input field\n * such as for a search\n * @param {function} cb - is the function you want to invoke only once\n * @param {number} duration - is in milliseconds\n * @return after time interval it invokes cb\n */\nconst onlyCallOnce = (cb, duration) => {\n  let timer;\n\n  return function() {\n    const args = arguments;\n    clearTimeout(timer);\n    timer = setTimeout(function() {\n      cb.apply(null, args);\n    }, duration);\n  };\n};\n\nexport default onlyCallOnce;","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getTimeFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end)\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end)\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getTimeFromUserWordsSelection;","/* eslint-disable no-undef */\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n// import Card from 'react-bootstrap/Card';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faHighlighter,\n  faCog,\n} from '@fortawesome/free-solid-svg-icons';\nimport SearchBar from './SearchBar/index.js';\nimport Paragraphs from './Paragraphs/index.js';\nimport LabelsList from './LabelsList/index.js';\nimport onlyCallOnce from '../../../../Util/only-call-once/index.js';\nimport getTimeFromUserWordsSelection from './get-user-selection.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\n// import Paragraph from './Paragraph.js';\n\n/**\n * Makes list of unique speakers\n * from transcript.paragraphs list\n * to be used in react-select component\n *\n * TODO: decide if to move server side, and return unique list of speaker to client\n * Or if to move to separate file as util, perhaps generalise as reusable funciton?\n *\n * https://codeburst.io/javascript-array-distinct-5edc93501dc4\n */\nfunction makeListOfUniqueSpeakers(array) {\n  const result = [];\n  const map = new Map();\n  for (const item of array) {\n    if (!map.has(item.speaker)) {\n      map.set(item.speaker, true); // set any value to Map\n      result.push({\n        value: item.speaker,\n        label: item.speaker\n      });\n    }\n  }\n\n  return result;\n}\n\nclass Transcript extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n    this.state = {\n      // isVideoTranscriptPreviewShow: false,\n      searchString: '',\n      showParagraphsMatchingSearch: false,\n      selectedOptionLabelSearch: false,\n      selectedOptionSpeakerSearch: [],\n      sentenceToSearchCSS: '',\n      sentenceToSearchCSSInHighlights: '',\n      annotations: [],\n      isLabelsListOpen: true,\n      labelsOptions: this.props.labelsOptions,\n      currentTime: 0\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getAllAnnotations(this.props.projectId, this.props.transcriptId)\n      .then(json => {\n        // console.log(' ApiWrapper.getAllAnnotations', json);\n        this.setState({\n          annotations: json.annotations\n        });\n      });\n  }\n\n  onLabelCreate = (newLabel) => {\n    ApiWrapper.createLabel(this.props.projectId, newLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelUpdate = (updatedLabel) => {\n    console.log('updatedLabel', updatedLabel);\n    // TODO: PUT with API Wrapper\n    ApiWrapper.updateLabel(this.props.projectId, updatedLabel.id, updatedLabel)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  onLabelDelete = (labelIid) => {\n    ApiWrapper.deleteLabel(this.props.projectId, labelIid)\n    // TODO: add error handling\n      .then(json => {\n        this.setState({\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  // functions repeadrted from TranscriptAnnotate/index.js\n  handleTimecodeClick= e => {\n    if (e.target.classList.contains('timecode')) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleWordClick = e => {\n    if (e.target.className === 'words' ) {\n      const wordEl = e.target;\n      this.videoRef.current.currentTime = wordEl.dataset.start;\n      this.videoRef.current.play();\n    }\n  };\n\n  handleShowParagraphsMatchingSearch = () => {\n    this.setState((state) => {\n      return { showParagraphsMatchingSearch: !state.showParagraphsMatchingSearch };\n    });\n  }\n\n  handleLabelsSearchChange = (selectedOptionLabelSearch) => {\n    this.setState({\n      selectedOptionLabelSearch\n    });\n  }\n\n  handleSpeakersSearchChange = (selectedOptionSpeakerSearch) => {\n    this.setState({\n      selectedOptionSpeakerSearch\n    });\n  }\n\n  handleSearch = (e, searchPreferences) => {\n    // TODO: debounce to optimise\n    if (e.target.value !== '') {\n      const searchString = e.target.value;\n      this.setState({ searchString: searchString.toLowerCase() });\n      //  \"debounce\" to optimise\n      onlyCallOnce(this.highlightWords (searchString), 500);\n    }\n    // if empty string reset\n    else if (e.target.value === '') {\n      this.setState({\n        sentenceToSearchCSS: '',\n        searchString: ''\n      });\n    }\n  };\n\n  highlightWords = searchString => {\n    const listOfSearchWords = searchString.toLowerCase().trim().split(' ');\n    const pCSS = `.paragraph[data-paragraph-text*=\"${ listOfSearchWords.join(' ') }\"]`;\n\n    const wordsToSearchCSS = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div > span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    // Need to add an extra span to search annotation hilights\n    // TODO: refactor to make more DRY\n    const wordsToSearchCSSInHighlights = listOfSearchWords.map((searchWord, index) => {\n      let res = `${ pCSS } > div  > span >span.words[data-text=\"${ searchWord\n        .toLowerCase()\n        .trim() }\"]`;\n      if (index < listOfSearchWords.length - 1) {\n        res += ', ';\n      }\n\n      return res;\n    });\n    this.setState({\n      sentenceToSearchCSS: wordsToSearchCSS.join(' '),\n      sentenceToSearchCSSInHighlights: wordsToSearchCSSInHighlights.join(' ')\n    });\n  };\n\n  handleCreateAnnotation = (e) => {\n    const element = e.target;\n    // window.element = element;\n    const selection = getTimeFromUserWordsSelection();\n    if (selection) {\n      const { annotations } = this.state;\n      selection.labelId = element.dataset.labelId;\n      selection.note = '';\n      const newAnnotation = selection;\n      console.log('newAnnotation', newAnnotation);\n      ApiWrapper.createAnnotation(this.props.projectId, this.props.transcriptId, newAnnotation)\n        .then(json => {\n          const newAnnotationFromServer = json.annotation;\n          console.log('newAnnotationFromServer', newAnnotationFromServer);\n          // console.log('handleCreateAnnotation', newAnnotation);\n          // this.setState({\n          //   labelsOptions: json.labels\n          // });\n          const newAnnotationsSet = JSON.parse(JSON.stringify(annotations));\n          // newAnnotation.id = json.annotation.id;\n          // newAnnotationsList.push(newAnnotation);\n          newAnnotationsSet.push(newAnnotationFromServer);\n\n          this.setState( { annotations: newAnnotationsSet });\n        });\n\n    }\n    else {\n      alert('Select some text in the transcript to highlight ');\n    }\n  }\n\n  handleDeleteAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationsSet = annotations.filter((annotation) => {\n      return annotation.id !== annotationId;\n    });\n\n    const deepCloneOfNestedObjectNewAnnotationsSet = JSON.parse(JSON.stringify(newAnnotationsSet));\n    ApiWrapper.deleteAnnotation(this.props.projectId, this.props.transcriptId, annotationId)\n      .then(json => {\n        this.setState( { annotations: deepCloneOfNestedObjectNewAnnotationsSet });\n      });\n  }\n\n  // TODO: add server side via ApiWrapper\n  // similar to handleDeleteAnnotation filter to find annotation then replace text\n  handleEditAnnotation = (annotationId) => {\n    const { annotations } = this.state;\n    const newAnnotationToEdit = annotations.find((annotation) => {\n      return annotation.id === annotationId;\n    });\n    const newNote = prompt('Edit the text note of the annotation', newAnnotationToEdit.note);\n    if (newNote) {\n      newAnnotationToEdit.note = newNote;\n      ApiWrapper.updateAnnotation(this.state.projectId, this.props.transcriptId, annotationId, newAnnotationToEdit)\n        .then(json => {\n          const newAnnotation = json.annotation;\n          // updating annotations client side by removing updating one\n          // and re-adding to array\n          // could be refactored using `findindex`\n          const newAnnotationsSet = annotations.filter((annotation) => {\n            return annotation.id !== annotationId;\n          });\n          newAnnotationsSet.push(newAnnotation);\n          this.setState( { annotations: newAnnotationsSet });\n        });\n    }\n    else {\n      alert('all good nothing changed');\n    }\n  }\n\n  showLabelsReference = () => {\n    // if (this.state.isShowLabelsReference) {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: false\n    //   // });\n    // }\n    // else {\n    //   this.props.showLabelsReference();\n    //   // this.setState({\n    //   //   isShowLabelsReference: true\n    //   // });\n    // }\n  }\n\n  getCurrentWordTime = () => {\n    const { words } = this.props.transcript;\n\n    const currentTime = this.state.currentTime ;\n    // if (this.videoRef && this.videoRef.current && this.videoRef.current.currentTime) {\n    //   currentTime = this.videoRef.current.currentTime;\n    // }\n    const currentWordTime = words.find((word) => {\n      if (currentTime >= word.start && currentTime <= word.end ) {\n        return word.start;\n      }\n    });\n    if (currentWordTime !== undefined) {\n      return currentWordTime[0];\n    }\n\n    return 0;\n\n  }\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const currentWordTime = this.state.currentTime;\n    const unplayedColor = 'grey';\n\n    // Time to the nearest half second\n    const time = Math.round(currentWordTime * 4.0) / 4.0;\n    const highlights = (\n      <style scoped>\n        {`span.words[data-prev-times~=\"${ Math.floor(time) }\"][data-transcript-id=\"${ this.props.transcriptId }\"] { color: ${ unplayedColor } }`}\n      </style>\n    );\n\n    return (\n      <>\n\n        {/* <div style={ {\n          display:\n          // this.state.isShowLabelsReference ?\n           'block'\n          //  : 'none'\n          ,\n          position: 'absolute',\n          top: '0px',\n          left: '0px',\n          width: '5vw',\n          height: '100vh',\n          backgroundColor: 'black'\n        } }>\n            Test\n        </div> */}\n        <style scoped>\n          {/* This is to style of the Paragraph component programmatically */}\n          {`${ this.state.sentenceToSearchCSS } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n          {`${ this.state.sentenceToSearchCSSInHighlights } { background-color: ${ 'yellow' }; text-shadow: 0 0 0.01px black }`}\n        </style>\n\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Transcript Title: ${ this.props.title }` }\n        >\n          {/* <FontAwesomeIcon icon={ this.state.isVideoTranscriptPreviewShow === 'none' ? faEye : faEyeSlash } onClick={ this.handleVideoTranscriptPreviewDisplay }/> */}\n          {this.props.title}\n        </h2>\n\n        <Card>\n          <Card.Header>\n            {/* // Preview video - HTML5 Video element or  react-transcript-editor/VideoPlayer\n        // Media control - HTML5 default or react-transcript-editor/MediaPlayer\n        // Search Bar - from TranscriptAnnotate component\n        // Text -  from TranscriptAnnotate component */}\n            <video\n              src={ this.props.url }\n              ref={ this.videoRef }\n              onTimeUpdate={ (e) => {this.setState({ currentTime: e.target.currentTime });} }\n              // onTimeUpdate={ (e) => {console.log(e.target.currentTime); } }\n              style={ {\n                // display: this.state.isVideoTranscriptPreviewShow,\n                width: '100%',\n                height:'10em',\n                backgroundColor: 'black'\n              } }\n              controls/>\n          </Card.Header>\n          <Card.Header>\n            <Row>\n              <Col xs={ 12 } sm={ 12 } md={ 12 } lg={ 12 } xl={ 12 }>\n                <ButtonGroup style={ { width: '100%' } }>\n                  <Dropdown as={ ButtonGroup } style={ { width: '100%' } } >\n                    <Button variant=\"outline-secondary\" data-label-id={ 'default' } onClick={ this.handleCreateAnnotation } >\n                      <FontAwesomeIcon icon={ faHighlighter } flip=\"horizontal\"/> Highlight\n                      {/* */}\n                    </Button>\n                    <Dropdown.Toggle split variant=\"outline-secondary\" data-lable-id={ 0 }/>\n                    <Dropdown.Menu onClick={ this.handleCreateAnnotation }>\n                      {this.state.labelsOptions && this.state.labelsOptions.map((label) => {\n                        return (\n                          <Dropdown.Item key={ `label_id_${ label.id }` } data-label-id={ label.id } >\n                            <Row data-label-id={ label.id }>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } style={ { backgroundColor: label.color } } data-label-id={ label.id }></Col>\n                              <Col xs={ 1 } sm={ 1 } md={ 1 } lg={ 1 } xl={ 1 } data-label-id={ label.id }>{label.label}</Col>\n                            </Row>\n                          </Dropdown.Item>\n                        );\n                      })}\n                    </Dropdown.Menu>\n                  </Dropdown>\n\n                  <DropdownButton\n                    drop={ 'right' }\n                    as={ ButtonGroup }\n                    title={ <FontAwesomeIcon icon={ faCog }/> }\n                    id=\"bg-nested-dropdown\"\n                    variant='outline-secondary'\n                  >\n                    <LabelsList\n                      isLabelsListOpen={ this.state.isLabelsListOpen }\n                      labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n                      onLabelUpdate={ this.onLabelUpdate }\n                      onLabelCreate={ this.onLabelCreate }\n                      onLabelDelete={ this.onLabelDelete }\n                    />\n                  </DropdownButton>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </Card.Header>\n          <SearchBar\n            labelsOptions={ this.state.labelsOptions }\n            speakersOptions={ this.props.transcript ? makeListOfUniqueSpeakers(this.props.transcript.paragraphs) : null }\n            handleSearch={ this.handleSearch }\n            handleLabelsSearchChange={ this.handleLabelsSearchChange }\n            handleSpeakersSearchChange={ this.handleSpeakersSearchChange }\n            handleShowParagraphsMatchingSearch={ this.handleShowParagraphsMatchingSearch }\n          />\n\n          <Card.Body\n            onDoubleClick={ this.handleWordClick }\n            onClick={ this.handleTimecodeClick }\n            style={ { height: '60vh', overflow: 'scroll' } }\n          >\n\n            {highlights}\n\n            {this.props.transcript &&\n            <Paragraphs\n              labelsOptions={ this.state.labelsOptions && this.state.labelsOptions }\n              annotations={ this.state.annotations ? this.state.annotations : [] }\n              transcriptJson={ this.props.transcript }\n              searchString={ this.state.searchString ? this.state.searchString : '' }\n              showParagraphsMatchingSearch={ this.state.showParagraphsMatchingSearch }\n              selectedOptionLabelSearch={ this.state.selectedOptionLabelSearch ? this.state.selectedOptionLabelSearch : [] }\n              selectedOptionSpeakerSearch={ this.state.selectedOptionSpeakerSearch ? this.state.selectedOptionSpeakerSearch : [] }\n              transcriptId={ this.props.transcriptId }\n              handleTimecodeClick={ this.handleTimecodeClick }\n              handleWordClick={ this.handleWordClick }\n              handleDeleteAnnotation={ this.handleDeleteAnnotation }\n              handleEditAnnotation={ this.handleEditAnnotation }\n            />}\n\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default Transcript;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\nimport Tab from 'react-bootstrap/Tab';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faClock,\n  faExclamationTriangle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport Transcript from './Transcript.js';\n\nclass Transcripts extends Component {\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    const transcriptsElNav = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Nav.Item key={ transcript.id }>\n          <Nav.Link\n            disabled={ transcript.status !== 'done' ? true : false }\n            // title={ transcript.status !== 'done' ? transcript.status : transcript.title }\n            eventKey={ transcript.id }\n\n          >\n            { transcript.status === 'in-progress' ? <FontAwesomeIcon icon={ faClock }/> : '' }\n            { transcript.status === 'error' ? <FontAwesomeIcon icon={ faExclamationTriangle }/> : '' }\n            { `  ${ transcript.transcriptTitle }` }\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n    const transcriptsElTab = this.props.transcripts.map((transcript, index) => {\n      return (\n        <Tab.Pane key={ transcript.id } eventKey={ transcript.id } >\n          <Transcript\n            projectId={ this.props.projectId }\n            transcriptId={ transcript.id }\n            labelsOptions={ this.props.labelsOptions }\n            title={ transcript.transcriptTitle }\n            transcript={ transcript.transcript }\n            url={ transcript.url }\n          />\n        </Tab.Pane>\n      );\n    });\n\n    return (\n      <>\n        <Tab.Container\n          defaultActiveKey={ this.props.transcripts[0] ? this.props.transcripts[0].id : 'first' }\n        >\n          <Row>\n            <Col sm={ 3 }>\n              <h2\n                className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n                // className={ 'text-truncate' }\n                title={ 'Transcripts' }\n              >\n                Transcripts</h2>\n              <hr/>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                { transcriptsElNav }\n              </Nav>\n            </Col>\n            <Col sm={ 9 }>\n              <Tab.Content>\n                { transcriptsElTab }\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n\n      </>\n    );\n  }\n}\n\nexport default Transcripts;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport VideoContext from 'videocontext';\n\nclass PaperCutsPlayerViewer extends React.PureComponent {\n  constructor(props) {\n    const {\n      width = 640,\n      height = 360,\n      playlist = [],\n    } = props;\n\n    super(props);\n\n    this.playlist = playlist;\n    this.canvasRef = React.createRef();\n    this.canvas = (<canvas\n      ref={ this.canvasRef }\n      width={ width }\n      height={ height }\n    />);\n  }\n\n  componentDidMount() {\n    this.videoContext = new VideoContext(\n      this.canvasRef.current,\n      (err) => console.error(\n        'There was problem instantiating the Video Context in Paper Cuts Player Viewer component',\n        err,\n      )\n    );\n    this.loadPlaylist();\n  }\n\n  loadPlaylist = () => {\n    this.playlist.forEach(({ type, sourceStart, start, duration, src }) => {\n      const node = this.videoContext[type](src, sourceStart);\n      node.startAt(start);\n      node.stopAt(start + duration);\n      node.connect(this.videoContext.destination);\n    });\n  }\n\n  render() {\n    return (this.canvas);\n  }\n}\n\nexport default PaperCutsPlayerViewer;\n","/* eslint-disable template-curly-spacing */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport styles from './VideoContextProgressBar.module.css';\n\nclass VideoContextProgressBar extends React.PureComponent {\n  constructor(props) {\n    const {\n      width = 640,\n    } = props;\n\n    super(props);\n\n    this.width = width;\n    this.state = { progress: 0 };\n  }\n\n  componentDidUpdate() {\n    this.videoContext = this.props.videoContext;\n    this.setState({ duration: this.videoContext.duration });\n    this.updateProgress();\n  }\n\n  updateProgress = () => requestAnimationFrame(() => {\n    const currentTime = this.videoContext && this.videoContext.currentTime;\n    const progress = (currentTime / this.state.duration) * 100;\n\n    if (this.state.progress !== progress) this.setState({ progress });\n\n    requestAnimationFrame(this.updateProgress);\n  });\n\n  handleClick = ({ nativeEvent: { offsetX } }) => {\n    this.videoContext.currentTime =\n      (offsetX / this.width) * this.state.duration;\n  }\n\n  getTracks = () =>\n    this.state.duration && this.videoContext._sourceNodes.reverse().map(\n      ({ startTime, stopTime, elementURL }, i) => {\n        const marginLeft = (startTime / this.state.duration) * this.width;\n        const width =\n          ((stopTime - startTime) / this.state.duration) * this.width;\n        const key = `${elementURL.split('/').slice(-1).pop()}.${i}`;\n\n        return (\n          <div key={ key } style={ { pointerEvents: 'none' } } >\n            <div className={ styles.papercutsPlayerProgressTrackBuffer } />\n            <div className={ styles.papercutsPlayerProgressTrack }\n              style={ { width, marginLeft } }\n            />\n            <div className={ styles.papercutsPlayerProgressTrackBuffer }/>\n          </div>\n        );\n      });\n\n  render() {\n    if (!this.tracks) this.tracks = this.getTracks();\n\n    return (\n      <>\n        <div\n        // className='papercuts-player-progress papercuts-player-progress-back'\n          className={ [ styles.papercutsPlayerProgress, styles.papercutsPlayerProgressBack ].join(' ') }\n          onClick={ this.handleClick }\n          style={ { width: this.width } }\n        >\n          <div\n          // className='papercuts-player-progess papercuts-player-progress-front'\n            className={ [ styles.papercutsPlayerProgress, styles.papercutsPlayerProgressFront ].join(' ') }\n            style={ { width: `${this.state.progress}%` } }\n          >\n            { this.tracks }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default VideoContextProgressBar;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faPause, faStop } from '@fortawesome/free-solid-svg-icons';\n\nconst playIcon = <FontAwesomeIcon icon={ faPlay } />;\nconst pauseIcon = <FontAwesomeIcon icon={ faPause } />;\nconst stopIcon = <FontAwesomeIcon icon={ faStop } />;\n\nclass Controls extends React.PureComponent {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isPlaying: false\n    };\n  }\n\n  handlePlay = () => {\n    this.props.videoContext.play();\n    this.setState({ isPlaying: true });\n  }\n\n  handlePause = () => {\n    this.props.videoContext.pause();\n    this.setState({ isPlaying: false });\n  }\n\n  handleStop = () => {\n    this.props.videoContext.pause();\n    this.props.videoContext.currentTime = 0;\n    this.setState({ isPlaying: false });\n  }\n\n  render() {\n\n    return (\n      <>\n        <Col\n          sm={ 6 } md={ 6 } ld={ 6 } xl={ 6 }\n          // className={ 'col-auto' }\n        >\n          <Button\n            size=\"sm\"\n            block\n            variant=\"outline-secondary\"\n            onClick={ this.state.isPlaying ? this.handlePause : this.handlePlay }\n          >\n            { this.state.isPlaying ? pauseIcon : playIcon }\n          </Button>\n        </Col>\n        <Col\n          sm={ 6 } md={ 6 } ld={ 6 } xl={ 6 }\n          // className={ 'col-auto' }\n        >\n          <Button\n            size=\"sm\"\n            block\n            variant=\"outline-secondary\"\n            onClick={ this.handleStop }\n          >\n            { stopIcon }\n          </Button>\n        </Col>\n      </>\n    );\n  }\n}\n\nexport default Controls;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport VideoContextViewer from './VideoContextViewer';\nimport VideoContextProgressBar from './VideoContextProgressBar';\nimport VideoContextControls from './VideoContextControls';\nimport Row from 'react-bootstrap/Row';\n\nclass PreviewCanvas extends React.PureComponent {\n\n  constructor(props) {\n    const { playlist = [], width = 640 } = props;\n\n    super(props);\n\n    this.width = width;\n    this.height = (9 / 16) * this.width;\n\n    this.playlist = playlist;\n    this.videoContextRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.videoContext =\n      this.videoContextRef\n      && this.videoContextRef.current\n      && this.videoContextRef.current.videoContext;\n\n    this.forceUpdate();\n  }\n\n  render() {\n    return (\n      <>\n        <Row\n          className={ 'justify-content-center' }\n          style={ { backgroundColor: 'black' } }\n        >\n          <VideoContextViewer\n            ref={ this.videoContextRef }\n            playlist={ this.playlist }\n            width={ this.width }\n            height={ this.height }\n          />\n        </Row>\n        <Row\n          className={ 'justify-content-center' }\n          style={ { backgroundColor: 'lightgrey' } }\n        >\n          <VideoContextProgressBar\n            width={ this.width }\n            videoContext={ this.videoContext && this.videoContext }\n          />\n        </Row>\n        <Row\n          // noGutters\n          // className={ 'justify-content-center' }\n          style={\n            {\n              marginTop: '0.4em'\n            }\n          }\n        >\n          <VideoContextControls\n            videoContext={ this.videoContext && this.videoContext }\n          />\n        </Row>\n      </>\n    );\n  }\n};\n\nexport default PreviewCanvas;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMicrophoneAlt } from '@fortawesome/free-solid-svg-icons';\n\nclass VoiceOver extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <p className={ 'text-muted' }>\n          <FontAwesomeIcon icon={ faMicrophoneAlt } /> { this.props.text }\n        </p>\n      </>\n    );\n  }\n}\n\nexport default VoiceOver;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass PaperCut extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    let words;\n    if (this.props.words) {\n      // TODO could wrap words in span and add timecodes\n      // to make it cliccable on programme script\n      words = this.props.words.map((w, index) => {return (\n        // eslint-disable-next-line react/jsx-key\n        <span\n          // TODO: add w.id to words to us as index?\n          key={ w.start + index }\n          className=\"words\"\n          title={ `stat: ${ w.start }- end: ${ w.end }` }\n          data-start={ w.start }\n          data-end={ w.end }\n        >{w.text} </span>);});\n    }\n\n    return (\n      <>\n        <Row>\n          <Col sm={ 3 } className={ 'text-truncate text-muted' }\n          // TODO: could add timecode from eg -  ${ shortTimecode(this.props.words[0].start) }\n          // TODO: Could add transcript name along side the timecode for the paper-cut\n            title={ `${ this.props.speaker.toUpperCase() }` }\n            style={ { userSelect: 'none' } }>\n            <strong>{this.props.speaker.toUpperCase()}</strong>\n            {/* <br/> */}\n            {/* <u style={ { cursor: 'pointer' } }>00:01:20</u> */}\n            {/* <br/> */}\n            {/* <FontAwesomeIcon icon={ faTag } />TagExample */}\n          </Col>\n          <Col sm={ 9 }>\n            {/* <p>{ JSON.stringify(this.props.words) }</p> */}\n            { words }\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default PaperCut;\n","import React, { Component } from 'react';\n\nclass TitleHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <h4>{this.props.title}</h4>\n    );\n  }\n}\n\nexport default TitleHeading;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStickyNote } from '@fortawesome/free-solid-svg-icons';\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n\n  render() {\n    return (\n      <p className={ 'text-secondary' }>\n        <FontAwesomeIcon icon={ faStickyNote } /> { this.props.text }\n      </p>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport {\n  sortableContainer,\n  sortableElement,\n  sortableHandle\n} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport VoiceOver from './VoiceOver';\nimport PaperCut from './PaperCut';\nimport TitleHeading from './TitleHeading';\nimport Note from './Note';\n\nimport {\n  faGripLines,\n  faPen,\n  faTrash,\n  faArrowAltCircleLeft,\n  faArrowAltCircleRight\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst InsertPoint = (({ text }) => <span style={ { width: '100%', backgroundColor: 'orange', color: 'white' } }> <FontAwesomeIcon icon={ faArrowAltCircleRight } /> {text} </span>);\n\nconst DragHandle = sortableHandle(() => <span> <FontAwesomeIcon icon={ faGripLines } /> </span>);\n\nconst SortableItem = sortableElement(({ value, index, type, handleDelete, handleEdit }) => {\n  return (<li>\n    <Row>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        <DragHandle />\n      </Col>\n      <Col xs={ 8 } sm={ 9 } md={ 9 } ld={ 9 } xl={ 9 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {value}\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: if paper-cut  then don't show edit/pen icon */}\n        {type !== 'paper-cut' && type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faPen } onClick={ () => { handleEdit(index); } } /> : null}\n\n      </Col>\n      <Col xs={ 1 } sm={ 1 } md={ 1 } ld={ 1 } xl={ 1 } style={ { backgroundColor: type === 'insert-point' ? 'orange' : '' } }>\n        {/* TODO: pass a prop to remove element from list */}\n        {type !== 'insert-point' ? <FontAwesomeIcon className={ 'text-muted' } icon={ faTrash } onClick={ () => {handleDelete(index);} } /> : null}\n        {type === 'insert-point' ? <FontAwesomeIcon style={ { color: 'white' } } icon={ faArrowAltCircleLeft } /> : null}\n      </Col>\n    </Row>\n  </li>);\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n\n  return <ul style={ { listStyle: 'none', padding: '0px' } }>{children}</ul>;\n});\n\nclass ProgrammeScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // items: this.props.programmeScript ? this.props.programmeScript.elements : []\n      // items: [ 'Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6' ]\n    };\n  }\n\n  onSortEnd = ({ oldIndex, newIndex }) => {\n    // this.setState(({ items }) => ({\n    //   items:\n    // })\n    // );\n    const result = arrayMove(this.props.programmeScriptElements, oldIndex, newIndex);\n    console.log(result);\n    this.props.handleProgrammeScriptOrderChange(result);\n  };\n\n  render() {\n    // const { items } = this.state;\n    let programme;\n    let sortableProgramme;\n    if (this.props.programmeScriptElements) {\n      programme = this.props.programmeScriptElements.map((el) => {\n        switch (el.type) {\n        case 'title':\n          return { el:<TitleHeading key={ el.id } title={ el.text } />, type: el.type };\n        case 'voice-over':\n          return { el:<VoiceOver key={ el.id } text={ el.text } />, type: el.type };\n        case 'paper-cut':\n          return { el: <PaperCut key={ el.id } el={ el } speaker={ el.speaker } words={ el.words }/>, type: el.type };\n        case 'note':\n          return { el: <Note key={ el.id } text={ el.text } />, type: el.type };\n        case 'insert-point':\n          return { el: <InsertPoint text={ el.text } />, type: el.type };\n        default:\n          console.error('invalid programme element type');\n\n          return null;\n        }\n      });\n    }\n\n    if (this.props.programmeScriptElements) {\n      sortableProgramme = <SortableContainer useDragHandle onSortEnd={ this.onSortEnd }>\n        {programme.map((value, index) => (\n          <SortableItem\n            key={ `item-${ index }` }\n            index={ index }\n            value={ value.el }\n            type={ value.type }\n            handleDelete={ this.props.handleDeleteProgrammeScriptElement }\n            handleEdit={ this.props.handleEditProgrammeScriptElement }\n          />\n        ))}\n      </SortableContainer>;\n    }\n\n    return (\n      <>\n        {/* {programme} */}\n        { sortableProgramme }\n      </>\n    );\n  }\n}\n\nexport default ProgrammeScript;\n","/**\n * Gets the start and end time for a range of words elements selected by a user on the page\n * https://github.com/OpenNewsLabs/autoEdit_2/blob/master/lib/app/views/transcription_view.js#L47\n *\n * TODO: check in chrome, firefox, and safari?\n */\n\nfunction parseWordElDataset(wordEl) {\n\n  return {\n    start: wordEl.dataset.start,\n    end: wordEl.dataset.end,\n    // you could also get the word from wordEl.dataset.text\n    // but the word there is lowercase and without punctuation coz is used\n    // for the search  functionality so using innerText\n    // to preserve punctuation and capitalization\n    text: wordEl.innerText,\n    speaker: wordEl.dataset.speaker,\n    transcriptId: wordEl.dataset.transcriptId\n  };\n}\n\n/**\n * TODO: at the moment only works for selections within a paragraph\n * @param {*} e - browser event\n * @returns - an object with start and end time - eg {stat: \"23.03\", end: \"39.61\"}\n */\nfunction getDataFromUserWordsSelection(e) {\n  // https://stackoverflow.com/questions/11300590/how-to-captured-selected-text-range-in-ios-after-text-selection-expansion\n  // https://jsfiddle.net/JasonMore/gWZfb/\n  if (!window.getSelection().isCollapsed) {\n    const selectedRange = window.getSelection().getRangeAt(0).cloneContents();\n\n    // Seems like this work no matter if the selection is made left to right\n    // or right to left form the user\n    const words = selectedRange.querySelectorAll('.words');\n\n    if (words.length !== 0) {\n\n      return {\n        start: parseFloat(words[0].dataset.start),\n        end: parseFloat(words[words.length - 1].dataset.end),\n        transcriptId: words[0].dataset.transcriptId,\n        speaker: words[0].dataset.speaker,\n        // words: words\n        words: Array.from(words).map((w) => {return parseWordElDataset(w);})\n      };\n    }\n    else {\n      // handles selection of single word\n      // if selected a single word - then selection is on text element\n      // and we want to get to parent element, span with words class\n      const word = window.getSelection().anchorNode.parentElement;\n      if (word.className === 'words') {\n        return {\n          start: parseFloat(word.dataset.start),\n          end: parseFloat(word.dataset.end),\n          transcriptId: word.dataset.transcriptId,\n          speaker: word.dataset.speaker,\n          words: [ parseWordElDataset(word) ]\n        };\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}\n\nexport default getDataFromUserWordsSelection;","//  if the speaker of all the words is the same we can assume is one paragraph\nconst isOneParagraph = words => {\n  const firstword = words[0];\n\n  const result = words.filter(word => {\n    return word.speaker !== firstword.speaker;\n  });\n\n  return result.length === 0;\n};\n\n/**\n * helper function to determine if an element is last one in a list\n * based on the index\n */\nconst isLastElement = (elementIndex, list) => {\n  return elementIndex === (list.length - 1);\n};\nconst divideWordsSelectionsIntoParagraphs = words => {\n  if (isOneParagraph(words)) {\n    return words;\n  }\n  // initialising previous word speaker with speaker of first word\n  let previousWordSpeaker = words[0].speaker;\n  let currentParagraph = [];\n  const paragraphsResult = [];\n\n  words.forEach((word, index) => {\n    if (word.speaker === previousWordSpeaker) {\n      currentParagraph.push(word);\n    } else {\n      paragraphsResult.push(currentParagraph);\n      currentParagraph = [];\n      // if (isLastElement(index, words)) {\n      currentParagraph.push(word);\n      // }\n\n      previousWordSpeaker = word.speaker;\n    }\n\n    // Handling last paragraph\n    if (isLastElement(index, words)) {\n      // currentParagraph.push(word);\n      paragraphsResult.push(currentParagraph);\n    }\n  });\n\n  return paragraphsResult;\n  // return paragraphsResult.reverse();\n};\n\n// divideWordsSelectionsIntoParagraphs(result.words);\nexport { divideWordsSelectionsIntoParagraphs, isOneParagraph };\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport cuid from 'cuid';\nimport Tab from 'react-bootstrap/Tab';\nimport Card from 'react-bootstrap/Card';\nimport PreviewCanvas from './PreviewCanvas/index.js';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport EDL from 'edl_composer';\nimport generateADL from '@bbc/aes31-adl-composer';\nimport jsonToFCPX from '@bbc/fcpx-xml-composer';\nimport downloadjs from 'downloadjs';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faShare,\n  faMicrophoneAlt,\n  faStickyNote,\n  faHeading,\n  faPlus,\n  faSync,\n  faInfoCircle,\n  faSave\n} from '@fortawesome/free-solid-svg-icons';\nimport timecodes from 'node-timecodes';\nimport ProgrammeScript from './ProgrammeScript.js';\nimport getDataFromUserWordsSelection from './get-data-from-user-selection.js';\nimport { divideWordsSelectionsIntoParagraphs, isOneParagraph } from './divide-words-selections-into-paragraphs/index.js';\nimport ApiWrapper from '../../../../ApiWrapper/index.js';\n\nconst defaultReelName = 'NA';\nconst defaultFps = 25;\nconst defaultTimecodeOffset = '00:00:00:00';\nconst defaultSampleRate = '16000';\n\nclass ProgramScript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      programmeScript: null,\n      resetPreview: false,\n      // demo content\n      playlist:[\n        // start - is relative to timeline\n        // duration - of clip in playlist\n        // sourceStart - time from start of clip in playlist\n        // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n        // { type:'video', start:10, sourceStart: 40, duration:10, src:'https://download.ted.com/talks/IvanPoupyrev_2019.mp4' },\n        // { type:'video', start:20, sourceStart: 50, duration:10, src:'https://download.ted.com/talks/KateDarling_2018S-950k.mp4' },\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    ApiWrapper.getPaperEdit(this.props.projectId, this.props.papereditId)\n      .then((json) => {\n        const programmeScript = json.programmeScript;\n        // Adding an insert point at the end of the list\n        programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n        this.setState({\n          programmeScript: programmeScript\n        }\n        // TODO: figure out how to update preview\n        // , () => {\n        //   this.handleUpdatePreview();\n        // }\n        );\n      });\n\n  }\n\n  // TODO: save to server\n  handleProgrammeScriptOrderChange = (list) => {\n    console.log('handleProgrammeScriptOrderChange', list);\n    this.setState(({ programmeScript }) => {\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  // TODO: save to server\n  handleDeleteProgrammeScriptElement = (i) => {\n    // TODO: add a prompt, like are you shure you want to delete, confirm etc..?\n    // alert('handle delete');\n    console.log(i);\n    this.setState(({ programmeScript }) => {\n      const index = i;\n      const list = programmeScript.elements;\n      list.splice(index, 1);\n      programmeScript.elements = list;\n\n      return {\n        programmeScript: programmeScript\n      };\n    }\n    );\n  }\n\n  handleEditProgrammeScriptElement = (i) => {\n    console.log(i);\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    const currentElement = elements[i];\n    const newText = prompt('Edit', currentElement.text);\n    console.log(newText);\n    if (newText) {\n      currentElement.text = newText;\n      elements[i] = currentElement;\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n      // TODO: consider using set state function to avoid race condition? if needed?\n      // this.setState(({ programmeScript }) => {\n      //   return {\n      //     programmeScript: programmeScript\n      //   };\n      // });\n    }\n  }\n\n  handleAddTranscriptElementToProgrammeScript = (elementType) => {\n    const { programmeScript } = this.state;\n    const elements = this.state.programmeScript.elements;\n    // TODO: refactor - with helper functions\n    if (elementType === 'title'\n      || elementType === 'note'\n      || elementType === 'voice-over') {\n      const text = prompt('Add some text for a section title', 'Some place holder text');\n      console.log(text);\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      const newElement = {\n        id: cuid(),\n        index: elements.length,\n        type: elementType,\n        text: text\n      };\n      elements.splice(indexOfInsertPoint, 0, newElement);\n      programmeScript.elements = elements;\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n  }\n\n  getIndexPositionOfInsertPoint = () => {\n    const { programmeScript } = this.state;\n    const elements = programmeScript.elements;\n    // find insert point in list,\n    const insertPointElement = elements.find((el) => {\n      return el.type === 'insert-point';\n    });\n    // get insertpoint index\n    const indexOfInsertPoint = elements.indexOf(insertPointElement);\n\n    return indexOfInsertPoint;\n  }\n\n  // TODO: save to server\n  // TODO: needs to handle when selection spans across multiple paragraphs\n  handleAddTranscriptSelectionToProgrammeScript = () => {\n    const result = getDataFromUserWordsSelection();\n    console.log('getDataFromUserWordsSelection::', result);\n    if (result) {\n      console.log(JSON.stringify(result, null, 2));\n\n      // result.words\n      // TODO: if there's just one speaker in selection do following\n      // if it's multiple split list of words into multiple groups\n      // and add a papercut for each to the programme script\n      const { programmeScript } = this.state;\n      const elements = programmeScript.elements;\n      // TODO: insert at insert point\n\n      const indexOfInsertPoint = this.getIndexPositionOfInsertPoint();\n      if (isOneParagraph(result.words)) {\n        // create new element\n        // TODO: Create new element could be refactored into helper function\n        const newElement = {\n          id: cuid(),\n          index: elements.length,\n          type: 'paper-cut',\n          start:result.start,\n          end: result.end,\n          speaker: result.speaker,\n          words: result.words,\n          transcriptId: result.transcriptId,\n          labelId: []\n        };\n        // add element just above of insert point\n        elements.splice(indexOfInsertPoint, 0, newElement);\n        programmeScript.elements = elements;\n      }\n      else {\n        const paragraphs = divideWordsSelectionsIntoParagraphs(result.words);\n        paragraphs.reverse().forEach((paragraph) => {\n          const newElement = {\n            id: cuid(),\n            index: elements.length,\n            type: 'paper-cut',\n            start:paragraph[0].start,\n            end: paragraph[paragraph.length - 1].end,\n            speaker: paragraph[0].speaker,\n            words: paragraph,\n            transcriptId: paragraph[0].transcriptId,\n            // TODO: ignoring labels for now\n            labelId: []\n          };\n          // add element just above of insert point\n          elements.splice(indexOfInsertPoint, 0, newElement);\n          programmeScript.elements = elements;\n        });\n      }\n      // TODO: save to server\n      this.setState({\n        programmeScript: programmeScript\n      });\n    }\n    else {\n      alert('Select some text in the transcript to add to the programme script');\n      console.log('nothing selected');\n    }\n  }\n\n  /**\n   * Helper function to create json EDL for other EDL/ADL/FPCX export\n   */\n  getSequenceJsonEDL = () => {\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          // TODO: if there is an offset this should added here, for now hard coding 0\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate\n        };\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n\n    return edlSq;\n  }\n\n  // https://www.npmjs.com/package/downloadjs\n  // https://www.npmjs.com/package/edl_composer\n  handleExportEDL = () => {\n    const edlSq = this.getSequenceJsonEDL();\n    const edl = new EDL(edlSq);\n    console.log(edl.compose());\n    downloadjs(edl.compose(), `${ this.state.programmeScript.title }.edl`, 'text/plain');\n  }\n\n  handleExportADL = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    const firstElement = edlSq.events[0];\n    // const result = generateADL(edlSq);\n    const result = generateADL({\n      projectOriginator: 'Digital Paper Edit',\n      // TODO: it be good to change sequence for the ADL to be same schema\n      // as the one for EDL and FCPX - for now just adjusting\n      edits: edlSq.events.map((event) => {\n        return {\n          start: event.startTime,\n          end: event.endTime,\n          clipName: event.clipName,\n          // TODO: could add a label if present\n          label: ''\n        };\n      }),\n      sampleRate: firstElement.sampleRate,\n      frameRate: firstElement.fps,\n      projectName: edlSq.title\n    });\n    downloadjs(result, `${ this.state.programmeScript.title }.adl`, 'text/plain');\n  }\n\n  handleExportFCPX = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = this.getSequenceJsonEDL();\n    console.log(edlSq);\n    const result = jsonToFCPX(edlSq);\n    downloadjs(result, `${ this.state.programmeScript.title }.fcpxml`, 'text/plain');\n  }\n\n  getProgrammeScriptJson = () => {\n    // alert('this function has not been implemented yet');\n    const edlSq = {\n      'title': this.state.programmeScript.title,\n      'events': [ ]\n    };\n\n    const programmeScriptPaperCuts = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        console.log('paper-cut::', element);\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n\n        const result = {\n          ...element,\n          startTime: element.start,\n          endTime: element.end,\n          reelName:  currentTranscript.metadata ? currentTranscript.metadata.reelName : defaultReelName,\n          clipName: `${ currentTranscript.clipName }`,\n          // TODO: frameRate should be pulled from the clips in the sequence\n          // Changing to 24 fps because that is the frame rate of the ted talk examples from youtube\n          // but again frameRate should not be hard coded\n          fps: currentTranscript.metadata ? currentTranscript.metadata.fps : defaultFps,\n          sampleRate:  currentTranscript.metadata ? currentTranscript.metadata.sampleRate : defaultSampleRate,\n          offset:  currentTranscript.metadata ? currentTranscript.metadata.timecode : defaultTimecodeOffset\n        };\n\n        return result;\n      }\n      else {\n        return element;\n      }\n\n    }).filter((el) => {return el !== null;});\n    // adding ids to EDL\n    const programmeScriptPaperCutsWithId = programmeScriptPaperCuts.map((el, index) => {\n      el.id = index + 1;\n\n      return el;\n    });\n    edlSq.events.push(...programmeScriptPaperCutsWithId);\n    console.log(edlSq);\n\n    return edlSq;\n  }\n\n  programmeScriptJsonToText = (edlsqJson) => {\n    const title = `# ${ edlsqJson.title }\\n\\n`;\n    const body = edlsqJson.events.map((event) => {\n      if (event.type === 'title') {\n        return `## ${ event.text }`;\n      }\n      else if (event.type === 'voice-over') {\n        return `_${ event.text }_`;\n\n      }\n      else if (event.type === 'note') {\n        return `[ ${ event.text }]`;\n      }\n      else if (event.type === 'paper-cut') {\n        return `${ timecodes.fromSeconds(event.startTime) }\\t${ timecodes.fromSeconds(event.endTime) }\\t${ event.speaker }\\t-\\t${ event.clipName }     \\n${ event.words.map((word) => {return word.text;}).join(' ') }`;\n      }\n\n      return null;\n    });\n\n    return `${ title }${ body.join('\\n\\n') }`;\n  }\n\n  handleExportJson = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = JSON.stringify(programmeScriptJson, null, 2);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.json`, 'text/plain');\n  }\n\n  handleExportTxt = () => {\n    const programmeScriptJson = this.getProgrammeScriptJson();\n    const programmeScriptText = this.programmeScriptJsonToText(programmeScriptJson);\n    downloadjs(programmeScriptText, `${ this.state.programmeScript.title }.txt`, 'text/plain');\n  }\n\n  handleUpdatePreview = () => {\n    let timelineStartTime = 0;\n    //  const { playlist } = this.state;\n    // { type:'video', start:0, sourceStart: 30, duration:10, src:'https://download.ted.com/talks/MorganVague_2018X.mp4' },\n    const playlist = this.state.programmeScript.elements.map((element) => {\n      if (element.type === 'paper-cut') {\n        // Get clipName for current transcript\n        const currentTranscript = this.props.transcripts.find((tr) => {\n          return tr.id === element.transcriptId;\n        });\n        const duration = element.end - element.start;\n        // TODO: handle audio only type (eg for radio), get from transcript json?\n        const result = {\n          type:'video',\n          start: timelineStartTime,\n          sourceStart: element.start,\n          duration: duration,\n          src: currentTranscript.url\n        };\n\n        timelineStartTime += duration;\n\n        return result;\n      }\n\n      return null;\n    }).filter((el) => {return el !== null;});\n\n    // Workaround to mound and unmoun the `PreviewCanvas` component\n    // to update the playlist\n    this.setState({\n      resetPreview: true\n    }, () => {\n      console.log('handleUpdatePreview', playlist);\n      this.setState({\n        resetPreview: false,\n        playlist: playlist\n      });\n    });\n    console.log('handleUpdatePreview', playlist);\n    this.setState({\n      playlist: playlist\n    });\n  }\n\n  handleDoubleClickOnProgrammeScript = (e) => {\n\n    if (e.target.className === 'words') {\n      const wordCurrentTime = e.target.dataset.start;\n      // TODO: set current time in preview canvas\n      // Video context probably needs more info like, which clip/track in the sequence?\n      // investigate how to set currentTime in video context\n      console.log('wordCurrentTime::', wordCurrentTime);\n    }\n  }\n\n  handleSaveProgrammeScript = () => {\n    const { programmeScript } = this.state;\n    if (programmeScript) {\n      const elements = programmeScript.elements;\n      // finding an removing insert point before saving to server\n      // find insert point in list,\n      const insertPointElement = elements.find((el) => {\n        return el.type === 'insert-point';\n      });\n      if (insertPointElement) {\n        // get insertpoint index\n        const indexOfInsertPoint = elements.indexOf(insertPointElement);\n        elements.splice(indexOfInsertPoint, 1);\n      }\n\n      programmeScript.elements = elements;\n      ApiWrapper.updatePaperEdit(this.props.projectId, this.props.papereditId, programmeScript)\n        .then((json) => {\n          if (json.status === 'ok') {\n            alert('saved programme script');\n          }\n          // const programmeScript = json.programmeScript;\n          // Adding an insert point at the end of the list\n          // programmeScript.elements.push({ type: 'insert-point', text: 'Insert Point to add selection' });\n          // this.setState({\n          //   programmeScript: programmeScript\n          // }\n          // TODO: figure out how to update preview\n          // , () => {\n          //   this.handleUpdatePreview();\n          // }\n          // );\n        });\n    }\n  }\n\n  render() {\n    return (\n\n      <>\n        <h2\n          className={ [ 'text-truncate', 'text-muted' ].join(' ') }\n          title={ `Programme Script Title: ${ this.state.programmeScript ? this.state.programmeScript.title : '' }` }>\n          {/* Programme:  */}\n          {/* <small> */}\n          {this.state.programmeScript ? this.state.programmeScript.title : ''}\n          {/* </small> */}\n        </h2>\n        <Card>\n          <Card.Header>\n            {/* <hr/> */}\n            { !this.state.resetPreview ?\n              <PreviewCanvas playlist={ this.state.playlist } width={ '300' }/>\n              : null }\n          </Card.Header>\n          <Card.Header>\n\n            <Row noGutters>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Button\n                  // block\n                  variant=\"outline-secondary\"\n                  onClick={ this.handleAddTranscriptSelectionToProgrammeScript }\n                  title=\"Add a text selection, select text in the transcript, then click this button to add it to the programme script\"\n                >\n                  <FontAwesomeIcon icon={ faPlus } /> Selection\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 2 } ld={ 2 } xl={ 2 }>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faPlus } />\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('title');} }\n                      title=\"Add a title header element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faHeading } /> Heading\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('voice-over');} }\n                      title=\"Add a title voice over element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faMicrophoneAlt } /> Voice Over\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {this.handleAddTranscriptElementToProgrammeScript('note');} }\n                      title=\"Add a note element to the programme script\"\n                    >\n                      <FontAwesomeIcon icon={ faStickyNote } /> Note\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleUpdatePreview }\n                  // size=\"sm\"\n                  title=\"update preview\"\n                  // block\n                >\n                  <FontAwesomeIcon icon={ faSync } /> Preview\n                </Button>\n              </Col>\n              <Col sm={ 12 } md={ 3 } ld={ 3 } xl={ 3 }>\n                <Dropdown>\n                  <Dropdown.Toggle variant=\"outline-secondary\">\n                    <FontAwesomeIcon icon={ faShare } /> Export\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item\n                      onClick={ this.handleExportEDL }\n                      title=\"export EDL, edit decision list, to import the programme script as a sequence in video editing software - Avid, Premiere, Davinci Resolve, for FCPX choose FCPX XML\"\n                    >\n                    EDL - Video <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportADL }\n                      title=\"export ADL, audio decision list, to import the programme script as a sequence in audio editing software such as SADiE\"\n                    >\n                      {/* <FontAwesomeIcon icon={ faFileExport } />  */}\n                  ADL - Audio  <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ this.handleExportFCPX }\n                      title=\"export FCPX XML, to import the programme script as a sequence in Final Cut Pro X, video editing software\"\n                    >\n                  FCPX <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportTxt }\n                      title=\"export Text, export the programme script as a text version\"\n                    >\n                  Text File <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Item\n                      onClick={ () => {alert('export word doc not implemented yet');} }\n                      title=\"export docx, export the programme script as a word document\"\n                    >\n                  Word Document <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item\n                      onClick={ this.handleExportJson }\n                      title=\"export Json, export the programme script as a json file\"\n                    >\n                  Json <FontAwesomeIcon icon={ faInfoCircle } />\n                    </Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Col>\n              <Col sm={ 12 } md={ 1 } ld={ 1 } xl={ 1 }>\n                <Button variant=\"outline-secondary\"\n                  onClick={ this.handleSaveProgrammeScript }\n                  // size=\"sm\"\n                  title=\"save programme script\"\n                  block\n                >\n                  <FontAwesomeIcon icon={ faSave } />\n                  {/* Save */}\n                </Button>\n              </Col>\n            </Row>\n\n          </Card.Header>\n          <Card.Body>\n            <article\n              style={ { height: '60vh', overflow: 'scroll' } }\n              onDoubleClick={ this.handleDoubleClickOnProgrammeScript }\n            >\n              { this.state.programmeScript ? <ProgrammeScript\n                programmeScriptElements={ this.state.programmeScript.elements }\n                handleProgrammeScriptOrderChange={ this.handleProgrammeScriptOrderChange }\n                handleDeleteProgrammeScriptElement={ this.handleDeleteProgrammeScriptElement }\n                handleEditProgrammeScriptElement={ this.handleEditProgrammeScriptElement }\n\n              />\n                : null }\n            </article>\n          </Card.Body>\n        </Card>\n      </>\n    );\n  }\n}\n\nexport default ProgramScript;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faAngleUp,\n  faAngleDown\n} from '@fortawesome/free-solid-svg-icons';\nimport CustomBreadcrumb from '../../lib/CustomBreadcrumb/index.js';\nimport CustomFooter from '../../lib/CustomFooter/index.js';\n\nimport Transcripts from './Transcripts/index.js';\nimport ProgramScript from './ProgramScript/index.js';\nimport ApiWrapper from '../../../ApiWrapper/index.js';\n\nclass PaperEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectId:  this.props.match.params.projectId,\n      papereditId:  this.props.match.params.papereditId,\n      projectTitle: '',\n      programmeTitle: '',\n      transcripts: [],\n      labelsOptions: [],\n      isTranscriptsShown: true,\n      isProgramScriptShown: true,\n      // annotations:[]\n    };\n  }\n\n  componentDidMount = async () => {\n\n    ApiWrapper.get_ProgrammeScriptAndTranscripts(this.state.projectId, this.state.papereditId)\n      .then((json) => {\n        this.setState({\n          programmeTitle: json.programmeScript.title,\n          projectTitle: json.project.title,\n          transcripts: json.transcripts,\n          labelsOptions: json.labels\n        });\n      });\n  }\n\n  toggleTranscripts =() => {\n    if (this.state.isProgramScriptShown ) {\n      this.setState((state) => {\n        return {\n          isTranscriptsShown: !state.isTranscriptsShown\n        };\n      });\n    }\n  }\n\n  toggleProgramScript = () => {\n    if (this.state.isTranscriptsShown ) {\n      this.setState((state) => {\n        return {\n          isProgramScriptShown: !state.isProgramScriptShown\n        };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container style={ { marginBottom: '5em' } } fluid>\n        <br/>\n        <Row>\n          <Col sm={ 12 } md={ 12 } ld={ 12 } xl={ 12 }>\n            <CustomBreadcrumb\n              items={ [ {\n                name: 'Projects',\n                link: '/projects'\n              },\n              {\n                name: `Project: ${ this.state.projectTitle }`,\n                link: `/projects/${ this.state.projectId }`\n              },\n              {\n                name: 'PaperEdits',\n              },\n              {\n                name: `${ this.state.programmeTitle }`\n              }\n              ] }\n            />\n          </Col>\n          {/* <Col xs={ 12 } sm={ 2 } md={ 2 } ld={ 2 } xl={ 2 }>\n            <Button variant=\"outline-secondary\" onClick={ this.saveToServer } size=\"lg\" block>\n              Save\n            </Button>\n          </Col> */}\n        </Row>\n\n        <Container fluid={ true }>\n          <div className=\"d-flex flex-column\">\n            <ButtonGroup\n              size=\"sm\" className=\"mt-12\"\n            >\n              <Button\n                onClick={ this.toggleTranscripts }\n                variant={ this.state.isTranscriptsShown ? 'secondary' : 'outline-secondary' }\n              >\n               Transcripts <FontAwesomeIcon icon={ this.state.isTranscriptsShown ? faAngleDown : faAngleUp } /> { this.state.isTranscriptsShown ? 'hide' : 'show'}\n              </Button>\n              <Button\n                onClick={ this.toggleProgramScript }\n                variant={ this.state.isProgramScriptShown ? 'secondary' : 'outline-secondary' }\n              >\n                 Program Script  <FontAwesomeIcon icon={ this.state.isProgramScriptShown ? faAngleDown : faAngleUp } />  { this.state.isProgramScriptShown ? 'hide' : 'show'}\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          <Row>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isProgramScriptShown ? 7 : 12,\n                offset: this.state.isProgramScriptShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isProgramScriptShown ? 7 : 10,\n                offset: this.state.isProgramScriptShown ? 0 : 1\n              } }\n              style={ { display: this.state.isTranscriptsShown ? 'block' : 'none' } }\n            >\n              { this.state.transcripts.length ?\n                <Transcripts\n                  projectId={ this.state.projectId }\n                  transcripts={ this.state.transcripts }\n                  labelsOptions={ this.state.labelsOptions }\n                />\n                : <><br/><br/><i>No Transcripts, create a transcript to get started</i></>}\n            </Col>\n            <Col\n              xs={ { span: 12, offset:0 } }\n              sm={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              md={ {\n                span: this.state.isTranscriptsShown ? 5 : 12,\n                offset: this.state.isTranscriptsShown ? 0 : 0\n              } }\n              lg={ {\n                span: this.state.isTranscriptsShown ? 5 : 10,\n                offset: this.state.isTranscriptsShown ? 0 : 1\n              } }\n              xl={ {\n                span: this.state.isTranscriptsShown ? 5 : 8,\n                offset: this.state.isTranscriptsShown ? 0 : 2\n              } }\n              style={ { display: this.state.isProgramScriptShown ? 'block' : 'none' } }\n            >\n              <ProgramScript\n                projectId={ this.state.projectId }\n                papereditId={ this.state.papereditId }\n                transcripts={ this.state.transcripts }\n              />\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nexport default PaperEdit;\n","import React, { Component } from 'react';\nimport { Switch, Route, HashRouter } from 'react-router-dom';\nimport 'bootstrap-css-only/css/bootstrap.css';\nimport Projects from './Components/Projects/index.js';\nimport Project from './Components/Projects/Project.js';\nimport TranscriptCorrect from './Components/Transcripts/TranscriptCorrect.js';\nimport PaperEdit from './Components/PaperEdits/PaperEdit';\nimport CustomAlert from './Components/lib/CustomAlert';\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nconst demoWarningMessage = (<><p> This is a demo version of the app <Alert.Link href=\"https://github.com/bbc/digital-paper-edit-client\" target=\"_blank\" rel=\"noopener noreferrer\"\n>see project Github repository for more info</Alert.Link>. </p><p>This is a read-only demo you can only play around with existing projects!</p></>);\n\nconst NoMatch = () => {\n  return <h1>There was an error loading the page you requested</h1>;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      transcriptJson: null\n    };\n  }\n  // TODO: remove unused rootes\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    let envWarning = null;\n    let offlineWarning = null;\n\n    if (process.env.REACT_APP_NODE_ENV === 'demo') {\n      envWarning = (\n        <Container>\n          <CustomAlert\n            variant={ 'warning' }\n            heading={ 'Demo mode' }\n            message={ demoWarningMessage }/>\n        </Container>);\n    }\n\n    if (!navigator.onLine) {\n      offlineWarning = <><br/><Container>\n        <CustomAlert\n          variant={ 'warning' }\n          heading={ 'Offline warning' }\n          message={ 'You don\\'t seem to be connected to the internet ' }/>\n      </Container></>;\n    }\n\n    return (<>\n\n      {envWarning}\n\n      {offlineWarning}\n\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={ Projects } />\n          <Route exact path=\"/projects\" component={ Projects } />\n          <Route exact path=\"/projects/:projectId\" component={ Project } />\n          <Route\n            exact\n            path=\"/projects/:projectId/transcripts/:transcriptId/correct\"\n            component={ TranscriptCorrect }\n          />\n          <Route\n            exact\n            path=\"/projects/:projectId/paperedits/:papereditId\"\n            component={ PaperEdit }\n          />\n          <Route component={ NoMatch } />\n        </Switch>\n      </HashRouter>\n    </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"papercutsPlayerProgress\":\"VideoContextProgressBar_papercutsPlayerProgress__3Ob4p\",\"papercutsPlayerProgressBack\":\"VideoContextProgressBar_papercutsPlayerProgressBack__1Wjfn\",\"papercutsPlayerProgressFront\":\"VideoContextProgressBar_papercutsPlayerProgressFront__3ggno\",\"papercutsPlayerProgressTrack\":\"VideoContextProgressBar_papercutsPlayerProgressTrack__5E6Ba\",\"papercutsPlayerProgressTrackBuffer\":\"VideoContextProgressBar_papercutsPlayerProgressTrackBuffer__1yKEJ\"};"],"sourceRoot":""}